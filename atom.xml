<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Mobile Development]]></title>
  <subtitle><![CDATA[移动开发]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-08-14T09:41:01.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[weifeng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Django入门学习]]></title>
    <link href="http://yoursite.com/2015/08/13/use-django-create-db/"/>
    <id>http://yoursite.com/2015/08/13/use-django-create-db/</id>
    <published>2015-08-13T09:20:50.000Z</published>
    <updated>2015-08-14T09:41:01.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Python连接并使用MySQL">Python连接并使用MySQL</h3><ul>
<li>在此之前得先安装MySQL,如果安装好了可以跳过,直接进入安装MySQL-Python,不然会出现<code>EnvironmentError: mysql_config not found</code>错误</li>
<li><code>brew install mysql</code></li>
<li>将MySQL添加到系统环境变量中去 <code>export PATH=$PATH:/usr/local/Cellar/mysql/5.6.25/bin</code> 或者 <code>export PATH=$PATH:/usr/local/opt/mysql/bin</code></li>
<li>使用pip活着easy_install安装MySQL-Python <code>pip install MySQL-Python</code> 或者 <code>sudo easy_install MySQL-Python</code>.<a id="more"></a>
<img src="http://7xk9ih.com1.z0.glb.clouddn.com/install_mysql.png" alt="MySQL" title="MySQL"></li>
</ul>
<h3 id="启动MySQL">启动MySQL</h3><ul>
<li><code>mysql.server start</code></li>
</ul>
<h3 id="使用MySQL并创建数据库">使用MySQL并创建数据库</h3><ul>
<li><code>mysql -uroot #以root用户身份登陆</code></li>
<li>创建数据库并设置字符集 <code>create database 数据库名 default charset = utf8;</code></li>
<li>显示所有数据库 <code>show databases;</code></li>
<li>使用某个数据库 <code>use 数据库名;</code></li>
<li>显示所有该数据库下的表 <code>show tables;</code></li>
<li>显示某张表数据结构 <code>desc 表名;</code></li>
</ul>
<h3 id="创建项目和app">创建项目和app</h3><ul>
<li><code>django-admin.py startproject 项目名</code></li>
<li><code>django-admin.py startapp app名</code></li>
<li><p>修改/项目名/项目名/settings.py和urls.py</p>
<ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">   <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">   <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">   <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">   <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">   <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">   <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">   <span class="string">'blog'</span>,</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">   DATABASES = &#123;</span><br><span class="line">   <span class="string">'default'</span>: &#123;</span><br><span class="line">       <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>, <span class="comment">#如果使用sqlite3 则将mysql改为sqlite3</span></span><br><span class="line">       <span class="string">'NAME'</span>: <span class="string">'数据库名'</span>, <span class="comment">#如果使用的是sqlite3则NAME为数据库文件名例如:test.db 下面的几项就不用设定了</span></span><br><span class="line">       <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">       <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">       <span class="string">'HOST'</span>: <span class="string">''</span>,</span><br><span class="line">       <span class="string">'PORT'</span>: <span class="string">''</span>,</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">       <span class="string">'DIRS'</span>: [BASE_DIR+<span class="string">"/templates"</span>],</span><br><span class="line">       <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br><span class="line">       <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">           <span class="string">'context_processors'</span>: [</span><br><span class="line">               <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">               <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">               <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">               <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">           	],</span><br><span class="line">       	&#125;,</span><br><span class="line">   	&#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li><p>urls.py 修改参见上篇blog</p>
</li>
</ul>
</li>
</ul>
<h3 id="修改blog目录下models-py文件_创建django_employee表">修改blog目录下models.py文件 创建django_employee表</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/syncdb.png" alt="models" title="models"></p>
<ul>
<li><code>python manage.py makemigrations</code></li>
<li><code>python manage.py migrate</code></li>
<li>查看数据库是不是已经成功添加了django_employee表呢</li>
</ul>
<h3 id="插入数据的三种方式">插入数据的三种方式</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> Employee</span><br><span class="line">emp = Employee()</span><br><span class="line">emp.name = <span class="string">'Alen'</span></span><br><span class="line">emp.save()  <span class="comment">#第一种</span></span><br><span class="line"></span><br><span class="line">emp = Employee(name=<span class="string">'Tom'</span>)</span><br><span class="line">emp.save()  <span class="comment">#第二种</span></span><br><span class="line"></span><br><span class="line">Employee.objects.create(name=<span class="string">'Max'</span>)  <span class="comment">#第三种</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="查询数据">查询数据</h3><ul>
<li><code>emps = Employee.objects.all()</code></li>
</ul>
<h3 id="多对一">多对一</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment">#one</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entry</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"><span class="comment">#many</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    entry = models.ForeigenKey(Entry)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#先将one创建出来,然后many对应的记录创建出来</span></span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> Entry,Blog</span><br><span class="line"></span><br><span class="line">entry1 = Entry.objects.create(name=<span class="string">'Max'</span>) </span><br><span class="line">entry2 = Entry.objects.create(name=<span class="string">'Alen'</span>) </span><br><span class="line">entry3 = Entry.objects.create(name=<span class="string">'Tom'</span>)</span><br><span class="line"></span><br><span class="line">blog1 =  Blog.objects.create(name=<span class="string">'Alen_blog'</span>,entry=entry1) </span><br><span class="line"><span class="comment">#检索</span></span><br><span class="line">blog1.entry <span class="comment">#&lt;Entry:Max&gt;</span></span><br><span class="line">blog1.entry_id <span class="comment">#1L</span></span><br><span class="line">entry1.blog_set.all() <span class="comment">#[&lt;Blog:Alen_blog&gt;]</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Django_Admin_通过后台界面如何对数据库的基本管理和对用户的添加以及用户相应权限的基本操作">Django Admin 通过后台界面如何对数据库的基本管理和对用户的添加以及用户相应权限的基本操作</h3><ul>
<li>创建项目 和 app 修改settings.py 数据库修改为sqlite3其它地方修改类似,修改urls.py 增加admin.autodiscover()其它地方修改类似</li>
<li><p>修改models.py文件<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line">sex_choices = ((<span class="string">'f'</span>, <span class="string">'famale'</span>), (<span class="string">'m'</span>, <span class="string">'male'</span>))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    sex = models.CharField(max_length=<span class="number">1</span>, choices=sex_choices)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>修改你创建的app目录下的admin.py文件注册相关的model <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line">admin.site.register(User)</span><br></pre></td></tr></table></figure></p>
</li>
</ul>
<h3 id="多对多">多对多</h3><ul>
<li>会产生三张表分别为blog_author和blog_book以及blog_book_authors <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line">   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Author</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    authors = models.ManyToManyField(Author)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name    </span><br><span class="line">```               </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 创建Author和Book ```python</span><br><span class="line">Author.objects.create(name=<span class="string">'Alen'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Ben'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Carl'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Dev'</span>)</span><br><span class="line"></span><br><span class="line">authors = Author.objects.all()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1 = Book()</span><br><span class="line">b1.name = <span class="string">'python book1'</span></span><br><span class="line">b1.save()</span><br><span class="line">alen = Author.objects.get(name__exact=<span class="string">'Alen'</span>)</span><br><span class="line">b1.authors.add(alen) <span class="comment">#添加</span></span><br><span class="line">b1.authors.add(authors[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">alen.book_set.all() <span class="comment">#alen所写的所有书</span></span><br><span class="line"></span><br><span class="line">b1.authors.all() <span class="comment">#[&lt;Author:Alen&gt;, &lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">b1.authors.remove(alen) <span class="comment">#删除Alen对象</span></span><br><span class="line">b1.authors.all() <span class="comment">#[&lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">b1.authors.filter(name__exact=<span class="string">'Ben'</span>) <span class="comment">#根据name过滤 [&lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">alen_book_set.all() <span class="comment">#[]</span></span><br><span class="line">alen_book_set.add(b1)</span><br><span class="line">alen_book_set_create(name=<span class="string">"python book2"</span>) <span class="comment">#添加一本书</span></span><br><span class="line">books = Book.objects.all() <span class="comment">#[&lt;Book:python book1&gt;, &lt;Book:python book2&gt;]</span></span><br><span class="line">alen_book_set_remove(books[<span class="number">0</span>]) <span class="comment">#移除一本书 [&lt;Book:python book2&gt;]</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="Django上传文件">Django上传文件</h3><ul>
<li>第一种方式通过表单来上传文件 打开settings.py 注释掉MIDDLEWARE_CLASSES 中的 <code>&#39;django.middleware.csrf.CsrfViewMiddleware&#39;</code></li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcut <span class="keyword">import</span> render_to_response</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserForm</span><span class="params">(forms.Form)</span>:</span> <span class="comment">#创建form对象</span></span><br><span class="line">    name = forms.CharField()</span><br><span class="line">    headImg = forms.FileField() <span class="comment">#上传文件 form 表单上必须加上enctype="multipart/form-data"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.method == <span class="string">'POST'</span>:</span><br><span class="line">        form = UserForm(req.POST,req.FILES) <span class="comment">#数据的绑定</span></span><br><span class="line">        <span class="keyword">if</span> form.is_valid(): <span class="comment">#数据的验证 对字段验证是否存在是否正确</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data <span class="comment">#数据的保存  保存到cleaned_data字典中 print form.cleaned_data['name']</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data[<span class="string">'headImg'</span>].name  <span class="comment">#获取上传文件的文件名 req.FILES</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data[<span class="string">'headImg'</span>].size  <span class="comment">#获取上传文件的大小</span></span><br><span class="line">            fp = file(<span class="string">'/upload/'</span>+form.cleaned_data[<span class="string">'headImg'</span>].name, <span class="string">'wb'</span>)</span><br><span class="line">            content = form.cleaned_data[<span class="string">'headImg'</span>].read()</span><br><span class="line">            fp.write(content)</span><br><span class="line">            fp.close()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'ok'</span>) <span class="comment">#返回数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            form = UserForm()</span><br><span class="line">        <span class="keyword">return</span> render_to_response(<span class="string">'register.html'</span>,&#123;<span class="string">'form'</span>:form&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>第二种方式通过后台来上传文件 修改models.py文件 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    headImg = models.FileField(upload_to=<span class="string">'./upload/'</span>) <span class="comment">#修改保存路径 settings.py 增加MEDIA_ROOT='/headImg'  这个是保持到了系统根目录下最终的路径是/headImg/upload/,如果没有修改则保持在工程目录upload下</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>第三种方式将上传数据保存到数据库 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcut <span class="keyword">import</span> render_to_response</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserForm</span><span class="params">(forms.Form)</span>:</span> <span class="comment">#创建form对象</span></span><br><span class="line">    name = forms.CharField()</span><br><span class="line">    password = forms.CharField(widget=forms.PasswordInput)</span><br><span class="line">    headImg = forms.FileField() <span class="comment">#上传文件 form 表单上必须加上enctype="multipart/form-data"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.method == <span class="string">'POST'</span>:</span><br><span class="line">        form = UserForm(req.POST,req.FILES) <span class="comment">#数据的绑定</span></span><br><span class="line">        <span class="keyword">if</span> form.is_valid(): <span class="comment">#数据的验证 对字段验证是否存在是否正确</span></span><br><span class="line">            username = form.cleaned_data[<span class="string">'name'</span>]</span><br><span class="line">            file = form.cleaned_data[<span class="string">'headImg'</span>]</span><br><span class="line">            user = User()</span><br><span class="line">            user.username = username</span><br><span class="line">            user.headImg = file</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'ok'</span>) <span class="comment">#返回数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            form = UserForm()</span><br><span class="line">        <span class="keyword">return</span> render_to_response(<span class="string">'register.html'</span>,&#123;<span class="string">'form'</span>:form&#125;)</span><br></pre></td></tr></table></figure></p>
</li>
</ul>
<h3 id="Django会话">Django会话</h3><ul>
<li>Cookie<ul>
<li>跳转动作 <code>HttpResponseRedirect(&#39;/login/&#39;)</code></li>
<li>response.set_cookie(‘username’,username,3600) ＃设置Cookie</li>
<li>删除Cookie response.delete_cookie(‘username’) </li>
<li>获取Cookie req.COOKIES.get(‘username’,’’)</li>
</ul>
</li>
<li>Session<ul>
<li>使用session需要中间件的支持 <code>MIDDLEWARE_CLASSES = (&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;)</code></li>
<li>req.session[‘username’] = username #以字典的形式保存</li>
<li>req.session.get(‘username’, ‘default’) #获取session值</li>
<li>del req.session[‘username’] #删除指定的session</li>
</ul>
</li>
</ul>
<h3 id="用户管理_Auth系统使用">用户管理 Auth系统使用</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line">User.objects.create_user(username=<span class="string">'ben'</span>, password=<span class="string">'123'</span>, email=<span class="string">'ben@qq.com'</span>) <span class="comment">#添加用户</span></span><br><span class="line"></span><br><span class="line">ben = User.objects.get(username__exact=<span class="string">'ben'</span>) <span class="comment">#获取指定名称的用户</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Python连接并使用MySQL">Python连接并使用MySQL</h3><ul>
<li>在此之前得先安装MySQL,如果安装好了可以跳过,直接进入安装MySQL-Python,不然会出现<code>EnvironmentError: mysql_config not found</code>错误</li>
<li><code>brew install mysql</code></li>
<li>将MySQL添加到系统环境变量中去 <code>export PATH=$PATH:/usr/local/Cellar/mysql/5.6.25/bin</code> 或者 <code>export PATH=$PATH:/usr/local/opt/mysql/bin</code></li>
<li>使用pip活着easy_install安装MySQL-Python <code>pip install MySQL-Python</code> 或者 <code>sudo easy_install MySQL-Python</code>.]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 下安装Django]]></title>
    <link href="http://yoursite.com/2015/08/13/install-django/"/>
    <id>http://yoursite.com/2015/08/13/install-django/</id>
    <published>2015-08-13T01:37:17.000Z</published>
    <updated>2015-08-13T02:42:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="首先讲讲Mac_命令行中如何用sublime打开指定文件">首先讲讲Mac 命令行中如何用sublime打开指定文件</h3><ul>
<li>其实打开文本文件有很多方式,比如命令行下<code>open -e xxx.txt</code>,或者使用vim,今天我们讲讲命令行中使用sublime打开文本文件<ul>
<li>下载Sublime Text</li>
<li>打开终端敲入以下命令 <code>ln -s /Applications/Sublime\ Text\.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl</code></li>
<li>最后我们就可以直接在终端下敲入 <code>subl xxx.txt</code> 就可以打开指定的文本文件了</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="下载Django">下载<a href="https://www.djangoproject.com/download/" target="_blank" rel="external">Django</a></h3><ul>
<li><p>从<a href="https://www.djangoproject.com/download/" target="_blank" rel="external">Django</a>官网下载安装包<a href="https://www.djangoproject.com/m/releases/1.8/Django-1.8.3.tar.gz" target="_blank" rel="external">Django-1.8.3.tar.gz</a>,解压安装包,打开终端进入压缩包目录使用命令进行安装<code>sudo python setup.py install</code></p>
</li>
<li><p>或者使用pip进行安装 <code>pip install Django==1.8.3</code></p>
</li>
</ul>
<h3 id="创建配置并运行工程">创建配置并运行工程</h3><ul>
<li><code>django-admin.py startproject DjangoProject</code> <ul>
<li><h1 id="DjangoProject为你创建的工程名称">DjangoProject为你创建的工程名称</h1></li>
</ul>
</li>
<li><code>cd DjangoProject</code> 修改目录下的settings.py和urls.py文件</li>
<li><p>修改settings.py文件 </p>
<ul>
<li><h1 id="当前目录为/DjangoProject/DjangoProject/settings-py">当前目录为/DjangoProject/DjangoProject/settings.py</h1><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'blog'</span>,</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-cn'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/shanghai'</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>修改urls.py文件 </p>
<ul>
<li><h1 id="当前目录为/DjangoProject/DjangoProject/urls-py">当前目录为/DjangoProject/DjangoProject/urls.py</h1><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">   url(<span class="string">r'^blog/index/$'</span>,<span class="string">'blog.views.index'</span>),</span><br><span class="line">   url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>返回上级目录创建blog项目 </p>
<ul>
<li><code>#当前目录为/DjangoProject 而不是/DjangoProject/DjangoProject/否则会出错</code></li>
<li><code>django-admin.py startapp blog</code></li>
<li>进入blog目录并修改views.py<ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'hello,welcome to Django!'</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>返回到最顶层目录</p>
<ul>
<li><code>当前目录为/DjangoProject</code></li>
<li>启动服务 <code>python manage.py runserver</code></li>
</ul>
</li>
<li><p>打开浏览器输入 <a href="http://127.0.0.1:8000/blog/index/" target="_blank" rel="external">http://127.0.0.1:8000/blog/index/</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="首先讲讲Mac_命令行中如何用sublime打开指定文件">首先讲讲Mac 命令行中如何用sublime打开指定文件</h3><ul>
<li>其实打开文本文件有很多方式,比如命令行下<code>open -e xxx.txt</code>,或者使用vim,今天我们讲讲命令行中使用sublime打开文本文件<ul>
<li>下载Sublime Text</li>
<li>打开终端敲入以下命令 <code>ln -s /Applications/Sublime\ Text\.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl</code></li>
<li>最后我们就可以直接在终端下敲入 <code>subl xxx.txt</code> 就可以打开指定的文本文件了</li>
</ul>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 下安装并配置启动MongoDB]]></title>
    <link href="http://yoursite.com/2015/08/11/install-mongodb/"/>
    <id>http://yoursite.com/2015/08/11/install-mongodb/</id>
    <published>2015-08-11T05:41:14.000Z</published>
    <updated>2015-08-11T06:38:47.000Z</updated>
    <content type="html"><![CDATA[<h3 id="安装MongoDB">安装<a href="https://www.mongodb.org/downloads" target="_blank" rel="external">MongoDB</a></h3><ul>
<li>从<a href="https://www.mongodb.org/downloads" target="_blank" rel="external">MongoDB</a>官网下载<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/mongodb.png" alt="mongodb" title="mongodb"></li>
</ul>
<ul>
<li>或者使用brew安装<ul>
<li><code>brew install mongodb</code><a id="more"></a></li>
<li><img src="http://7xk9ih.com1.z0.glb.clouddn.com/install_mongodb.png" alt="install_mongodb" title="install_mongodb"></li>
</ul>
</li>
</ul>
<h3 id="配置MongoDB">配置MongoDB</h3><ul>
<li>默认mongodb数据文件是放到根目录 /data/db 文件夹下,如果没有这个文件,请自行创建.<ul>
<li><code>sudo mkdir -p /data/db</code></li>
<li><code>sudo chmod -R 777 /data/db (#文件需要写入权限,不然启动mongodb会失败)</code></li>
</ul>
</li>
</ul>
<ul>
<li>配置环境变量加入mongodb<ul>
<li><code>cd ~</code></li>
<li><code>open -e .bash_profile</code></li>
<li><code>export MONGODB_PATH=/usr/local/Cellar/mongodb/3.0.4/bin;</code></li>
<li><code>export PATH=${PATH}:${MONGODB_PATH}</code></li>
<li><code>source ~/.bash_profile</code></li>
</ul>
</li>
</ul>
<ul>
<li>修改mongodb配置文件,配置文件默认在/usr/local/etc下的mongod.conf<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  path: /usr/<span class="built_in">local</span>/var/<span class="built_in">log</span>/mongodb/mongo.log</span><br><span class="line">  <span class="built_in">log</span>Append: <span class="literal">true</span></span><br><span class="line">storage:  <span class="comment"># Store data in /usr/local/var/mongodb instead of the default /data/db</span></span><br><span class="line">  dbPath: /data/db</span><br><span class="line">net:</span><br><span class="line">  <span class="built_in">bind</span>Ip: <span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>第六行修改成数据库文件写入目录地址,如果准备连接非本地环境的mongodb数据库时,bind_ip = 0.0.0.0 即可.</code></p>
<h3 id="启动MongoDB">启动MongoDB</h3><ul>
<li><p>启动MongoDB服务器端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data/db</span><br><span class="line">mongod</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动mongodb客户端</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/etc/</span><br><span class="line">mongo</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="关闭mongodb">关闭mongodb</h3><ul>
<li>登录Mongodb数据库后关闭服务.<ul>
<li><code>use admin</code></li>
<li><code>db.shutdownServer()</code></li>
<li><code>exit</code><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/shutdown_mangodb.png" alt="shutdown_mongodb" title="shutdown_mongodb"></li>
</ul>
</li>
<li>另外一种安全关闭方法:<ul>
<li><code>kill -15, killall mongod</code><br><code>到现在为止,完成了mongodb的安装、配置、服务器端启动、客户端启动、关闭mongodb,下一步就是如何使用.</code></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="安装MongoDB">安装<a href="https://www.mongodb.org/downloads">MongoDB</a></h3><ul>
<li>从<a href="https://www.mongodb.org/downloads">MongoDB</a>官网下载<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/mongodb.png" alt="mongodb" title="mongodb"></li>
</ul>
<ul>
<li>或者使用brew安装<ul>
<li><code>brew install mongodb</code>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下安装爬虫框架Scrapy]]></title>
    <link href="http://yoursite.com/2015/08/10/scrapy/"/>
    <id>http://yoursite.com/2015/08/10/scrapy/</id>
    <published>2015-08-10T14:04:25.000Z</published>
    <updated>2015-08-10T14:50:04.000Z</updated>
    <content type="html"><![CDATA[<h3 id="安装lxml模块,当前版本是3-4-4">安装<a href="https://pypi.python.org/pypi/lxml/3.4.4" target="_blank" rel="external">lxml</a>模块,当前版本是3.4.4</h3><ul>
<li>下载并解压<a href="https://pypi.python.org/packages/source/l/lxml/lxml-3.4.4.tar.gz#md5=a9a65972afc173ec7a39c585f4eea69c" target="_blank" rel="external">lxml-3.4.4.tar.gz</a><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/lxml.png" alt="lxml" title="lxml"></li>
</ul>
<ul>
<li><p>安装lxml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> lxml-<span class="number">3.4</span>.<span class="number">4</span> <span class="comment">#进入lxml目录</span></span><br><span class="line">sudo python setup.py</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果执行成功,那么lxml就安装成功了,很有可能遇到如下错误:<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/lxml_error.png" alt="lxml_error" title="lxml_error"></p>
</li>
</ul>
<a id="more"></a>
<ul>
<li>解决方法有如下几种:<ul>
<li>配置路径:CPATH<br><code>sudo CPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/libxml2 CFLAGS=-Qunused-arguments CPPFLAGS=-Qunused-arguments pip install lxml</code></li>
<li>终端执行命令安装或更新命令行开发工具:<br><code>xcode-select --install</code></li>
</ul>
</li>
</ul>
<h3 id="安装w3lib">安装<a href="https://pypi.python.org/pypi/w3lib#downloads" target="_blank" rel="external">w3lib</a></h3><ul>
<li>下载并解压<a href="https://pypi.python.org/packages/source/w/w3lib/w3lib-1.12.0.tar.gz#md5=c2545617229b3fc72d59afed85b18035" target="_blank" rel="external">w3lib-1.12.0.tar.gz</a><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/w3lib.png" alt="w3lib" title="w3lib"></li>
<li>安装w3lib<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> w3lib-<span class="number">1.12</span>.<span class="number">0</span> <span class="comment">#进入w3lib目录</span></span><br><span class="line">sudo python setup.py</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="安装Scrapy">安装<a href="http://scrapy.org/" target="_blank" rel="external">Scrapy</a></h3><ul>
<li>下载并解压Scrapy<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/scrapy.png" alt="scrapy" title="scrapy"></li>
<li>Scrapy<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> scrapy-scrapy-<span class="number">8124</span>af9 <span class="comment">#进入scrapy目录</span></span><br><span class="line">sudo python setup.py</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>至此,整个Scrapy模块安装完成,接下来就是学习如何使用Scrapy.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="安装lxml模块,当前版本是3-4-4">安装<a href="https://pypi.python.org/pypi/lxml/3.4.4">lxml</a>模块,当前版本是3.4.4</h3><ul>
<li>下载并解压<a href="https://pypi.python.org/packages/source/l/lxml/lxml-3.4.4.tar.gz#md5=a9a65972afc173ec7a39c585f4eea69c">lxml-3.4.4.tar.gz</a><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/lxml.png" alt="lxml" title="lxml"></li>
</ul>
<ul>
<li><p>安装lxml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> lxml-<span class="number">3.4</span>.<span class="number">4</span> <span class="comment">#进入lxml目录</span></span><br><span class="line">sudo python setup.py</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果执行成功,那么lxml就安装成功了,很有可能遇到如下错误:<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/lxml_error.png" alt="lxml_error" title="lxml_error"></p>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python 安装第三方模块]]></title>
    <link href="http://yoursite.com/2015/08/08/install-python-plug/"/>
    <id>http://yoursite.com/2015/08/08/install-python-plug/</id>
    <published>2015-08-08T01:13:07.000Z</published>
    <updated>2015-08-08T01:48:03.000Z</updated>
    <content type="html"><![CDATA[<h3 id="安装easy_install">安装easy_install</h3><blockquote>
<p>在Python中安装第三方模块是通过setuptools这个工具完成的。Python有两个封装了setuptools的包管理工具:<br>  easy_install 和 pip 。目前官方推荐使用pip 。如果你正在使用Mac或者Linux,安装pip本身这个步骤就可以跳过了.<br>  这里讲讲Mac下如何安装easy_install。</p>
</blockquote>
<ul>
<li>目前<a href="https://pypi.python.org/pypi/setuptools" target="_blank" rel="external">setuptools</a>版本是18.1<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/setuptools.png" alt="setuptools" title="setuptools"><a id="more"></a></li>
<li><p>解压setuptools-18.1.zip文件,打开终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> setuptools-<span class="number">18.1</span></span><br><span class="line">sudo python ez_setup.py</span><br></pre></td></tr></table></figure>
</li>
<li><p>之后,你就可以直接用它来安装你想要的模块,比人BeautifulSoup(HTML/XML的解析器)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">easy_install BeautifulSoup</span><br></pre></td></tr></table></figure>
</li>
<li><p>这里列举一些常用的模块</p>
<ul>
<li>chardet - 查询字符串内容使用何种编码方式</li>
<li>PIL - 图形处理</li>
<li>PyXML - 解析和处理XML文件</li>
<li>MySQLdb - 连接MySQL数据库</li>
<li>Tkinter - 图形界面接口，python自带 </li>
<li>smtplib - 发送电子邮件</li>
<li>ftplib - ftp编程</li>
<li>PyMedia - 多媒体操作</li>
<li>PyOpenGL - OpenGL接口</li>
<li>BeautifulSoup - HTML/XML的解析器</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="安装easy_install">安装easy_install</h3><blockquote>
<p>在Python中安装第三方模块是通过setuptools这个工具完成的。Python有两个封装了setuptools的包管理工具:<br>  easy_install 和 pip 。目前官方推荐使用pip 。如果你正在使用Mac或者Linux,安装pip本身这个步骤就可以跳过了.<br>  这里讲讲Mac下如何安装easy_install。</p>
</blockquote>
<ul>
<li>目前<a href="https://pypi.python.org/pypi/setuptools">setuptools</a>版本是18.1<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/setuptools.png" alt="setuptools" title="setuptools">]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android自定义组件坐标详解]]></title>
    <link href="http://yoursite.com/2015/07/10/android_view_position/"/>
    <id>http://yoursite.com/2015/07/10/android_view_position/</id>
    <published>2015-07-10T05:48:07.000Z</published>
    <updated>2015-08-11T13:28:14.000Z</updated>
    <content type="html"><![CDATA[<h3 id="获取View自身宽高">获取View自身宽高</h3><blockquote>
<p>View.getWidth();  #View宽<br>  View.getHeight(); #View高</p>
</blockquote>
<h3 id="获取View自身坐标">获取View自身坐标</h3><blockquote>
<p>相对于父控件<br>    getLeft():获取到的是view自身的左边到其父布局左边的距离<br>    getTop:获取到的是view自身的顶边到其父布局顶边的距离<br>    getRight():获取到的是view自身的右边到其父布局左边的距离<br>    getBottom():获取到的是view自身的底边到其父布局顶边的距离</p>
</blockquote>
<a id="more"></a>
<p>  这些方法获取到的数据可以用在什么地方呢？<br>    比如要实现一个自定义的特殊布局—-<a href="http://blog.csdn.net/singwhatiwanna/article/details/42614953" target="_blank" rel="external">水波纹特效布局</a>,<br>    该布局内的任何控件点击后都会出现波纹效果,就要通过不断刷新布局,去更新这个控件上面的波纹半径,为了节省资源,每次刷新布局都时候不会整个布局都刷新,而只是通过<br>    <code>postInvalidateDelayed(INVALIDATE_DURATION, left, top, right, bottom);</code><br>    在布局的画布上每次只去更新点击事件所点击的对应的控件的位置,那么这里就可以用view的那四个方法,分别获取自身的四条边对应的坐标从而让布局去刷新重绘。<br>    当然博客中是使用绝对坐标去计算的,因为这里实现的是一个布局,可能里面还会嵌套另外的布局,经过多次嵌套之后所获取到的值,是相对于控件直接对应的父布局（这个布局有可能已经是我们重写的布局的子布局了）的距离,这样去刷新的区域肯定是不准确的,所以博客里面使用相对屏幕的绝对坐标计算需要刷新的控件区域。<br>    如果这里自定义的不是布局，而只是一个控件的话，就可以通过以上方法获取到坐标，然后要求自己所在的布局去重绘这一区域就可以了。当然这只是一种思路，其实没必要去要求布局重绘，完全可以直接view自身重绘就可以了。</p>
<h3 id="MotionEvent获取坐标">MotionEvent获取坐标</h3><blockquote>
<p>相对于当前控件本身:getX(),getY()<br>  相对于屏幕:getRawX(),getRawY()</p>
</blockquote>
<p>  这些方法可以用在什么地方呢？<br>  getRawX和getRawY在之前那篇博客里广泛使用了,可以去那里看用法,getX()和getY()这两个方法在对view进行自定义的时候可能用的会比较多。</p>
<p>  <img src="http://7xk9ih.com1.z0.glb.clouddn.com/view_position.png" alt="View" title="Android自定义组件坐标详解"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="获取View自身宽高">获取View自身宽高</h3><blockquote>
<p>View.getWidth();  #View宽<br>  View.getHeight(); #View高</p>
</blockquote>
<h3 id="获取View自身坐标">获取View自身坐标</h3><blockquote>
<p>相对于父控件<br>    getLeft():获取到的是view自身的左边到其父布局左边的距离<br>    getTop:获取到的是view自身的顶边到其父布局顶边的距离<br>    getRight():获取到的是view自身的右边到其父布局左边的距离<br>    getBottom():获取到的是view自身的底边到其父布局顶边的距离</p>
</blockquote>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Pinyin4j 实现列表按内容首字母排序]]></title>
    <link href="http://yoursite.com/2015/07/09/pinyin4j/"/>
    <id>http://yoursite.com/2015/07/09/pinyin4j/</id>
    <published>2015-07-09T05:10:45.000Z</published>
    <updated>2015-07-09T08:17:09.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><h3 id="下载Pinyin4j库">下载<a href="http://mvnrepository.com/artifact/com.belerweb/pinyin4j/2.5.0" target="_blank" rel="external">Pinyin4j</a>库</h3></li>
<li><h3 id="封装排序Model">封装排序Model</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;   </span><br><span class="line">	<span class="keyword">private</span> String sortLetters;  </span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SortModel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="comment">// <span class="doctag"><span class="keyword">TODO</span></span> Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SortModel</span><span class="params">(String name, String sortLetters)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.sortLetters = sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSortLetters</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSortLetters</span><span class="params">(String sortLetters)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.sortLetters = sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><h3 id="自定义BaseAdapter">自定义BaseAdapter</h3><blockquote>
<p>实现SectionIndex接口<br>SectionIndex它是一个给Adapter去实现用来在AbsListView中实现section之间的快速滚动的接口<br>Object[] getSection();<br>int getPositionForSection(int section);  #提供列表中指定节的起始索引.<br>int getSectionForPosition(int position); #这是反向映射，取得列表中指定位置对应的节索引.</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.SectionIndexer;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> <span class="keyword">implements</span> <span class="title">SectionIndexer</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> List&lt;SortModel&gt; list = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">private</span> Context mContext;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SortAdapter</span><span class="params">(Context mContext, List&lt;SortModel&gt; list)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.mContext = mContext;</span><br><span class="line">		<span class="keyword">this</span>.list = list;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 当ListView数据发生变化时,调用此方法来更新ListView</span><br><span class="line">	 * <span class="doctag">@param</span> list</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateListView</span><span class="params">(List&lt;SortModel&gt; list)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.list = list;</span><br><span class="line">		notifyDataSetChanged();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.list.size();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> list.get(position);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> position;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> position, View view, ViewGroup arg2)</span> </span>&#123;</span><br><span class="line">		ViewHolder viewHolder = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">final</span> SortModel mContent = list.get(position);</span><br><span class="line">		<span class="keyword">if</span> (view == <span class="keyword">null</span>) &#123;</span><br><span class="line">			viewHolder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">			view = LayoutInflater.from(mContext).inflate(R.layout.item, <span class="keyword">null</span>);</span><br><span class="line">			viewHolder.tvTitle = (TextView) view.findViewById(R.id.title);</span><br><span class="line">			viewHolder.tvLetter = (TextView) view.findViewById(R.id.category);</span><br><span class="line">			view.setTag(viewHolder);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			viewHolder = (ViewHolder) view.getTag();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//根据position获取分类的首字母的Char ASCII值</span></span><br><span class="line">		<span class="keyword">int</span> section = getSectionForPosition(position);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//如果当前位置等于该分类首字母的Char的位置 ，则认为是第一次出现</span></span><br><span class="line">		<span class="keyword">if</span>(position == getPositionForSection(section))&#123;</span><br><span class="line">			viewHolder.tvLetter.setVisibility(View.VISIBLE);</span><br><span class="line">			viewHolder.tvLetter.setText(mContent.getSortLetters());</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			viewHolder.tvLetter.setVisibility(View.GONE);</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		viewHolder.tvTitle.setText(<span class="keyword">this</span>.list.get(position).getName());</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> view;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="keyword">final</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">		TextView tvLetter;</span><br><span class="line">		TextView tvTitle;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 根据ListView的当前位置获取分类的首字母的Char ASCII值</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSectionForPosition</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> list.get(position).getSortLetters().charAt(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 根据分类的首字母的Char ASCII值获取其第一次出现该首字母的位置</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPositionForSection</span><span class="params">(<span class="keyword">int</span> section)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; getCount(); i++) &#123;</span><br><span class="line">			String sortStr = list.get(i).getSortLetters();</span><br><span class="line">			<span class="keyword">char</span> firstChar = sortStr.toUpperCase().charAt(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">if</span> (firstChar == section) &#123;</span><br><span class="line">				<span class="keyword">return</span> i;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 获取组信息的数组</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="keyword">public</span> Object[] getSections() &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="定义ListView_item布局文件">定义ListView item布局文件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">    <span class="attribute">android:gravity</span>=<span class="value">"center_vertical"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/category"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"#E0E0E0"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#454545"</span></span><br><span class="line">        <span class="attribute">android:layout_weight</span>=<span class="value">"1.0"</span></span><br><span class="line">        <span class="attribute">android:paddingLeft</span>=<span class="value">"5dip"</span></span><br><span class="line">        <span class="attribute">android:paddingTop</span>=<span class="value">"5dip"</span></span><br><span class="line">        <span class="attribute">android:paddingBottom</span>=<span class="value">"5dip"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"A"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/title"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_gravity</span>=<span class="value">"center_vertical"</span></span><br><span class="line">        <span class="attribute">android:gravity</span>=<span class="value">"center_vertical"</span></span><br><span class="line">        <span class="attribute">android:layout_weight</span>=<span class="value">"1.0"</span></span><br><span class="line">        <span class="attribute">android:textColor</span>=<span class="value">"#336598"</span></span><br><span class="line">        <span class="attribute">android:layout_marginLeft</span>=<span class="value">"5dip"</span></span><br><span class="line">        <span class="attribute">android:paddingTop</span>=<span class="value">"10dip"</span></span><br><span class="line">        <span class="attribute">android:paddingBottom</span>=<span class="value">"10dip"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"阿妹"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="使用Pinyin4j库封装好工具类">使用Pinyin4j库封装好工具类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> net.sourceforge.pinyin4j.PinyinHelper;</span><br><span class="line"><span class="keyword">import</span> net.sourceforge.pinyin4j.format.HanyuPinyinCaseType;</span><br><span class="line"><span class="keyword">import</span> net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat;</span><br><span class="line"><span class="keyword">import</span> net.sourceforge.pinyin4j.format.HanyuPinyinToneType;</span><br><span class="line"><span class="keyword">import</span> net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pinyin4jUtil</span> </span>&#123;	</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 汉字转换位汉语拼音首字母，英文字符不变，特殊字符丢失 支持多音字，生成方式如（长沙市长:cssc,zssz,zssc,cssz）</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@param</span> chines</span><br><span class="line">     *            汉字</span><br><span class="line">     * <span class="doctag">@return</span> 拼音</span><br><span class="line">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">converterToFirstSpell</span><span class="params">(String chines)</span> </span>&#123; </span><br><span class="line">        StringBuffer pinyinName = <span class="keyword">new</span> StringBuffer(); </span><br><span class="line">        <span class="keyword">char</span>[] nameChar = chines.toCharArray(); </span><br><span class="line">        HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat(); </span><br><span class="line">        defaultFormat.setCaseType(HanyuPinyinCaseType.LOWERCASE); </span><br><span class="line">        defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE); </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nameChar.length; i++) &#123; </span><br><span class="line">            <span class="keyword">if</span> (nameChar[i] &gt; <span class="number">128</span>) &#123; </span><br><span class="line">                <span class="keyword">try</span> &#123; </span><br><span class="line">                    <span class="comment">// 取得当前汉字的所有全拼 </span></span><br><span class="line">                    String[] strs = PinyinHelper.toHanyuPinyinStringArray( </span><br><span class="line">                            nameChar[i], defaultFormat); </span><br><span class="line">                    <span class="keyword">if</span> (strs != <span class="keyword">null</span>) &#123; </span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; strs.length; j++) &#123; </span><br><span class="line">                            <span class="comment">// 取首字母 </span></span><br><span class="line">                            pinyinName.append(strs[j].charAt(<span class="number">0</span>)); </span><br><span class="line">                            <span class="keyword">if</span> (j != strs.length - <span class="number">1</span>) &#123; </span><br><span class="line">                                pinyinName.append(<span class="string">","</span>); </span><br><span class="line">                            &#125; </span><br><span class="line">                        &#125; </span><br><span class="line">                    &#125; </span><br><span class="line">                    <span class="comment">// else &#123; </span></span><br><span class="line">                    <span class="comment">// pinyinName.append(nameChar[i]); </span></span><br><span class="line">                    <span class="comment">// &#125; </span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123; </span><br><span class="line">                    e.printStackTrace(); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                pinyinName.append(nameChar[i]); </span><br><span class="line">            &#125; </span><br><span class="line">            pinyinName.append(<span class="string">" "</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">// return pinyinName.toString(); </span></span><br><span class="line">        <span class="keyword">return</span> parseTheChineseByObject(discountTheChinese(pinyinName.toString())); </span><br><span class="line">    &#125; </span><br><span class="line">   </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 汉字转换位汉语全拼，英文字符不变，特殊字符丢失</span><br><span class="line">     * 支持多音字，生成方式如（重当参:zhongdangcen,zhongdangcan,chongdangcen</span><br><span class="line">     * ,chongdangshen,zhongdangshen,chongdangcan）</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@param</span> chines</span><br><span class="line">     *            汉字</span><br><span class="line">     * <span class="doctag">@return</span> 拼音</span><br><span class="line">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">converterToSpell</span><span class="params">(String chines)</span> </span>&#123; </span><br><span class="line">        StringBuffer pinyinName = <span class="keyword">new</span> StringBuffer(); </span><br><span class="line">        <span class="keyword">char</span>[] nameChar = chines.toCharArray(); </span><br><span class="line">        HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat(); </span><br><span class="line">        defaultFormat.setCaseType(HanyuPinyinCaseType.LOWERCASE); </span><br><span class="line">        defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE); </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nameChar.length; i++) &#123; </span><br><span class="line">            <span class="keyword">if</span> (nameChar[i] &gt; <span class="number">128</span>) &#123; </span><br><span class="line">                <span class="keyword">try</span> &#123; </span><br><span class="line">                    <span class="comment">// 取得当前汉字的所有全拼 </span></span><br><span class="line">                    String[] strs = PinyinHelper.toHanyuPinyinStringArray( </span><br><span class="line">                            nameChar[i], defaultFormat); </span><br><span class="line">                    <span class="keyword">if</span> (strs != <span class="keyword">null</span>) &#123; </span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; strs.length; j++) &#123; </span><br><span class="line">                            pinyinName.append(strs[j]); </span><br><span class="line">                            <span class="keyword">if</span> (j != strs.length - <span class="number">1</span>) &#123; </span><br><span class="line">                                pinyinName.append(<span class="string">","</span>); </span><br><span class="line">                            &#125; </span><br><span class="line">                        &#125; </span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123; </span><br><span class="line">                    e.printStackTrace(); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                pinyinName.append(nameChar[i]); </span><br><span class="line">            &#125; </span><br><span class="line">            pinyinName.append(<span class="string">" "</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">// return pinyinName.toString(); </span></span><br><span class="line">        <span class="keyword">return</span> parseTheChineseByObject(discountTheChinese(pinyinName.toString())); </span><br><span class="line">    &#125; </span><br><span class="line">   </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 去除多音字重复数据</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@param</span> theStr</span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Map&lt;String, Integer&gt;&gt; discountTheChinese(String theStr) &#123; </span><br><span class="line">        <span class="comment">// 去除重复拼音后的拼音列表 </span></span><br><span class="line">        List&lt;Map&lt;String, Integer&gt;&gt; mapList = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Integer&gt;&gt;(); </span><br><span class="line">        <span class="comment">// 用于处理每个字的多音字，去掉重复 </span></span><br><span class="line">        Map&lt;String, Integer&gt; onlyOne = <span class="keyword">null</span>; </span><br><span class="line">        String[] firsts = theStr.split(<span class="string">" "</span>); </span><br><span class="line">        <span class="comment">// 读出每个汉字的拼音 </span></span><br><span class="line">        <span class="keyword">for</span> (String str : firsts) &#123; </span><br><span class="line">            onlyOne = <span class="keyword">new</span> Hashtable&lt;String, Integer&gt;(); </span><br><span class="line">            String[] china = str.split(<span class="string">","</span>); </span><br><span class="line">            <span class="comment">// 多音字处理 </span></span><br><span class="line">            <span class="keyword">for</span> (String s : china) &#123; </span><br><span class="line">                Integer count = onlyOne.get(s); </span><br><span class="line">                <span class="keyword">if</span> (count == <span class="keyword">null</span>) &#123; </span><br><span class="line">                    onlyOne.put(s, <span class="keyword">new</span> Integer(<span class="number">1</span>)); </span><br><span class="line">                &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                    onlyOne.remove(s); </span><br><span class="line">                    count++; </span><br><span class="line">                    onlyOne.put(s, count); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; </span><br><span class="line">            mapList.add(onlyOne); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">return</span> mapList; </span><br><span class="line">    &#125; </span><br><span class="line">   </span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 解析并组合拼音，对象合并方案(推荐使用)</span><br><span class="line">     * </span><br><span class="line">     * <span class="doctag">@return</span></span><br><span class="line">     */</span> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">parseTheChineseByObject</span><span class="params">( </span><br><span class="line">            List&lt;Map&lt;String, Integer&gt;&gt; list)</span> </span>&#123; </span><br><span class="line">        Map&lt;String, Integer&gt; first = <span class="keyword">null</span>; <span class="comment">// 用于统计每一次,集合组合数据 </span></span><br><span class="line">        <span class="comment">// 遍历每一组集合 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123; </span><br><span class="line">            <span class="comment">// 每一组集合与上一次组合的Map </span></span><br><span class="line">            Map&lt;String, Integer&gt; temp = <span class="keyword">new</span> Hashtable&lt;String, Integer&gt;(); </span><br><span class="line">            <span class="comment">// 第一次循环，first为空 </span></span><br><span class="line">            <span class="keyword">if</span> (first != <span class="keyword">null</span>) &#123; </span><br><span class="line">                <span class="comment">// 取出上次组合与此次集合的字符，并保存 </span></span><br><span class="line">                <span class="keyword">for</span> (String s : first.keySet()) &#123; </span><br><span class="line">                    <span class="keyword">for</span> (String s1 : list.get(i).keySet()) &#123; </span><br><span class="line">                        String str = s + s1; </span><br><span class="line">                        temp.put(str, <span class="number">1</span>); </span><br><span class="line">                    &#125; </span><br><span class="line">                &#125; </span><br><span class="line">                <span class="comment">// 清理上一次组合数据 </span></span><br><span class="line">                <span class="keyword">if</span> (temp != <span class="keyword">null</span> &amp;&amp; temp.size() &gt; <span class="number">0</span>) &#123; </span><br><span class="line">                    first.clear(); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">                <span class="keyword">for</span> (String s : list.get(i).keySet()) &#123; </span><br><span class="line">                    String str = s; </span><br><span class="line">                    temp.put(str, <span class="number">1</span>); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; </span><br><span class="line">            <span class="comment">// 保存组合数据以便下次循环使用 </span></span><br><span class="line">            <span class="keyword">if</span> (temp != <span class="keyword">null</span> &amp;&amp; temp.size() &gt; <span class="number">0</span>) &#123; </span><br><span class="line">                first = temp; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">        String returnStr = <span class="string">""</span>; </span><br><span class="line">        <span class="keyword">if</span> (first != <span class="keyword">null</span>) &#123; </span><br><span class="line">            <span class="comment">// 遍历取出组合字符串 </span></span><br><span class="line">            <span class="keyword">for</span> (String str : first.keySet()) &#123; </span><br><span class="line">                returnStr += (str + <span class="string">","</span>); </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> (returnStr.length() &gt; <span class="number">0</span>) &#123; </span><br><span class="line">            returnStr = returnStr.substring(<span class="number">0</span>, returnStr.length() - <span class="number">1</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">return</span> returnStr; </span><br><span class="line">    &#125; </span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="编写PinyinComparator接口">编写PinyinComparator接口</h3><blockquote>
<p>ListView中的数据根据A-Z进行排序,前面两个if判断主要是将不是以汉字开头的数据放在后面<br><code>#内容排在最后</code></p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PinyinComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">SortModel</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(SortModel o1, SortModel o2)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (o1.getSortLetters().equals(<span class="string">"@"</span>)</span><br><span class="line">				|| o2.getSortLetters().equals(<span class="string">"#"</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (o1.getSortLetters().equals(<span class="string">"#"</span>)</span><br><span class="line">				|| o2.getSortLetters().equals(<span class="string">"@"</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> o1.getSortLetters().compareTo(o2.getSortLetters());</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="编写Activity">编写Activity</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> List&lt;SortModel&gt; mDatas = <span class="keyword">new</span> ArrayList&lt;SortModel&gt;();</span><br><span class="line">	<span class="keyword">private</span> PinyinComparator mComparator;</span><br><span class="line">	<span class="keyword">private</span> SortAdapter mAdapter</span><br><span class="line">	<span class="keyword">private</span> ListView mListView;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">		setContentView(R.layout.activity_main);</span><br><span class="line">		initViews();</span><br><span class="line">		initData();</span><br><span class="line">		mComparator = <span class="keyword">new</span> PinyinComparator();</span><br><span class="line">		mDatas = filledData(getResources().getStringArray(R.array.data));</span><br><span class="line">		Collections.sort(mDatas,mComparator);</span><br><span class="line">		mAdapter = <span class="keyword">new</span> SortAdapter(<span class="keyword">this</span>,mDatas);</span><br><span class="line">		mListView.setAdapter(mAdapter);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> List&lt;SortModel&gt; <span class="title">filledData</span><span class="params">(String []datas)</span></span>&#123;</span><br><span class="line">		List&lt;SortModel&gt; mSortList = <span class="keyword">new</span> ArrayList&lt;SortModel&gt;();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;datas.length; i++)&#123;</span><br><span class="line">			SortModel sortModel = <span class="keyword">new</span> SortModel();</span><br><span class="line">			sortModel.setName(datas[i]);</span><br><span class="line">			String sortString = Pinyin4jUtil.converterToFirstSpell(datas[i].substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase();</span><br><span class="line">			<span class="keyword">if</span>(sortString.matches(<span class="string">"[A-Z]"</span>))&#123;</span><br><span class="line">				sortModel.setSortLetters(sortString.toUpperCase());</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				sortModel.setSortLetters(<span class="string">"#"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			mSortList.add(sortModel);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> mSortList;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="项目中有可能需要添加搜索框增加搜索功能">项目中有可能需要添加搜索框增加搜索功能</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mEditText.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</span><br><span class="line">			</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag"><span class="keyword">TODO</span></span> Auto-generated method stub</span></span><br><span class="line">			filterData(s.toString());</span><br><span class="line">	&#125;</span><br><span class="line">			</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count,</span><br><span class="line">			<span class="keyword">int</span> after)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag"><span class="keyword">TODO</span></span> Auto-generated method stub</span></span><br><span class="line">				</span><br><span class="line">	&#125;</span><br><span class="line">			</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// <span class="doctag"><span class="keyword">TODO</span></span> Auto-generated method stub</span></span><br><span class="line">			</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">filterData</span><span class="params">(String filterStr)</span></span>&#123;</span><br><span class="line">	List&lt;SortModel&gt; filterDataList = <span class="keyword">new</span> ArrayList&lt;SortModel&gt;();</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">if</span>(TextUtils.isEmpty(filterStr))&#123;</span><br><span class="line">		filterDataList = mDatas;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		filterDataList.clear();</span><br><span class="line">		<span class="keyword">for</span>(SortModel sortModel : mDatas)&#123;</span><br><span class="line">			String name = sortModel.getName();</span><br><span class="line">			String quanpin_str = Pinyin4jUtil.converterToSpell(name);</span><br><span class="line">			<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">			<span class="keyword">if</span>(quanpin_str.contains(<span class="string">","</span>))&#123;</span><br><span class="line">				flag = Arrays.asList(quanpin_str.split(<span class="string">","</span>)).contains(filterStr.toString());</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				flag = quanpin_str.startsWith(filterStr.toString());</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(name.indexOf(filterStr.toString()) != -<span class="number">1</span> || flag)&#123;</span><br><span class="line">				filterDataList.add(sortModel);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	Collections.sort(filterDataList, mComparator);</span><br><span class="line">	mAdapter.updateListView(filterDataList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="编写侧边字母索引View">编写侧边字母索引View</h3><blockquote>
<p>我们需要使用setTextView(TextView mTextDialog)来设置用来显示当前按下的字母的TextView,以及使用setOnTouchingLetterChangedListener方法来设置回调接口,在回调方法onTouchingLetterChanged(String s)中来处理不同的操作</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Typeface;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SideBar</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 触摸事件</span></span><br><span class="line">	<span class="keyword">private</span> OnTouchingLetterChangedListener onTouchingLetterChangedListener;</span><br><span class="line">	<span class="comment">// 26个字母</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> String[] b = &#123; <span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>, <span class="string">"G"</span>, <span class="string">"H"</span>, <span class="string">"I"</span>,</span><br><span class="line">			<span class="string">"J"</span>, <span class="string">"K"</span>, <span class="string">"L"</span>, <span class="string">"M"</span>, <span class="string">"N"</span>, <span class="string">"O"</span>, <span class="string">"P"</span>, <span class="string">"Q"</span>, <span class="string">"R"</span>, <span class="string">"S"</span>, <span class="string">"T"</span>, <span class="string">"U"</span>, <span class="string">"V"</span>,</span><br><span class="line">			<span class="string">"W"</span>, <span class="string">"X"</span>, <span class="string">"Y"</span>, <span class="string">"Z"</span>, <span class="string">"#"</span> &#125;;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> choose = -<span class="number">1</span>;<span class="comment">// 选中</span></span><br><span class="line">	<span class="keyword">private</span> Paint paint = <span class="keyword">new</span> Paint();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> TextView mTextDialog;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 为SideBar设置显示字母的TextView</span><br><span class="line">	 * <span class="doctag">@param</span> mTextDialog</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTextView</span><span class="params">(TextView mTextDialog)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.mTextDialog = mTextDialog;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SideBar</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(context, attrs, defStyle);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SideBar</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(context, attrs);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SideBar</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(context);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 重写这个方法</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">		<span class="comment">// 获取焦点改变背景颜色.</span></span><br><span class="line">		<span class="keyword">int</span> height = getHeight();<span class="comment">// 获取对应高度</span></span><br><span class="line">		<span class="keyword">int</span> width = getWidth(); <span class="comment">// 获取对应宽度</span></span><br><span class="line">		<span class="keyword">int</span> singleHeight = height / b.length;<span class="comment">// 获取每一个字母的高度</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length; i++) &#123;</span><br><span class="line">			paint.setColor(Color.rgb(<span class="number">33</span>, <span class="number">65</span>, <span class="number">98</span>));</span><br><span class="line">			paint.setTypeface(Typeface.DEFAULT_BOLD);</span><br><span class="line">			paint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">			paint.setTextSize(dp2px(getContext(),<span class="number">14</span>));</span><br><span class="line">			<span class="comment">// 选中的状态</span></span><br><span class="line">			<span class="keyword">if</span> (i == choose) &#123;</span><br><span class="line">				paint.setColor(Color.parseColor(<span class="string">"#3399ff"</span>));</span><br><span class="line">				paint.setFakeBoldText(<span class="keyword">true</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// x坐标等于中间-字符串宽度的一半.</span></span><br><span class="line">			<span class="keyword">float</span> xPos = width / <span class="number">2</span> - paint.measureText(b[i]) / <span class="number">2</span>;</span><br><span class="line">			<span class="keyword">float</span> yPos = singleHeight * i + singleHeight;</span><br><span class="line">			canvas.drawText(b[i], xPos, yPos, paint);</span><br><span class="line">			paint.reset();<span class="comment">// 重置画笔</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dp2px</span><span class="params">(Context context, <span class="keyword">float</span> dpVal)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> result = (<span class="keyword">int</span>) TypedValue.applyDimension(</span><br><span class="line">				TypedValue.COMPLEX_UNIT_DIP, dpVal, context.getResources()</span><br><span class="line">						.getDisplayMetrics());</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">final</span> <span class="keyword">int</span> action = event.getAction();</span><br><span class="line">		<span class="keyword">final</span> <span class="keyword">float</span> y = event.getY();<span class="comment">// 点击y坐标</span></span><br><span class="line">		<span class="keyword">final</span> <span class="keyword">int</span> oldChoose = choose;</span><br><span class="line">		<span class="keyword">final</span> OnTouchingLetterChangedListener listener = onTouchingLetterChangedListener;</span><br><span class="line">		<span class="keyword">final</span> <span class="keyword">int</span> c = (<span class="keyword">int</span>) (y / getHeight() * b.length);<span class="comment">// 点击y坐标所占总高度的比例*b数组的长度就等于点击b中的个数.</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">switch</span> (action) &#123;</span><br><span class="line">		<span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">			setBackgroundDrawable(<span class="keyword">new</span> ColorDrawable(<span class="number">0x00000000</span>));</span><br><span class="line">			choose = -<span class="number">1</span>;<span class="comment">//</span></span><br><span class="line">			invalidate();</span><br><span class="line">			<span class="keyword">if</span> (mTextDialog != <span class="keyword">null</span>) &#123;</span><br><span class="line">				mTextDialog.setVisibility(View.INVISIBLE);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			setBackgroundResource(R.drawable.sidebar_background);</span><br><span class="line">			<span class="keyword">if</span> (oldChoose != c) &#123;</span><br><span class="line">				<span class="keyword">if</span> (c &gt;= <span class="number">0</span> &amp;&amp; c &lt; b.length) &#123;</span><br><span class="line">					<span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">						listener.onTouchingLetterChanged(b[c]);</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span> (mTextDialog != <span class="keyword">null</span>) &#123;</span><br><span class="line">						mTextDialog.setText(b[c]);</span><br><span class="line">						mTextDialog.setVisibility(View.VISIBLE);</span><br><span class="line">					&#125;</span><br><span class="line">					</span><br><span class="line">					choose = c;</span><br><span class="line">					invalidate();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 向外公开的方法</span><br><span class="line">	 * <span class="doctag">@param</span> onTouchingLetterChangedListener</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnTouchingLetterChangedListener</span><span class="params">(</span><br><span class="line">			OnTouchingLetterChangedListener onTouchingLetterChangedListener)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.onTouchingLetterChangedListener = onTouchingLetterChangedListener;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 接口</span><br><span class="line">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnTouchingLetterChangedListener</span> </span>&#123;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTouchingLetterChanged</span><span class="params">(String s)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="编写SideBar_Touch_Down后显示的背景">编写SideBar Touch Down后显示的背景</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">shape</span> <span class="attribute">android:shape</span>=<span class="value">"rectangle"</span></span><br><span class="line">  <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">gradient</span> <span class="attribute">android:startColor</span>=<span class="value">"#99C60000"</span> <span class="attribute">android:endColor</span>=<span class="value">"#99C60000"</span> <span class="attribute">android:angle</span>=<span class="value">"90.0"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">corners</span></span><br><span class="line">        <span class="attribute">android:topLeftRadius</span>=<span class="value">"8dip"</span></span><br><span class="line">        <span class="attribute">android:bottomLeftRadius</span>=<span class="value">"8dip"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="title">shape</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="Activity处理SideBar的Touch监听事件">Activity处理SideBar的Touch监听事件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SideBar mSideBar = (SideBar) findViewById(R.id.sidebar);</span><br><span class="line">TextView dialog = (TextView) findViewById(R.id.dialog);</span><br><span class="line"></span><br><span class="line">mSideBar.setTextView(dialog);</span><br><span class="line">mSideBar.setOnTouchingLetterChangedListener(<span class="keyword">new</span> OnTouchingLetterChangedListener() &#123;</span><br><span class="line">			</span><br><span class="line">			<span class="annotation">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTouchingLetterChanged</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">int</span> position = mAdapter.getPositionForSection(s.charAt(<span class="number">0</span>));</span><br><span class="line">				<span class="keyword">if</span>(position != -<span class="number">1</span>)&#123;</span><br><span class="line">					mListView.setSelection(position);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="Activity布局">Activity布局</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">com.example.sortListView.ClearEditText</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/filter_edit"</span></span><br><span class="line">        <span class="attribute">android:layout_marginTop</span>=<span class="value">"5dip"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:background</span>=<span class="value">"@drawable/search_bar_edit_selector"</span></span><br><span class="line">        <span class="attribute">android:drawableLeft</span>=<span class="value">"@drawable/search_bar_icon_normal"</span></span><br><span class="line">        <span class="attribute">android:hint</span>=<span class="value">"请输入关键字"</span></span><br><span class="line">        <span class="attribute">android:singleLine</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:textSize</span>=<span class="value">"15.0dip"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">FrameLayout</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">ListView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/listview"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"fill_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">            <span class="attribute">android:divider</span>=<span class="value">"@null"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/dialog"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"80.0dip"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"80.0dip"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"center"</span></span><br><span class="line">            <span class="attribute">android:background</span>=<span class="value">"@drawable/show_head_toast_bg"</span></span><br><span class="line">            <span class="attribute">android:gravity</span>=<span class="value">"center"</span></span><br><span class="line">            <span class="attribute">android:textColor</span>=<span class="value">"#ffffffff"</span></span><br><span class="line">            <span class="attribute">android:textSize</span>=<span class="value">"30.0dip"</span></span><br><span class="line">            <span class="attribute">android:visibility</span>=<span class="value">"invisible"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">com.example.sortListView.SideBar</span></span><br><span class="line">            <span class="attribute">android:id</span>=<span class="value">"@+id/sidebar"</span></span><br><span class="line">            <span class="attribute">android:layout_width</span>=<span class="value">"30.0dip"</span></span><br><span class="line">            <span class="attribute">android:layout_height</span>=<span class="value">"fill_parent"</span></span><br><span class="line">            <span class="attribute">android:layout_gravity</span>=<span class="value">"right|center"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="带清除功能的EditText">带清除功能的EditText</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.text.Editable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextWatcher;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnFocusChangeListener;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.Animation;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.CycleInterpolator;</span><br><span class="line"><span class="keyword">import</span> android.view.animation.TranslateAnimation;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClearEditText</span> <span class="keyword">extends</span> <span class="title">EditText</span> <span class="keyword">implements</span> <span class="title">OnFocusChangeListener</span>, <span class="title">TextWatcher</span> </span>&#123; </span><br><span class="line">	</span><br><span class="line">    <span class="keyword">private</span> Drawable mClearDrawable; </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClearEditText</span><span class="params">(Context context)</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">this</span>(context, <span class="keyword">null</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClearEditText</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123; </span><br><span class="line">    	<span class="keyword">this</span>(context, attrs, android.R.attr.editTextStyle); </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClearEditText</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    	mClearDrawable = getCompoundDrawables()[<span class="number">2</span>]; </span><br><span class="line">        <span class="keyword">if</span> (mClearDrawable == <span class="keyword">null</span>) &#123; </span><br><span class="line">        	mClearDrawable = getResources().getDrawable(R.drawable.emotionstore_progresscancelbtn); </span><br><span class="line">        &#125; </span><br><span class="line">        mClearDrawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, mClearDrawable.getIntrinsicWidth(), mClearDrawable.getIntrinsicHeight()); </span><br><span class="line">        setClearIconVisible(<span class="keyword">false</span>); </span><br><span class="line">        setOnFocusChangeListener(<span class="keyword">this</span>); </span><br><span class="line">        addTextChangedListener(<span class="keyword">this</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (getCompoundDrawables()[<span class="number">2</span>] != <span class="keyword">null</span>) &#123; </span><br><span class="line">            <span class="keyword">if</span> (event.getAction() == MotionEvent.ACTION_UP) &#123; </span><br><span class="line">            	<span class="keyword">boolean</span> touchable = event.getX() &gt; (getWidth() </span><br><span class="line">                        - getPaddingRight() - mClearDrawable.getIntrinsicWidth()) </span><br><span class="line">                        &amp;&amp; (event.getX() &lt; ((getWidth() - getPaddingRight())));</span><br><span class="line">                <span class="keyword">if</span> (touchable) &#123; </span><br><span class="line">                    <span class="keyword">this</span>.setText(<span class="string">""</span>); </span><br><span class="line">                &#125; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFocusChange</span><span class="params">(View v, <span class="keyword">boolean</span> hasFocus)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (hasFocus) &#123; </span><br><span class="line">            setClearIconVisible(getText().length() &gt; <span class="number">0</span>); </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">            setClearIconVisible(<span class="keyword">false</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">setClearIconVisible</span><span class="params">(<span class="keyword">boolean</span> visible)</span> </span>&#123; </span><br><span class="line">        Drawable right = visible ? mClearDrawable : <span class="keyword">null</span>; </span><br><span class="line">        setCompoundDrawables(getCompoundDrawables()[<span class="number">0</span>], </span><br><span class="line">                getCompoundDrawables()[<span class="number">1</span>], right, getCompoundDrawables()[<span class="number">3</span>]); </span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, </span><br><span class="line">            <span class="keyword">int</span> after)</span> </span>&#123; </span><br><span class="line">        setClearIconVisible(s.length() &gt; <span class="number">0</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count, </span><br><span class="line">            <span class="keyword">int</span> after)</span> </span>&#123; </span><br><span class="line">         </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="annotation">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123; </span><br><span class="line">         </span><br><span class="line">    &#125; </span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setShakeAnimation</span><span class="params">()</span></span>&#123;</span><br><span class="line">    	<span class="keyword">this</span>.setAnimation(shakeAnimation(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Animation <span class="title">shakeAnimation</span><span class="params">(<span class="keyword">int</span> counts)</span></span>&#123;</span><br><span class="line">    	Animation translateAnimation = <span class="keyword">new</span> TranslateAnimation(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    	translateAnimation.setInterpolator(<span class="keyword">new</span> CycleInterpolator(counts));</span><br><span class="line">    	translateAnimation.setDuration(<span class="number">1000</span>);</span><br><span class="line">    	<span class="keyword">return</span> translateAnimation;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="为ClearEditText添加drawable">为ClearEditText添加drawable</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">selector</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">item</span> <span class="attribute">android:state_focused</span>=<span class="value">"true"</span> <span class="attribute">android:drawable</span>=<span class="value">"@drawable/search_bar_edit_pressed"</span>&gt;</span><span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">item</span> <span class="attribute">android:state_pressed</span>=<span class="value">"true"</span> <span class="attribute">android:drawable</span>=<span class="value">"@drawable/search_bar_edit_pressed"</span>&gt;</span><span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">item</span> <span class="attribute">android:drawable</span>=<span class="value">"@drawable/search_bar_edit_normal"</span>&gt;</span><span class="tag">&lt;/<span class="title">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="Activity中使用ClearEditText">Activity中使用ClearEditText</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ClearEditText mClearEditText = (ClearEditText) findViewById(R.id.filter_edit);</span><br><span class="line">		</span><br><span class="line">	mClearEditText.addTextChangedListener(<span class="keyword">new</span> TextWatcher() &#123;</span><br><span class="line">			</span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> before, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">			filterData(s.toString());</span><br><span class="line">		&#125;</span><br><span class="line">			</span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforeTextChanged</span><span class="params">(CharSequence s, <span class="keyword">int</span> start, <span class="keyword">int</span> count,</span><br><span class="line">				<span class="keyword">int</span> after)</span> </span>&#123;</span><br><span class="line">		&#125;</span><br><span class="line">			</span><br><span class="line">		<span class="annotation">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterTextChanged</span><span class="params">(Editable s)</span> </span>&#123;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><h3 id="资源文件">资源文件</h3><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/search_bar_edit_pressed.9.png" alt="search_bar_edit_pressed" title="search_bar_edit_pressed"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/search_bar_icon_normal.png" alt="search_bar_icon_normal" title="search_bar_icon_normal"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/show_head_toast_bg.9.PNG" alt="show_head_toast_bg" title="show_head_toast_bg"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/emotionstore_progresscancelbtn.png" alt="emotionstore_progresscancelbtn" title="emotionstore_progresscancelbtn"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/search_bar_edit_normal.9.png" alt="search_bar_edit_normal" title="search_bar_edit_normal"></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><h3 id="下载Pinyin4j库">下载<a href="http://mvnrepository.com/artifact/com.belerweb/pinyin4j/2.5.0">Pinyin4j</a>库</h3></li>
<li><h3 id="封装排序Model">封装排序Model</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> String name;   </span><br><span class="line">	<span class="keyword">private</span> String sortLetters;  </span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SortModel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="comment">// <span class="doctag"><span class="keyword">TODO</span></span> Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SortModel</span><span class="params">(String name, String sortLetters)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.sortLetters = sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSortLetters</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSortLetters</span><span class="params">(String sortLetters)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.sortLetters = sortLetters;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[FFmpeg For Android]]></title>
    <link href="http://yoursite.com/2015/07/08/ffmpeg/"/>
    <id>http://yoursite.com/2015/07/08/ffmpeg/</id>
    <published>2015-07-08T02:27:30.000Z</published>
    <updated>2015-07-08T12:57:52.000Z</updated>
    <content type="html"><![CDATA[<p>去年做项目时有用到这一块的,突然间看到群里面有人问到,然后回看了下项目,Google了一下找到了之前的资料,<br>这里我使用的是编译好的Lib,你也可以自己编译ffmpeg.</p>
<h3 id="FFmpeg4Android">FFmpeg4Android</h3><blockquote>
<p><a href="http://androidwarzone.blogspot.com/2011/12/ffmpeg4android.html" target="_blank" rel="external">Android WarZone</a> 可能需要翻墙<br><a href="http://hiteshsondhi88.github.io/ffmpeg-android-java/" target="_blank" rel="external">FFmpeg Android Java</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>去年做项目时有用到这一块的,突然间看到群里面有人问到,然后回看了下项目,Google了一下找到了之前的资料,<br>这里我使用的是编译好的Lib,你也可以自己编译ffmpeg.</p>
<h3 id="FFmpeg4Android">FFmpeg4Android</h3><]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo搭建Blog]]></title>
    <link href="http://yoursite.com/2015/07/07/setup-blog/"/>
    <id>http://yoursite.com/2015/07/07/setup-blog/</id>
    <published>2015-07-07T08:39:17.000Z</published>
    <updated>2015-07-09T08:21:01.000Z</updated>
    <content type="html"><![CDATA[<p>最近研究了下如何搭建静态Blog,周末花了点时间搭建好了，顺便将自己建站的过程记录下。</p>
<p>用到的工具:</p>
<ul>
<li>Mac mini</li>
<li>Brew</li>
<li>npm (包管理,类似于Python中的pip)</li>
<li>Git</li>
<li>Node.js</li>
<li>Hexo</li>
<li>SSH</li>
<li>GitHub</li>
<li>个人申请的域名<a id="more"></a>
</li>
</ul>
<h3 id="安装Homebrew">安装<a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="安装Git">安装Git</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h3 id="安装Node-js">安装Node.js</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<p>使用以下命令验证是否安装成功 node -v  npm -v</p>
<h3 id="安装Hexo">安装Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure>
<blockquote>
<p>在OS X上面安装完毕之运行hexo时可能会提示这样的错误:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[SyntaxError: Unexpected token ILLEGAL]</span><br><span class="line">&#123; [Error: Cannot find module <span class="string">'./build/default/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br><span class="line">&#123; [Error: Cannot find module <span class="string">'./build/Debug/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br></pre></td></tr></table></figure></p>
<p>安装时,可以用npm install hexo —no-optional来解决</p>
</blockquote>
<p>创建项目<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init hexo      <span class="comment">#创建并初始化项目(工作区)</span></span><br></pre></td></tr></table></figure></p>
<p>进入目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure></p>
<p>或者先创建目录然后再初始化项目<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir hexo     <span class="comment">#目录名</span></span><br><span class="line"><span class="built_in">cd</span> hexo        <span class="comment">#进入刚才新建的目录</span></span><br><span class="line">hexo init      <span class="comment">#初始化项目</span></span><br></pre></td></tr></table></figure></p>
<h3 id="安装依赖包(Hexo模块)">安装依赖包(Hexo模块)</h3><blockquote>
<p>详细的Hexo2to3信息<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>.  <span class="built_in">cd</span> hexo</span><br><span class="line"><span class="number">1</span>.  npm install hexo-generator-index --save</span><br><span class="line"><span class="number">2</span>.  npm install hexo-generator-archive --save</span><br><span class="line"><span class="number">3</span>.  npm install hexo-generator-category --save</span><br><span class="line"><span class="number">4</span>.  npm install hexo-generator-tag --save</span><br><span class="line"><span class="number">4</span>.  npm install hexo-server --save</span><br><span class="line"><span class="number">6</span>.  npm install hexo-deployer-git --save</span><br><span class="line"><span class="number">7</span>.  npm install hexo-renderer-marked@<span class="number">0.2</span> --save</span><br><span class="line"><span class="number">8</span>.  npm install hexo-renderer-stylus@<span class="number">0.2</span> --save</span><br><span class="line"><span class="number">9</span>.  npm install hexo-generator-feed@<span class="number">1</span> --save</span><br><span class="line"><span class="number">10</span>. npm install hexo-generator-sitemap@<span class="number">1</span> --save</span><br><span class="line"><span class="number">11</span>. npm install hexo-renderer-ejs --save</span><br><span class="line"><span class="number">12</span>. npm install hexo --save</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="Hexo_部署">Hexo 部署</h3><ul>
<li><p>生成静态文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">hexo generate</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改hexo目录下的_config.yml文件</p>
<blockquote>
<p>主要修改的有</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">url:＃你申请的域名</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git    <span class="comment">#部署类型, 本文使用Github</span></span><br><span class="line">  repository: git@github.com:xxx/xxx.github.io.git  <span class="comment">#部署的仓库的SSH</span></span><br><span class="line">  branch: master   <span class="comment">#部署分支,一般使用master主分支</span></span><br><span class="line">  plugins:</span><br><span class="line">  - hexo-generator-feed   <span class="comment">#此插件用于RSS订阅</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>开启本地server调试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>用浏览器打开<a href="http://localhost:4000/或者http://127.0.0.1:4000/就能看到网页了" target="_blank" rel="external">http://localhost:4000/或者http://127.0.0.1:4000/就能看到网页了</a></p>
<h3 id="修改主题">修改主题</h3><ul>
<li><p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置<br>修改hexo根目录下的 _config.yml中theme: yilia</p>
</li>
<li>更新<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo/themes/yilia</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="SSH">SSH</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ～/.ssh  <span class="comment">#检查是否已经存在ssh</span></span><br></pre></td></tr></table></figure>
<p>如果存在,先将已有的ssh备份或者将新建的ssh生成到另外的目录下<br>如果不存在,通过默认的参数直接生成ssh<br>生成过程如下:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C xxxxx@gmail.com（注册github时的email）</span><br></pre></td></tr></table></figure></p>
<p>在github中添加ssh:</p>
<ul>
<li>登陆github,选择Account Settings—&gt;SSH Public Keys 添加ssh</li>
<li>Title:xxxxx@gmail.com</li>
<li>Key:打开你生成的id_rsa.pub文件,将其中内容拷贝至此<br>测试SSH<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>至此,git和github的设置就完成了</p>
<h3 id="添加个人域名">添加个人域名</h3><ul>
<li>申请个人域名</li>
<li>打开万网域名解析,添加一条解析纪录 CNAME—www—xxxx.github.io—保存</li>
<li>xxxx.github.io 根目录添加文件CNAME,内容为你的域名<br>至此,Blog搭建完毕!<!--more--></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近研究了下如何搭建静态Blog,周末花了点时间搭建好了，顺便将自己建站的过程记录下。</p>
<p>用到的工具:</p>
<ul>
<li>Mac mini</li>
<li>Brew</li>
<li>npm (包管理,类似于Python中的pip)</li>
<li>Git</li>
<li>Node.js</li>
<li>Hexo</li>
<li>SSH</li>
<li>GitHub</li>
<li>个人申请的域名]]>
    
    </summary>
    
  </entry>
  
</feed>