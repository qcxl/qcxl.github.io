<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Mobile Development]]></title>
  <subtitle><![CDATA[移动开发]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-09-01T08:14:20.000Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[weifeng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记六]]></title>
    <link href="http://yoursite.com/2015/09/01/jquery_note_6/"/>
    <id>http://yoursite.com/2015/09/01/jquery_note_6/</id>
    <published>2015-09-01T05:12:59.000Z</published>
    <updated>2015-09-01T08:14:20.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery与Ajax的应用">jQuery与Ajax的应用</h3><h4 id="Ajax的优势与不足">Ajax的优势与不足</h4><ul>
<li><p>Ajax的优势<br>1.不需要插件支持<br>2.优秀的用户体验<br>3.提高web程序的性能<br>4.减轻服务器和宽带的负担</p>
</li>
<li><p>Ajax的不足<br>1.浏览器对XMLHttpRequest对象的支持度不足<br>2.破坏浏览器前进、后退按钮的正常功能<br>3.对搜索引擎的支持不足<br>4.开发和调试工具的缺乏</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li>XMLHttpRequest对象<br>IE5、IE6是以ActiveXObject的方式<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var xmlHttpReq = null;</span><br><span class="line">if(window.ActiveXObject)&#123;</span><br><span class="line">    xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP");</span><br><span class="line">&#125;else if(window.XMLHttpRequest)&#123;</span><br><span class="line">    xmlHttpReq = new XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line">xmlHttpReq.open("GET","test.php",true);//最后一个参数为是否设置为异步请求</span><br><span class="line">xmlHttpReq.onreadystatechange=RequestCallBack;//设置回调函数</span><br><span class="line">xmlHttpReq.send(null);//因为使用GET方法提交,所有可以使用null作为参数</span><br><span class="line">function RequestCallBack()&#123;</span><br><span class="line">    if(xmlHttpReq.readState == 4)&#123;//完成请求</span><br><span class="line">        if(xmlHttpReq.status == 200)&#123;//响应成功</span><br><span class="line">            document.getElementById("resText").innerHTML = xmlHttpReq.responseText;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="jQuery中的Ajax">jQuery中的Ajax</h4><blockquote>
<p>jQuery对Ajax操作进行了封装,在jQuery中<code>$.ajax()</code>方法属于最底层的方法,第2层是<code>load()</code>、<code>$.get()</code>和<code>$.post()</code>方法,第3层是<code>$.getScript()</code>和<code>$.getJSON()</code>方法.</p>
</blockquote>
<h5 id="load()方法">load()方法</h5><ul>
<li><p>载入HTML文档</p>
<blockquote>
<p>能载入远程HTML代码并插入DOM中,它的结构为:<br><code>load(url [,data] [,callback])</code><br>(1) 第一个参数url:请求HTML页面<br>(2) 第二个参数data:发送到服务器的key/value数据<br>(3) 第三个参数callback:请求完成时的回调函数,无论请求成功或者失败</p>
</blockquote>
</li>
<li><p>筛选载入的HTML文档</p>
<blockquote>
<p><code>load()</code>方法的URL参数的语法结构为:<br>“url selector”.</p>
</blockquote>
</li>
</ul>
<p>例如:只需要加载test.html页面中class为”para”的内容:<code>$(&quot;#resText&quot;).load(&quot;test.html .para&quot;);</code></p>
<ul>
<li><p>传递方式<br>无参数传递,则是GET方式,否则为POST方式.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#resText").load("test.php",function()&#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;);</span><br><span class="line">$("#resText").load("test.php",&#123;name:"rain",age:"22"&#125;function()&#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>回调函数<br>回调函数有3个参数,分别代表请求返回的内容、请求状态和XMLHttpRequest对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#resText").load("test.php",function(reponseText,textStatus,XMLHttpRequest)&#123;</span><br><span class="line">    //...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="$-get()方法和$-post()方法"><code>$.get()</code>方法和<code>$.post()</code>方法</h5><blockquote>
<p>这2个方法是jQuery中的全局函数</p>
</blockquote>
<ul>
<li><p><code>$.get()</code>方法(数据通常不能大于2KB)</p>
<blockquote>
<p>语法结构:<br><code>$.get(url [,data] [,callback] [,type])</code><br>(1) 第一个参数url:请求HTML页面的URL地址<br>(2) 第二个参数data:发送到服务器的key/value数据会作为QueryString附加到请求URL中<br>(3) 第三个参数callback(data,textStatus):请求完成时的回调函数(只有当Response的返回状态是success才调用该方法)自动将请求结果和状态传递给该方法.textStatus有4种请求状态:success、error、notmodified、timeout<br>(4) 第四个参数type:服务器返回内容的格式,包括xml、html、script、json、text和default</p>
</blockquote>
</li>
<li><p><code>$.post()</code>方法与<code>$.get()</code>方法语法结构和使用方式都相同</p>
</li>
</ul>
<h5 id="$-getScript()方法和$-getJson()方法"><code>$.getScript()</code>方法和<code>$.getJson()</code>方法</h5><ul>
<li><p><code>$.getScript(&quot;xxx.js&quot;,function(){...})</code> (也有回调函数,它会在JavaScript文件成功载入后运行).<br>有时候,在页面初次加载时就取得所需的全部JavaScript文件是完全没有必要的.虽然可以在需要哪个JavaScript文件时,动态地创建<code>&lt;script&gt;</code>标签,jQuery代码如下:<br><code>$(document.createElement(&quot;script&quot;)).attr(&quot;src&quot;,&quot;test.js&quot;).appendTo(&quot;head&quot;);</code><br>或者<br>  <code>$(&quot;&lt;script type=&#39;text/javascript&#39; src=&#39;test.js&#39; /&gt;&quot;).appendTo(&quot;head&quot;);</code><br>但这种方式并不理想.为此,jQuery提供了<code>$.getScript()</code>方法来直接加载.js文件.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#send").click(function()&#123;</span><br><span class="line">        $.getScript("test.js");</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>$.getJson(&quot;xxx.json&quot;,function(data){...})</code>方法用于加载JSON文件,与<code>$.getScript()</code>方法的用法相同(也有回调函数,在回调函数里处理返回的数据)</p>
</li>
<li><code>$.each()</code>函数<blockquote>
<p>不同于jQuery对象的each()方法,它是一个全局函数,不操作jQuery对象。<br>(1) 第1个参数data:一个数组或者对象<br>(2) 第2个参数callback(对象的成员或数组的索引,对应变量或者内容):回调函数</p>
</blockquote>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#send").click(function()&#123;</span><br><span class="line">        $.getJson("test.json",function(data)&#123;</span><br><span class="line">            $("#resText").empty();</span><br><span class="line">            var html = "";</span><br><span class="line">            $.each(data,function(commentIndex,comment)&#123;</span><br><span class="line">                html +="<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"comment"</span>&gt;</span><span class="tag">&lt;<span class="title">h6</span>&gt;</span>"</span><br><span class="line">                +comment['username']+":<span class="tag">&lt;/<span class="title">h6</span>&gt;</span><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"para"</span>&gt;</span>"+comment['content']+"<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>";</span><br><span class="line">            &#125;);</span><br><span class="line">            $("resText").html(html);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li><code>$.ajax()</code>方法<blockquote>
<p>语法结构:<code>$.ajax(options)</code></p>
</blockquote>
</li>
</ul>
<p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/ajax_fun_1.png" alt="ajax_fun_1" title="ajax_fun_1"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/ajax_fun_2.png" alt="ajax_fun_2" title="ajax_fun_2"></p>
<h4 id="序列化元素">序列化元素</h4><ul>
<li><p><code>serialize()</code>方法.<br>作用于一个jQuery对象,它能够将DOM元素内容序列化为字符串,用于Ajax请求.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#send").click(function()&#123;</span><br><span class="line">    $.get("get1.php",$("#form1").serialize(),function(data,textStatus)&#123;</span><br><span class="line">        $("#resText").html(data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">data也可以使用字符串形式:</span><br><span class="line">"username="+encodeURIComponent($("#username").val())</span><br><span class="line">+"&amp;content="+encodeURIComponent($("#content").val())</span><br></pre></td></tr></table></figure>
</li>
<li><p>serializeArray()方法<br>能够将DOM元素序列化后,返回JSON格式的数据.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var fields = $(":checkbox,:radio").serializeArray();</span><br><span class="line">console.log(fields);</span><br><span class="line">$.each(fields,function(i,field)&#123;</span><br><span class="line">    $("#results").append(field.value + " , ");</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>$.param()</code>方法<br>它是<code>serialize()</code>方法的核心,用来对一个数值或对象按照key/value进行序列化.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var obj = &#123;a:1,b:2,c:3&#125;;</span><br><span class="line">var k = $.param(obj);</span><br><span class="line">alert(k); //输出a=1&amp;b=2&amp;c=3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Ajax全局事件">Ajax全局事件</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"loading"</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">$("#loading").ajaxStart(function()&#123;</span><br><span class="line">    $(this).show();</span><br><span class="line">&#125;);</span><br><span class="line">$("#loading").ajaxStop(function()&#123;</span><br><span class="line">    $(this).hide();</span><br><span class="line">&#125;);//也可以使用链式写法</span><br></pre></td></tr></table></figure>
<p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/ajax_other_method.png" alt="ajax_other_method" title="ajax_other_method"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery与Ajax的应用">jQuery与Ajax的应用</h3><h4 id="Ajax的优势与不足">Ajax的优势与不足</h4><ul>
<li><p>Ajax的优势<br>1.不需要插件支持<br>2.优秀的用户体验<br>3.提高web程序的性能<br>4.减轻服务器和宽带的负担</p>
</li>
<li><p>Ajax的不足<br>1.浏览器对XMLHttpRequest对象的支持度不足<br>2.破坏浏览器前进、后退按钮的正常功能<br>3.对搜索引擎的支持不足<br>4.开发和调试工具的缺乏</p>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记五]]></title>
    <link href="http://yoursite.com/2015/09/01/jquery_note_5/"/>
    <id>http://yoursite.com/2015/09/01/jquery_note_5/</id>
    <published>2015-09-01T02:50:41.000Z</published>
    <updated>2015-09-01T03:21:41.000Z</updated>
    <content type="html"><![CDATA[<h4 id="单选框控制表格行高亮">单选框控制表格行高亮</h4><ul>
<li>使用了<code>end()</code>方法<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("tbody&gt;tr").click(function()&#123;</span><br><span class="line">    $(this).addClass("selected")</span><br><span class="line">    .siblings().removeClass("selected")</span><br><span class="line">    .end()</span><br><span class="line">    .find(":radio").attr("checked",true);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<p>上面代码中使用了<code>end()</code>方法,当前对象是<code>$(this)</code>,当进行<code>addClass(&quot;selected&quot;)</code>操作时,对象并未发生变化,当执行<code>.siblings().removeClass(&quot;selected&quot;)</code>操作时,对象已经变为<code>$(this).siblings()</code>,因此后面操作都是针对这个对象的,如果需要重新返回到<code>$(this)</code>对象,就可以使用<code>end()</code>方法.</p>
<h4 id="复选框控制表格高亮">复选框控制表格高亮</h4><ul>
<li>使用到了三元运算符<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("tbody&gt;tr").click(function()&#123;</span><br><span class="line">    var hasSelected=$(this).hasClass("selected");</span><br><span class="line">    //三元运算符</span><br><span class="line">    $(this)[hasSelected?"removeClass":"addClass"]("selected");</span><br><span class="line">    $(this).find(":checkbox").attr("checked",!hasSelected);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>上面三元运算符其实代表2种情况:<br><code>$(this)[&quot;removeClass&quot;](&quot;selected&quot;);</code>或者<code>$(this)[&quot;addClass&quot;](&quot;selected&quot;);</code><br>它们等价于:<br><code>$(this).removeClass(&quot;selected&quot;);</code>或者<code>$(this).addClass(&quot;selected&quot;);</code> </p>
</blockquote>
<h4 id="表格内容筛选">表格内容筛选</h4><ul>
<li>DOM加载完成立即执行某事件<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#filterName").keyup(function()&#123;</span><br><span class="line">        $("table tbody tr").hide()</span><br><span class="line">        .filter(":contains('"+($(this).val())+"')").show();</span><br><span class="line">    &#125;).keyup();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="网页字体大小">网页字体大小</h4><ul>
<li>获取字体大小值<br><code>var thisEle = $(#para).css(&quot;font-size&quot;);</code><br><code>var textFontSize = parseInt(thisEle,10);</code><br><code>var unit = thisEle.slice(-2);</code><br>获取id为”para”的元素的字体大小.获取的值是将返回的数字和单位.即16px.然后使用<code>parseInt()</code>方法去掉单位,因此16px就变成了16.<code>parseInt()</code>方法的第2个参数表示进制,代码中表示的是十进制.<br><code>slice()</code>方法返回字符串中从指定的字符开始的一个子字符串.</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="单选框控制表格行高亮">单选框控制表格行高亮</h4><ul>
<li>使用了<code>end()</code>方法<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("tbody&gt;tr").click(function()&#123;</span><br><span class="line">    $(this).addClass("selected")</span><br><span class="line">    .siblings().removeClass("selected")</span><br><span class="line">    .end()</span><br><span class="line">    .find(":radio").attr("checked",true);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记四]]></title>
    <link href="http://yoursite.com/2015/08/31/jquery_note_4/"/>
    <id>http://yoursite.com/2015/08/31/jquery_note_4/</id>
    <published>2015-08-31T02:38:59.000Z</published>
    <updated>2015-08-31T08:17:46.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery中的事件">jQuery中的事件</h3><h4 id="加载DOM">加载DOM</h4><ul>
<li>JavaScript中使用<code>window.onload</code>方法,而在jQuery中使用<code>$(document).ready()</code>方法.<br>它们之间的区别:<br><code>window.onload</code>方法是在网页所有的元素(包括元素的所有关联文件)完全加载到浏览器后才执行,即JavaScript此时才可以访问网页中的任何元素.<br>而通过jQuery中的<code>$(document).ready()</code>方法注册的事件处理程序,在DOM完全就绪时就可以被调用.此时网页的所有元素对jQuery都是可以访问的,但是这并不意味着这些元素的所有关联文件都已经下载完毕.</li>
<li>多次使用<code>window.onload</code>方法只会执行最后一个(相当于后面的函数会覆盖前面的函数).<br>而多次使用<code>$(document).ready()</code>方法则会根据注册的顺序依次执行.</li>
<li>简写形式:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(document).ready(function()&#123;&#125;);</span><br><span class="line">$(function()&#123;&#125;);</span><br><span class="line">$().ready(function()&#123;&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h4 id="事件绑定">事件绑定</h4><blockquote>
<p><code>bind(type [,data] ,fn);</code></p>
</blockquote>
<p>第1个参数是事件类型,类型包括:blur、focus、load、resize、scroll、unload、click、dbclick、mousedown、mouseup、mousemove、mouseout、mouseenter、mouseleave、change、select、submit、keydown、keypress、keyup和error等,当然也可以是自定义名称.<br><br>第2个参数为可选参数,作为event.data属性值传递给事件对象的额外数据对象.<br><br>第3个参数则是用来绑定的处理函数.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">加强效果</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").bind("click",function()&#123;</span><br><span class="line">        var $content = $(this).next();</span><br><span class="line">        if($content.is(":visible"))&#123;</span><br><span class="line">            $content.hide();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $content.show();</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">改变绑定事件的类型</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").bind("mouseover",function()&#123;</span><br><span class="line">        $(this).next.show();</span><br><span class="line">        &#125;).bind("mouseout",function()&#123;</span><br><span class="line">            $(this).next().hide();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">简写绑定事件</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").mouseover(function()&#123;</span><br><span class="line">        $(this).next.show();</span><br><span class="line">        &#125;).mouseout(function()&#123;</span><br><span class="line">            $(this).next().hide();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p>
<h4 id="合成事件">合成事件</h4><blockquote>
<p>jQuery有两个合成事件分别是 <code>hover()</code> 方法和 <code>toggle()</code>方法.</p>
</blockquote>
<ul>
<li><code>hover()</code>方法<br>语法结构:<code>hover(enter,leave);</code> 用于模拟光标悬停事件.当光标移动到元素上时,会触发指定的第1以函数(enter);当光标移出这个元素上时,会触发指定的第2个函数(leave).<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").hover(function()&#123;</span><br><span class="line">        $(this).next.show();</span><br><span class="line">        &#125;,function()&#123;</span><br><span class="line">            $(this).next().hide();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">与下面代码运行效果一样</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").mouseover(function()&#123;</span><br><span class="line">        $(this).next.show();</span><br><span class="line">        &#125;).mouseout(function()&#123;</span><br><span class="line">            $(this).next().hide();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><code>hover()</code>方法准确来说是替代jQuery中的<code>bind(&quot;mouseenter&quot;)</code>和<code>bind(&quot;mouseleave&quot;)</code>而不是替代<code>bind(&quot;mouseover&quot;)</code>和<code>bind(&quot;mouseout&quot;)</code>.</p>
</blockquote>
<ul>
<li><code>toggle()</code>方法<br>语法结构:<code>toggle(fn1,fn2,...fnN);</code>用于模拟鼠标连续点击事件.第一次单击元素,触发指定的第1个函数(fn1),当再次单击同一元素时,则触发指定的第2个函数(fn2);如果有更多函数,则一次触发,直到最后一个.随后的每次单击都重复对这几个函数的轮番调用.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").bind("click",function()&#123;</span><br><span class="line">        var $content = $(this).next();</span><br><span class="line">        if($content.is(":visible"))&#123;</span><br><span class="line">            $content.hide();</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $content.show();</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">使用toggle()方法改写上面例子:</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel h5.head").toggle(function()&#123;</span><br><span class="line">        $(this).addClass("highlight")//添加高亮样式</span><br><span class="line">        $(this).next.show();</span><br><span class="line">        &#125;,function()&#123;</span><br><span class="line">            $(this).removeClass("highlight")//移除高亮样式</span><br><span class="line">                $(this).next().hide();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="事件冒泡">事件冒泡</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="comment">//为span元素绑定click事件</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">"span"</span>).bind(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> txt = $(<span class="string">"#msg"</span>).html() + <span class="string">"&lt;p&gt;内层span元素被单击&lt;/p&gt;"</span></span><br><span class="line">            $(<span class="string">"#msg"</span>).html(txt);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//为div元素绑定click事件</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">"#content"</span>).bind(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> txt = $(<span class="string">"#msg"</span>).html() + <span class="string">"&lt;p&gt;外层div元素被单击&lt;/p&gt;"</span></span><br><span class="line">            $(<span class="string">"#msg"</span>).html(txt);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//为body元素绑定click事件</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">"body"</span>).bind(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> txt = $(<span class="string">"#msg"</span>).html() + <span class="string">"&lt;p&gt;body元素被单击&lt;/p&gt;"</span></span><br><span class="line">            $(<span class="string">"#msg"</span>).html(txt);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">        外层div元素</span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>内层span元素<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        外层div元素</span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>元素的click事件会按照以下顺序”冒泡”.<br>(1)<code>&lt;span&gt;</code><br>(2)<code>&lt;div&gt;</code><br>(3)<code>&lt;body&gt;</code></p>
<ul>
<li><p>事件对象<br>event获取事件对象以及事件对象的一些属性.<code>$(&quot;element&quot;).bind(&quot;click&quot;,function(event){});</code> 当单击”element”元素时,事件对象就被创建了.这个事件对象只有事件处理函数才能访问到.事件处理函数执行完毕后,事件对象就被销毁.</p>
</li>
<li><p>停止事件冒泡 <code>stopPropagation()</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("span").bind('click', function(event) &#123;</span><br><span class="line">        var txt = $("#msg").html() + "<span class="tag">&lt;<span class="title">p</span>&gt;</span>内层span元素被单击<span class="tag">&lt;/<span class="title">p</span>&gt;</span>"</span><br><span class="line">        $("#msg").html(txt);</span><br><span class="line">        event.stopPropagation(); //停止事件冒泡</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>阻止默认行为 <code>event.preventDefault()</code><br>网页中的元素有自己的默认行为,例如:单击超级链接后会跳转、单击”提交”按钮后表单会提交,有时需要阻止元素的默认行为.<br>如果想同时对事件对象停止冒泡和默认行为,可以在事件处理函数中返回false.<br>这是对事件对象上同时调用stopPropagation()方法和preventDefault()方法的一种简写方式.</p>
</li>
</ul>
<h4 id="事件对象的属性">事件对象的属性</h4><ul>
<li><code>event.type</code> 获取事件的类型</li>
<li><code>event.preventDefault();</code></li>
<li><code>event.stopPropagation();</code></li>
<li><code>event.target</code> 获取触发事件的元素</li>
<li><code>event.relatedTarget</code> 获取触发事件的相关元素</li>
<li><code>event.pageX</code> 和 <code>event.pageY</code> 获取光标相对于x坐标和y坐标.</li>
<li><code>event.which</code> 鼠标单击事件中获取到鼠标左、中、右键;在键盘事件中获取键盘的按键. 1=鼠标左键、2=鼠标中键、3=鼠标右键</li>
<li><code>event.metaKey</code> 键盘事件中获取<ctrl>按键.</ctrl></li>
</ul>
<h4 id="移除事件">移除事件</h4><ul>
<li>移除按钮元素上以前注册的事件<blockquote>
<p>语法结构:<code>unbind([type],[data])</code><br>第一个参数是事件类型,第二个参数是将要移除的函数,具体说明如下:<br>(1) 如果没有参数,则删除所有绑定的事件.<br>(2) 如果提供了事件类型作为参数,则只删除该类型的绑定事件.<br>(3) 如果把在绑定时传递的处理函数作为第2个参数,则只有这个特定的事件处理函数会被删除.</p>
</blockquote>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#delAll").click(function()&#123;</span><br><span class="line">    $("#btn").unbind("click");</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">如果元素绑定的都是click事件,还可以这样写:</span><br><span class="line">$("#delAll").click(function()&#123;</span><br><span class="line">    $("#btn").unbind();</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>移除<code>&lt;button&gt;</code>元素的其中一个事件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#btn").bind("click",myFun1 = function()&#123;</span><br><span class="line">        $("#test").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>我的绑定函数1<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;).bind("click",myFun2 = function()&#123;</span><br><span class="line">        $("#test").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>我的绑定函数2<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;).bind("click",myFun3 = function()&#123;</span><br><span class="line">        $("#test").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>我的绑定函数3<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">删除"绑定函数2"</span><br><span class="line">$("#delTwo").click(function()&#123;</span><br><span class="line">    $("#btn").unbind("click",myFun2);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>One()</code>方法可以为元素绑定处理函数.当处理函数触发一次后,立即被删除.即在每个对象上,事件处理函数只会被执行一次.</p>
<blockquote>
<p>语法结构:<code>one( type, [data], fn );</code></p>
</blockquote>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#btn"</span>).one(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#test"</span>).append(<span class="string">"&lt;p&gt;我的绑定函数1&lt;/p&gt;"</span>);</span><br><span class="line">    &#125;).one(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#test"</span>).append(<span class="string">"&lt;p&gt;我的绑定函数2&lt;/p&gt;"</span>);</span><br><span class="line">    &#125;).one(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#test"</span>).append(<span class="string">"&lt;p&gt;我的绑定函数3&lt;/p&gt;"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"btn"</span>&gt;</span>点击我<span class="tag">&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="模拟操作">模拟操作</h3><blockquote>
<p>语法结构:<code>trigger(type,[data])</code><br>第1个参数是要触发的事件类型.<br>第2个参数是要传递给事件处理函数的附加数据,以数组形式传递.通常可以通过传递一个参数给回调函数来区别这次事件是代码触发的还是用户触发的.</p>
</blockquote>
<ul>
<li><code>trigger()</code> 例如:<code>$(#btn).trigger(&quot;click&quot;);</code> 也可以简写成 <code>$(#btn).click();</code></li>
<li><p>触发自定义事件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#btn").bind("myClick",function()&#123;</span><br><span class="line">    $("#test").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>我的自定义事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">    &#125;);</span><br><span class="line">触发自定义事件:</span><br><span class="line">$("#btn").trigger("myClick");</span><br></pre></td></tr></table></figure>
</li>
<li><p>传递数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#btn").bind("myClick",function(event,message1,message2)&#123;</span><br><span class="line">    $("#test").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>"+message1 + message2 +"<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">    &#125;);</span><br><span class="line">$("#btn").trigger("myClick",["我的自定义","事件"]);</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行默认操作<br><code>trigger()</code>方法触发事件后,会执行浏览器默认操作.例如:<code>$(&quot;input&quot;).trigger(&quot;focus&quot;);</code><br>以上代码不仅会触发为<code>&lt;input&gt;</code>元素绑定的focus事件,也会使<code>&lt;input&gt;</code>元素本身得到焦点(这是浏览器的默认操作).<br>如果只想触发绑定的focus事件,而不想执行浏览器默认操作,可以使用jQuery中另一个类似的方法<strong>triggerHandler()</strong>方法.<br><code>$(&quot;input&quot;).triggerHandler(&quot;focus&quot;);</code><br>该方法会触发<code>&lt;input&gt;</code>元素上绑定的特定事件,同时取消浏览器对此事件的默认操作,即文本框只触发绑定的focus事件,不会得到焦点.</p>
</li>
</ul>
<h4 id="其他用法">其他用法</h4><ul>
<li><p>绑定多个事件类型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("div").bind("mouseover mouseout",function()&#123;</span><br><span class="line">        $(this).toogleClass("over");</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加事件命名空间,便于管理</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("div").bind("click.plugin",function()&#123;</span><br><span class="line">        $("body").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>click事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    $("div").bind("mouseover.plugin",function()&#123;</span><br><span class="line">        $("body").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>mouseover事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    $("div").bind("dbclick",function()&#123;</span><br><span class="line">        $("body").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>dbclick事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    $("button").click(function()&#123;</span><br><span class="line">        $("div").unbind(".plugin");//$("div").unbind("click").unbind("mouseover");</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>相同事件名称,不同命名空间执行方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("div").bind("click",function()&#123;</span><br><span class="line">        $("body").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>click事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    $("div").bind("click.plugin",function()&#123;</span><br><span class="line">        $("body").append("<span class="tag">&lt;<span class="title">p</span>&gt;</span>click.plugin事件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>");</span><br><span class="line">        &#125;);</span><br><span class="line">    $("button").click(function()&#123;</span><br><span class="line">        $("div").trigger("click!");//click!匹配所有不包含在命名空间中的click方法,如果需要两者都被触发,改写成这样:$("div").trigger("click");</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="jQuery中的动画">jQuery中的动画</h3><h4 id="show()方法和hide()方法"><code>show()</code>方法和<code>hide()</code>方法</h4><blockquote>
<p>参数:如果没有参数则为默认normal,另外还有fast、slow、具体毫秒值.<br>它改变了元素的宽、高、不透明度</p>
</blockquote>
<p><code>$(&quot;element&quot;).hide();</code>等同于<code>$(&quot;element&quot;).css(&quot;display&quot;,&quot;none&quot;);</code></p>
<h4 id="fadeIn()方法和fadeOut()方法"><code>fadeIn()</code>方法和<code>fadeOut()</code>方法</h4><blockquote>
<p>只改变了元素的透明度</p>
</blockquote>
<h4 id="slideUp()方法和slideDown()方法"><code>slideUp()</code>方法和<code>slideDown()</code>方法</h4><blockquote>
<p>只改变元素的高度</p>
</blockquote>
<h4 id="自定义动画方法">自定义动画方法</h4><blockquote>
<p>语法结构:<code>animate(params,speed,callback);</code><br>参数说明如下:<br>(1)params:一个包含样式属性及值的映射,比如{property1:”value1”,property2:”value2”,….}.<br>(2)speed:速度参数,可选.<br>(3)callback:在动画完成时执行的函数,可选.</p>
</blockquote>
<h4 id="自定义简单动画">自定义简单动画</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel").click(function()&#123;</span><br><span class="line">        $(this).animte(&#123;left:"500px"&#125;,3000);//元素向右移动500px</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="累加、累减动画">累加、累减动画</h4><p>使用”+=”或者”-=”<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel").click(function()&#123;</span><br><span class="line">        $(this).animte(&#123;left:"+=500px"&#125;,3000);//元素向右移动500px</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p>
<h4 id="多重动画">多重动画</h4><p>(1)同时执行多个动画<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel").click(function()&#123;</span><br><span class="line">        $(this).animte(&#123;left:"=500px",height:"200px"&#125;,3000);//元素向右移动500px</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p>
<p>(2)按顺序执行多个动画<br><code>$(this).animte({left:&quot;=500px&quot;},3000);</code><br><code>$(this).animte({height:&quot;200px&quot;},3000);</code><br>或者写成:<br><code>$(this).animte({left:&quot;=500px&quot;},3000).animte({height:&quot;200px&quot;},3000);</code></p>
<h4 id="综合动画">综合动画</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel").css("opacity","0.5");</span><br><span class="line">    $("#panel").click(function&#123;</span><br><span class="line">        $(this).animte(&#123;left:"=500px",height:"200px",opacity:"1"&#125;,3000)</span><br><span class="line">        .animate(&#123;top:"200px",width:"200px"&#125;,3000)</span><br><span class="line">        .fadeOut("slow");</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="动画回调函数">动画回调函数</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">    $("#panel").css("opacity","0.5");</span><br><span class="line">    $("#panel").click(function&#123;</span><br><span class="line">        $(this).animte(&#123;left:"=500px",height:"200px",opacity:"1"&#125;,3000)</span><br><span class="line">        .animate(&#123;top:"200px",width:"200px"&#125;,3000,function()&#123;</span><br><span class="line">                $(this).css("broder","5px solid blue");</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<h4 id="停止动画和判断是否处于动画状态">停止动画和判断是否处于动画状态</h4><ul>
<li>停止元素的动画<blockquote>
<p>语法结构:stop([clearQueue],[gotoEnd]);<br>2个参数都为Boolean值<br>clearQueue代表是否要清空未执行完的动画队列.<br>gotoEnd代表是否直接将正在执行的动画跳转到末状态.<br>如果直接使用stop()方法,则会立即停止当前正在进行的动画,如意接下来还有动画等待继续进行,则已当前状态开始接下来的动画.</p>
</blockquote>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#panel").hover(function()&#123;</span><br><span class="line">    $(this).stop(true)</span><br><span class="line">    .animate(&#123;height:"150"&#125;,200) //如果在此时触发了光标移出事件 直接跳过后面的动画队列</span><br><span class="line">    .animate(&#123;width:"300"&#125;,300) </span><br><span class="line">    &#125;).function()&#123;</span><br><span class="line">    $(this).stop(true)</span><br><span class="line">    .animate(&#123;height:"22"&#125;,200) </span><br><span class="line">    .animate(&#123;width:"60"&#125;,300) </span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>判断元素是否处于动画状态<br><code>if(! $(element).is(&quot;:animated&quot;)){...}</code></li>
<li>延迟动画<br><code>$(this).animte({left:&quot;=500px&quot;,height:&quot;200px&quot;,opacity:&quot;1&quot;},3000).delay(1000);</code></li>
</ul>
<h4 id="其他动画方法">其他动画方法</h4><p><code>toggle(speed,[callback])</code> 切换元素的可见状态<br><code>slideToggle(speed,[easing],[callback])</code> 通过高度变化来来切换匹配元素的可见性。<br><code>fadeTo(speed,opacity,[callback])</code> 将元素的不透明度以渐进方式调整到指定值<br><code>fadeToggle(speed,[easing],[callback])</code> 通过不透明度变化来切换匹配元素的可见性</p>
<h4 id="动画方法概括">动画方法概括</h4><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/styleImg.png" alt="styleImg" title="styleImg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery中的事件">jQuery中的事件</h3><h4 id="加载DOM">加载DOM</h4><ul>
<li>JavaScript中使用<code>window.onload</code>方法,而在jQuery中使用<code>$(document).ready()</code>方法.<br>它们之间的区别:<br><code>window.onload</code>方法是在网页所有的元素(包括元素的所有关联文件)完全加载到浏览器后才执行,即JavaScript此时才可以访问网页中的任何元素.<br>而通过jQuery中的<code>$(document).ready()</code>方法注册的事件处理程序,在DOM完全就绪时就可以被调用.此时网页的所有元素对jQuery都是可以访问的,但是这并不意味着这些元素的所有关联文件都已经下载完毕.</li>
<li>多次使用<code>window.onload</code>方法只会执行最后一个(相当于后面的函数会覆盖前面的函数).<br>而多次使用<code>$(document).ready()</code>方法则会根据注册的顺序依次执行.</li>
<li>简写形式:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(document).ready(function()&#123;&#125;);</span><br><span class="line">$(function()&#123;&#125;);</span><br><span class="line">$().ready(function()&#123;&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记三]]></title>
    <link href="http://yoursite.com/2015/08/28/jquery_note_3/"/>
    <id>http://yoursite.com/2015/08/28/jquery_note_3/</id>
    <published>2015-08-28T01:46:21.000Z</published>
    <updated>2015-08-28T07:33:50.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_中的DOM操作">jQuery 中的DOM操作</h3><h4 id="DOM操作分类">DOM操作分类</h4><ul>
<li>DOM Core<br>使用DOM Core来获取表单对象的方法:<code>document.getElementsByTagName(&quot;form&quot;);</code><br>使用DOM Core来获取某元素的src属性的方法:<code>element.getAttribute(&quot;src&quot;);</code></li>
<li>HTML-DOM<br>使用HTML-DOM来获取表单对象的方法:<code>document.forms;</code><br>使用HTML-DOM来获取某元素的src属性的方法:<code>element.src;</code></li>
<li>CSS-DOM<br>CSS-DOM 是针对CSS的操作,例如设置某元素style对象字体颜色的方法:<code>element.style.color = &quot;red&quot;;</code><a id="more"></a>
</li>
</ul>
<h4 id="jQuery_中的DOM操作-1">jQuery 中的DOM操作</h4><ul>
<li><p>查找节点</p>
<ul>
<li><p>查找元素节点</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $li = $("ul li:eq(1)"); //获取<span class="tag">&lt;<span class="title">ul</span>&gt;</span>里第2个<span class="tag">&lt;<span class="title">li</span>&gt;</span>节点</span><br><span class="line">var li_txt = $li.text(); //获取第2个<span class="tag">&lt;<span class="title">li</span>&gt;</span>元素节点的文本内容</span><br><span class="line">alert(li_txt);</span><br></pre></td></tr></table></figure>
</li>
<li><p>查找属性节点<br>利用jQuery选择器查找到需要的元素之后,就可以使用<code>attr()</code>方法来获取它的各种属性的值.<code>attr()</code>方法的参数可以是一个,也可以是两个.当参数是一个时,则需要查询的属性的名字,例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $para = $("p"); //获取<span class="tag">&lt;<span class="title">p</span>&gt;</span>节点</span><br><span class="line">var p_txt = $para.attr("title"); //获取<span class="tag">&lt;<span class="title">p</span>&gt;</span>元素节点属性title</span><br><span class="line">alert(p_txt);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>创建节点</p>
<ul>
<li><p>创建元素节点<br>例如要创建两个<code>&lt;li&gt;</code>元素节点,并且要把它们作为<code>&lt;ul&gt;</code>元素节点的子节点添加到DOM节点树上.完成这个任务需要两个步骤.<br>(1)创建两个<code>&lt;li&gt;</code>新元素<br>(2)将这两个新元素插入文档中<br>第(1)步可以使用jQuery的工厂函数<code>$()</code>来完成 <code>$(html);</code><br>第(2)步创建两个<code>&lt;li&gt;</code>元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $li_1 = $("<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>");</span><br><span class="line">var $li_2 = $("<span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>");</span><br></pre></td></tr></table></figure>
<p>最后将两个新元素插入到文档中,可以使用jQuery中的<code>append()</code>方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("ul").append($li_1);</span><br><span class="line">$("ul").append($li_2);  //可以采取链式写法:$("ul").append($li_1).append($li_2);</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建文本节点<br>改写上面的内容使用<code>&lt;li&gt;香蕉&lt;/li&gt;</code></p>
</li>
<li>创建属性节点<br>改写上面的内容使用<code>&lt;li title=&quot;香蕉&quot;&gt;香蕉&lt;/li&gt;</code></li>
</ul>
</li>
<li><p>插入节点<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/insert_element_method.png" alt="insert_element_method" title="insert_element_method"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $li_1 = $("<span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"香蕉"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span>");</span><br><span class="line">var $li_2 = $("<span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"雪梨"</span>&gt;</span>雪梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span>");</span><br><span class="line">var $li_3 = $("<span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"其它"</span>&gt;</span>其它<span class="tag">&lt;/<span class="title">li</span>&gt;</span>");</span><br><span class="line">var $parent = $("ul");</span><br><span class="line">var $two_li = $("ul li:eq(1)");</span><br><span class="line">$parent.append($li_1);</span><br><span class="line">$parent.append($li_2);</span><br><span class="line">$li_3.insertAfter($two_li);</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除节点<br>jQuery提供了三种删除节点的方法即:<code>remove()</code>、<code>detach()</code>、<code>empty()</code>.</p>
<ul>
<li><p><code>remove()</code>方法</p>
<blockquote>
<p>作用是从DOM中删除所有匹配的元素,传入的参数用于根据jQuery表达式来筛选元素.</p>
</blockquote>
<p><code>$(&quot;ul li:eq(1)&quot;).remove();</code> 获取第二个<code>&lt;li&gt;</code>元素节点后将它从网页中删除<br>当某个节点用remove()方法删除后,该节点所包含的所有后代节点将同时被删除.这个方法的返回值是一个指向已被删除的节点的引用,因此可以在以后再使用这些元素.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $li = $("ul li:eq(1)").remove();</span><br><span class="line">$li.appendTo("ul");</span><br></pre></td></tr></table></figure>
<blockquote>
<p>另外remove()方法也可以通过传递参数来选择性的删除元素<br><code>$(&quot;ul li&quot;).remove(&quot;li[title!=菠萝]&quot;);</code></p>
</blockquote>
</li>
<li><p><code>detach()</code>方法</p>
<blockquote>
<p>detach()和remove()一样,也是从DOM中删除所有匹配的元素.但是要注意的是,这个方法不会把匹配的元素从jQuery对象中删除,因而可以在将来在使用这些匹配的元素.与remove()方法不同的是,所有绑定的事件、附加的数据等都会被保留下来.</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("ul li").click(function()&#123;</span><br><span class="line">    alert($(this).html());</span><br><span class="line">    &#125;);</span><br><span class="line">var $li = $("ul li:eq(1)").detach(); //删除元素</span><br><span class="line">$li.appendTo("ul"); //重新追加此元素,发现它之前绑定的事件还在,如果使用remove()方法的话,那么它之前的事件将实效.</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>empty()</code>方法</p>
<blockquote>
<p>严格来说,empty()方法并不是删除节点,而是清空节点,它能清空元素中的所有后代节点.</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("ul li:eq(1)").empty(); //获取第二个<span class="tag">&lt;<span class="title">li</span>&gt;</span>节点后,清空此元素里的内容,注意是元素里的</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>复制节点<br>使用<code>clone()</code> 如果在方法中传递一个参数true,它的含义是复制元素的同时复制元素中所绑定的事件.因此此元素的副本也同样具有复制功能.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("ul li").click(function()&#123;</span><br><span class="line">    $(this).clone().appendTo("ul");//复制当前单击的节点,并将它追加到<span class="tag">&lt;<span class="title">ul</span>&gt;</span>元素中 被复制的新元素并不具有任何行为.</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>替换节点<br>如果要替换某个节点,jQuery提供相应的方法,即<code>replaceWith()</code>和<code>replaceAll()</code><br><code>replaceWith()</code>方法的作用是将所有匹配的元素都替换成指定的HTML或者DOM元素.<code>$(&quot;p&quot;).replaceWitch(&quot;&lt;strong&gt;你最喜欢的水果是?&lt;/strong&gt;&quot;);</code> 也可以用<code>replaceAll()</code>来实现,该方法与<code>replaceWith()</code>方法的作用相同,只是颠倒了<code>replaceWith()</code>操作.<code>$(&quot;&lt;strong&gt;你最喜欢的水果是?&lt;/strong&gt;&quot;).replaceAll(&quot;p&quot;);</code> </p>
<blockquote>
<p>如果在替换之前,已经为元素绑定事件,替换后原先绑定的事件将会与被替换的元素一起消失,需要在新元素上重新绑定事件.</p>
</blockquote>
</li>
<li><p>包裹节点</p>
<ul>
<li><p>wrapAll()<br>该方法会将所有匹配的元素用一个元素来包裹.它不同于wrap()方法,wrap()方法是将所有的元素进行单独包裹.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"橘子"</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"菠萝"</span>&gt;</span>菠萝<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果使用wrap()方法包裹<code>&lt;strong&gt;</code>元素:<code>$(&quot;strong&quot;).wrap(&quot;&lt;br&gt;&lt;/br&gt;&quot;);</code><br>将会得到如下结果:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果使用wrapAll()方法包裹<code>&lt;strong&gt;</code>元素:<code>$(&quot;strong&quot;).wrapAll(&quot;&lt;br&gt;&lt;/br&gt;&quot;);</code><br>将会得到如下结果:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">strong</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">br</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>wrap()</p>
</li>
<li>wrapInner()<br>该方法将每一个匹配的元素的字内容(包括文本节点)用其他结构化的标记包裹起来.例如:<br><code>$(&quot;strong&quot;).wrapInner(&quot;&lt;br&gt;&lt;/br&gt;&quot;);</code><br>将会得到如下结果:<br><code>&lt;strong title=&quot;选择你最喜欢的水果&quot;&gt;&lt;br&gt;你最喜欢的水果是?&lt;/br&gt;&lt;/strong&gt;</code></li>
</ul>
</li>
<li><p>属性操作</p>
<ul>
<li><p>获取属性和设置属性<br>如果要获取<code>&lt;p&gt;</code>元素的属性title,那么只需要给<code>attr()</code>方法传递一个参数,即属性名称.如下:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $para = $("p");</span><br><span class="line">var p_txt = $para.attr("title");</span><br></pre></td></tr></table></figure>
<p>如果要设置<code>&lt;p&gt;</code>元素的属性title的值, 也可以使用同一个方法,不同的是,需要传递两个参数即属性名称和对应的值.</p>
<blockquote>
<p><code>$(selector).attr(&quot;key&quot;,&quot;value&quot;)</code><br>例如:<br><code>$(&quot;p&quot;).attr(&quot;title&quot;,&quot;your title&quot;);</code><br>如果需要一次性为同一个元素设置多个属性,可以使用下面的代码来实现<br><code>$(selector).attr(&quot;key&quot;:&quot;value&quot;,&quot;key&quot;:&quot;value&quot;)</code><br>例如:<br><code>$(&quot;p&quot;).attr(&quot;title&quot;:&quot;your title&quot;,&quot;name&quot;:&quot;test&quot;);</code></p>
</blockquote>
</li>
<li><p>删除属性<br>可以使用<code>removeAttr()</code>方法来完成该任务。<code>$(&quot;p&quot;).removeAttr(&quot;title&quot;);</code></p>
</li>
</ul>
</li>
<li><p>样式操作</p>
<ul>
<li>获取样式和设置样式<br><code>&lt;p class=&quot;myClass&quot; title=&quot;选择你最喜欢的水果&quot;&gt;你最喜欢的水果是?&lt;/p&gt;</code><br>可以使用attr()方法来获取和设置<code>&lt;p&gt;</code>元素的class属性.<br><code>var p_class = $(&quot;p&quot;).attr(&quot;class&quot;);</code> 获取p元素的class<br><code>$(&quot;p&quot;).attr(&quot;class&quot;,&quot;high&quot;);</code> 设置p元素的class为”high”</li>
<li><p>追加样式<br>使用<code>addClass()</code>方法追加样式.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line"><span class="class">.high</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> bold</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> red</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.another</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-style</span>:<span class="value"> italic</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> blue</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>为p元素追加class类<code>$(&quot;p&quot;).addClass(&quot;another&quot;);</code><br>追加样式和设置样式的区别:<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/append_and_set_css.png" alt="append_and_set_css" title="append_and_set_css"></p>
</li>
<li>移除样式<br><code>$(&quot;p&quot;).removeClass(&quot;high&quot;);</code><br><code>$(&quot;p&quot;).removeClass(&quot;high&quot;).removeClass(&quot;another&quot;);</code><br>或者使用如下来移除所有样式:<br><code>$(&quot;p&quot;).removeClass(&quot;high another&quot;);</code><br>或者使用如下来移除所有样式:<br><code>$(&quot;p&quot;).removeClass();</code></li>
<li><p>切换样式<br>使用<code>toggle()</code>方法来交替执行函数,主要控制行为上的重复切换.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$toggleBtn.toggle(function()&#123;</span><br><span class="line">    //显示元素</span><br><span class="line">    &#125;.function()&#123;</span><br><span class="line">    //隐藏元素</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<p>使用<code>toggleClass()</code>方法控制样式上的重复切换.如果类名存在则删除它,如果类名不存在则添加它.<code>$(&quot;p&quot;).toggleClass(&quot;another&quot;);</code></p>
</li>
<li>判断是否含有某个样式<br><code>hasClass()</code>可以用来判断元素是否含有某个class,如果有,则返回true,否则返回false.<br><code>$(&quot;p&quot;).hasClass(&quot;another&quot;);</code>(其内部实际上是调用了is()方法来完成这个功能的) == <code>$(&quot;p&quot;).is(&quot;.another&quot;)</code></li>
</ul>
</li>
<li><p>设置和获取HTML、文本和值</p>
<ul>
<li><p><code>html()</code>方法<br>此方法类似于JavaScript中的innerHTML属性,可以用来读取或者设置某个元素中的HTML内容.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"myClass"</span> <span class="attribute">title</span>=<span class="value">"选择你最喜欢的水果"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">strong</span>&gt;</span>你最喜欢的水果是?<span class="tag">&lt;/<span class="title">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>var p_html = $(&quot;p&quot;).html();</code> #输出<code>&lt;strong&gt;你最喜欢的水果是?&lt;/strong&gt;</code><br>设置<code>&lt;p&gt;</code>元素的HTML代码:<code>$(&quot;p&quot;).html(&quot;&lt;strong&gt;你最喜欢的水果是?&lt;/strong&gt;&quot;)</code></p>
</li>
<li><code>text()</code>方法<br>此方法类似于JavaScript中的innerText属性,可以用来读取或者设置某个元素中的文本内容.<br><code>var p_html = $(&quot;p&quot;).text();</code> #输出<code>你最喜欢的水果是?</code><br>设置<code>&lt;p&gt;</code>元素的文本内容代码:<code>$(&quot;p&quot;).text(&quot;你最喜欢的水果是?&quot;)</code></li>
<li><p><code>val()</code>方法<br>类似于JavaScript中的value属性,可以用来设置和获取元素的值.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#address").focus(function()&#123;</span><br><span class="line">    var txt_value = $(this).val();</span><br><span class="line">    if(txt_value=="请输入邮箱地址")&#123;// txt_value=this.defaultValue  this指向当前的文本框,this.defaultValue  就是当前文本框的默认值</span><br><span class="line">        $(this).val("");</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">$("#address").blur(function()&#123;</span><br><span class="line">    var txt_value = $(this).val();</span><br><span class="line">    if(txt_value=="")&#123;</span><br><span class="line">        $(this).val("请输入邮箱地址");// $(this).val(this.defaultValue);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<p>设置下拉选框列表项、单选框、复选框被选中:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$("#single").val("select中option当中的值");</span><br><span class="line">$("#multiple").val(["select中option当中的值","select中option当中的值"]);</span><br><span class="line">$(":checkbox").val(["checkbox中属性value的值","checkbox中属性value的值"]);</span><br><span class="line">$(":radio").val(["radio中属性value的值","checkbox中属性value的值"]);</span><br><span class="line">上面也可以使用attr()方法来实现同样的功能</span><br><span class="line">$("#single option:eq(1)").attr("selected",true);</span><br><span class="line">$("[value=radio2]:radio").attr("checked",true);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>遍历节点</p>
<ul>
<li><p><code>children()</code>方法<br>该方法用于取得匹配元素的子元素集合.</p>
<blockquote>
<p><code>children()</code>方法只考虑子元素而不考虑其他后代元素</p>
</blockquote>
</li>
<li><p><code>next()</code>方法<br>该方法用于取得匹配元素后面紧邻的同辈元素</p>
</li>
<li><code>prev()</code>方法<br>该方法用于取得匹配元素前面紧邻的同辈元素</li>
<li><code>siblings()</code>方法<br>该方法用于取得匹配元素前后所有的同辈元素</li>
<li><p><code>closest()</code>方法<br>该方法用于取得最近的匹配元素.首先检查当前元素是否匹配,如果匹配则直接返回元素本身.如果不匹配则向上查找父元素,逐级向上直到找到匹配选择器的元素.如果什么都没找到则返回一个空jQuery对象.<br>比如,给点击的目标元素的最近的<code>li</code>元素添加颜色.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$(document).bind("click",function(e)&#123;</span><br><span class="line">    $(e.target).closest("li").css("color","red");</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>parent(),parents()与closest()的区别<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/ppc_img.png" alt="ppc_img" title="ppc_img"></p>
</li>
</ul>
</li>
<li><p>CSS-DOM操作</p>
<ul>
<li>获取样式 <code>$(&quot;p&quot;).css(&quot;color&quot;);</code></li>
<li>设置样式 <code>$(&quot;p&quot;).css(&quot;color&quot;,&quot;red&quot;);</code>或者<code>$(&quot;p&quot;).css(&quot;color&quot;:&quot;red&quot;,&quot;fontSize&quot;:&quot;30px&quot;);</code></li>
<li>获取元素的高度 <code>$(&quot;p&quot;).height();</code></li>
<li>设置元素的高度 <code>$(&quot;p&quot;).height(100);</code></li>
<li><code>width()</code>可以获取或者设置元素宽度</li>
<li><p><code>offset()</code> 它的作用是获取元素在当前视窗的相对偏移,其中返回的对象包含两个属性,即top和left,它只对可见元素有效.例如用它来获取<code>&lt;p&gt;</code>元素的偏移量:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var offset = $("p").offset();</span><br><span class="line">var left = offset.left;</span><br><span class="line">var top = offset.top;</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>position()</code>方法 它的作用是获取元素相对于最近的一个position样式属性设置为relative或者absolute的祖父节点的相对偏移,与offset()一样,它返回的对象也包括两个属性,即top和left。</p>
</li>
<li><code>scrollTop()</code>方法和<code>scrollLeft()</code>方法这两个方法的作用分别是获取元素的滚动条距顶端的距离和距左侧的距离.如果函数中指定一个参数,则控制元素的滚动条滚动到指定位置.<code>$(&quot;textarea&quot;).scrollTop(300);</code></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_中的DOM操作">jQuery 中的DOM操作</h3><h4 id="DOM操作分类">DOM操作分类</h4><ul>
<li>DOM Core<br>使用DOM Core来获取表单对象的方法:<code>document.getElementsByTagName(&quot;form&quot;);</code><br>使用DOM Core来获取某元素的src属性的方法:<code>element.getAttribute(&quot;src&quot;);</code></li>
<li>HTML-DOM<br>使用HTML-DOM来获取表单对象的方法:<code>document.forms;</code><br>使用HTML-DOM来获取某元素的src属性的方法:<code>element.src;</code></li>
<li>CSS-DOM<br>CSS-DOM 是针对CSS的操作,例如设置某元素style对象字体颜色的方法:<code>element.style.color = &quot;red&quot;;</code>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记二]]></title>
    <link href="http://yoursite.com/2015/08/27/jquery_note_2/"/>
    <id>http://yoursite.com/2015/08/27/jquery_note_2/</id>
    <published>2015-08-27T06:02:21.000Z</published>
    <updated>2015-08-27T09:57:40.000Z</updated>
    <content type="html"><![CDATA[<h3 id="常用的CSS选择器">常用的CSS选择器</h3><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/css_select_img.png" alt="css_select_img" title="css_select_img"><br><a id="more"></a></p>
<h3 id="jQuery选择器">jQuery选择器</h3><ul>
<li>jQuery 选择器完全继承了CSS的风格.</li>
<li>判断某元素存在与否的写法,例如:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">if( $("#tt").length &gt;0 )&#123; //而不是if($("#tt"))&#123;...&#125;,但可以是 if($("#tt")[0])</span><br><span class="line">    //do something</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="基本选择器">基本选择器</h4><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/basic_select_img.png" alt="basic_select_img" title="basic_select_img"></p>
<h4 id="层次选择器">层次选择器</h4><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/layer_select_img.png" alt="layer_select_img" title="layer_select_img"></p>
<blockquote>
<p>在层次选择器中,第1个和第2个选择器比较常用后面两个分别可以使用next()方法来代替<code>$(&quot;prev + next&quot;)</code>选择器,可以使用nextAll()方法来代替<code>$(&quot;prev ~ siblings&quot;)</code>选择器.</p>
</blockquote>
<p>为此我们将后面要讲解的siblings()方法拿出来与<code>$(&quot;prev~siblings&quot;)</code>选择器进行比较。<code>$(&quot;prev~siblings&quot;)</code>选择器只能选择”prev”元素后面同辈<code>&lt;div&gt;</code>元素.而<code>siblings()</code>方法与前后位置无关,只需要是同辈节点就都能匹配.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//选取#prev之后的所有同辈div元素</span><br><span class="line">$("#prev ~ div").css("background","#bbffaa");</span><br><span class="line">//同上</span><br><span class="line">$("#prev").nextAll("div").css("background","#bbffaa");</span><br><span class="line">//选取#prev所有的同辈div元素,无论前后位置</span><br><span class="line">$("#prev").siblings("div").css("background","#bbffaa");</span><br></pre></td></tr></table></figure></p>
<h4 id="过滤性选择器">过滤性选择器</h4><ul>
<li>过滤选择器主要是通过特定的过滤规则来筛选出所需的DOM元素,过滤规则与CSS中的伪类选择器语法相同,即选择器都以一个冒号<code>:</code>开头.按照不同的过滤规则,过滤选择器可以分为基本过滤、内容过滤、可见性过滤、属性过滤、子元素过滤和表单对象属性过滤选择器.<ul>
<li>基本过滤选择器<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/basic_filter_select_img.png" alt="basic_filter_select_img" title="basic_filter_select_img"></li>
<li>内容过滤选择器<br>内容过滤选择器的过滤规则主要体现在它所包含的子元素或文本内容上.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/content_filter_img.png" alt="content_filter_img" title="content_filter_img"></li>
<li>可见性过滤选择器<br>可见性过滤选择器是根据元素的可见和不可见状态来选择相应的元素.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/visible_filter_img.png" alt="visible_filter_img" title="visible_filter_img"><blockquote>
<p>在可见性选择器中,需要注意选择器:hidden,它不仅包括样式属性display为 “none”的元素,也包括文本隐藏域(<code>&lt;input type=&quot;hidden&quot; /&gt;</code>) 和 <code>visibility:hidden</code>之类的元素.</p>
</blockquote>
</li>
<li>属性过滤选择器<br>属性过滤选择器的过滤规则是通过元素的属性来获取相应的元素.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/attr_filter_img.png" alt="attr_filter_img" title="attr_filter_img"></li>
<li>子元素过滤选择器<br>子元素过滤选择器的过滤规则相对于其它的选择器稍微有些复杂,不过没关系,只要将元素的父元素和子元素区分清楚,那么使用起来也非常简单.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/child_filter_select_img.png" alt="child_filter_select_img" title="child_filter_select_img"></li>
<li>表单对象属性过滤选择器<br>此选择器主要是针对所选择的表单元素进行过滤,例如选择被选中的下拉框,多选框等元素.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/form_filter_select_img.png" alt="form_filter_select_img" title="form_filter_select_img"></li>
</ul>
</li>
</ul>
<h4 id="表单选择器">表单选择器</h4><ul>
<li>利用这个选择器,能及其方便地获取到表单的某个或某类型的元素.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/form_select_img.png" alt="form_select_img" title="form_select_img"></li>
</ul>
<h4 id="选择器中的一些注意事项">选择器中的一些注意事项</h4><ul>
<li><p>选择器中含有特殊符号的注意事项:</p>
<ul>
<li><p>选择器中含有<code>.</code>、<code>#</code>、<code>(</code>或<code>]</code>等特殊字符。例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"id#b"</span>&gt;</span>bb<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"id[1]"</span>&gt;</span>cc<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">$("#id\\#b");</span><br><span class="line">$("#id\\[1\\]");</span><br></pre></td></tr></table></figure>
</li>
<li><p>选择器中含有空格的注意事项.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>aa<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>bb<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>cc<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>dd<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>ee<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span> <span class="attribute">style</span>=<span class="value">"display:none;"</span>&gt;</span>ff<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">var $t_a = $(".test :hidden"); //带空格的 选取class 为"test"的元素里面的隐藏元素</span><br><span class="line">var $t_b = $(".test:hidden"); //不带空格的 选取隐藏的class 为"test"的元素</span><br><span class="line">var len_a = $t_a.length; //输出4</span><br><span class="line">var len_b = $t_b.length; //输出3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="常用的CSS选择器">常用的CSS选择器</h3><p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/css_select_img.png" alt="css_select_img" title="css_select_img"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[《锋利的jQuery》--读书笔记一]]></title>
    <link href="http://yoursite.com/2015/08/27/jquery_note_1/"/>
    <id>http://yoursite.com/2015/08/27/jquery_note_1/</id>
    <published>2015-08-27T01:57:47.000Z</published>
    <updated>2015-08-27T09:57:53.000Z</updated>
    <content type="html"><![CDATA[<h3 id="认识jQuery">认识jQuery</h3><ul>
<li>jQuery 的优势:<ul>
<li>轻量级  采用<a href="https://github.com/mishoo/UglifyJS" target="_blank" rel="external">UglifyJS</a>压缩</li>
<li>强大的选择器</li>
<li>出色的DOM操作的封装</li>
<li>可靠的事件处理机制</li>
<li>完善的Ajax</li>
<li>不污染顶级变量 jQuery只建立一个名为jQuery的对象,其所有的函数都在这个对象之下.其别名<code>$</code>也可以随时交出控制权,绝对不会污染其它的对象.该特性使jQuery可以与其它JavaScript库共存,在项目中放心的引用而不需要考虑到后期可能的冲突.</li>
<li>出色的浏览器兼容性</li>
<li>链式操作方式</li>
<li>隐式迭代</li>
<li>行为层与结构层的分离</li>
<li>丰富的插件支持</li>
<li>完善的文档</li>
<li>开源</li>
</ul>
</li>
<li>jquery.js和jquery.mini.js区别. 前者为完整无压缩开发版,主要用于测试、学习和开发,而后者是经过工具压缩或经过服务器开启Gzip压缩主要应用于产品和项目.<a id="more"></a>
</li>
</ul>
<h3 id="jQuery对象和DOM对象的互相转换">jQuery对象和DOM对象的互相转换</h3><ul>
<li>在jQuery库中,<code>$</code>就是jQuery的一个简写形式,例如:<code>$(&quot;#foo&quot;)</code>和<code>jQuery(&quot;#foo&quot;)</code>是等价的,<code>$.ajax</code>和<code>jQuery.ajax</code>是等价的.程序中的$符号都是jQuery的一个简写形式.</li>
<li><code>window.onload</code>与<code>$(document).ready();</code>区别<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/jq_ready_img.png" alt="jq_ready_img" title="jq_ready_img"></li>
<li><code>$(&quot;#foo&quot;).html</code> 等同于 <code>document.getElementById(&quot;foo&quot;).innerHTML;</code></li>
<li>jQuery对象和DOM对象的互相转换<ul>
<li>如果获得的对象是jQuery对象,那么在变量前面加上<code>$</code>例如:<code>var $variable = jQuery对象;</code></li>
<li>如果获取的是DOM对象,则定义如下:<code>var variable = DOM对象;</code></li>
<li>jQuery提供了两种方法将一个jQuery对象转换成DOM对象,即[index]和get(index)<blockquote>
<p>jQuery对象是一个类似数组的对象,可以通过[index]的方法得到相应的DOM对象.例如: var $cr = $(“#cr”);  var cr = $cr[0];(或者通过var cr = $cr.get(0);) alert(cr.checked);</p>
</blockquote>
</li>
<li>DOM对象转为jQuery对象.只需要用<code>$()</code>把DOM对象包装起来,就可以获得一个jQuery对象了.方式为$(DOM对象)。例如:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var cr = document.getElementById("cr"); //DOM对象</span><br><span class="line">var $cr = $(cr); //jQuery对象</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="解决_jQuery和其他库的冲突">解决 jQuery和其他库的冲突</h3><ul>
<li><p>jQuery 库在其他库之后导入</p>
<ul>
<li>第一种方式:<code>jQuery.noConflict();</code> 将变量<code>$</code>的控制权移交给其他js库.然后使用jQuery的时候<code>jQuery(function(){});</code></li>
<li>第二种方式: 自定义快捷方式<code>var $jq = jQuery.noConflict(); $jq(function(){})</code></li>
<li><p>第三种方式:如果不想给jQuery自定义这些设备名称,还想使用<code>$</code>而不管其它库的<code>$()</code>方法,同时又不想与其他库相冲突,那么可以使用以下两种解决方法:<br>其一:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">jQuery.noConflict(); //将变量$的控制权让渡给其他库</span><br><span class="line">jQuery(function($)&#123; //使用jQuery设定页面加载时执行的函数</span><br><span class="line">    $("p").click(function()&#123; //在函数内部继续使用$()</span><br><span class="line">        alert($(this).text());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<p>其二:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">jQuery.noConflict(); //将变量$的控制权让渡给其他库</span><br><span class="line">(function($)&#123; //定义匿名函数并设置行参为$</span><br><span class="line">    $(function()&#123; //在函数内部$均为jQuery</span><br><span class="line">        $("p").click(function()&#123; //继续使用$()方法</span><br><span class="line">                alert($(this).text());</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)(jQuery); //执行匿名函数且传递实参 jQuery</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>jQuery 库在其他库之前导入</p>
<ul>
<li>可以直接使用”jQuery”来做一些jQuery的工作.同时,可以使用<code>$()</code>方法作为其他库的快捷方式.这里无需调用jQuery.noConflict()函数.<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/conflictImg.png" alt="conflictImg" title="conflictImg"></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="认识jQuery">认识jQuery</h3><ul>
<li>jQuery 的优势:<ul>
<li>轻量级  采用<a href="https://github.com/mishoo/UglifyJS">UglifyJS</a>压缩</li>
<li>强大的选择器</li>
<li>出色的DOM操作的封装</li>
<li>可靠的事件处理机制</li>
<li>完善的Ajax</li>
<li>不污染顶级变量 jQuery只建立一个名为jQuery的对象,其所有的函数都在这个对象之下.其别名<code>$</code>也可以随时交出控制权,绝对不会污染其它的对象.该特性使jQuery可以与其它JavaScript库共存,在项目中放心的引用而不需要考虑到后期可能的冲突.</li>
<li>出色的浏览器兼容性</li>
<li>链式操作方式</li>
<li>隐式迭代</li>
<li>行为层与结构层的分离</li>
<li>丰富的插件支持</li>
<li>完善的文档</li>
<li>开源</li>
</ul>
</li>
<li>jquery.js和jquery.mini.js区别. 前者为完整无压缩开发版,主要用于测试、学习和开发,而后者是经过工具压缩或经过服务器开启Gzip压缩主要应用于产品和项目.]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery 工具类函数]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2015/08/26/jQuery工具类函数/</id>
    <published>2015-08-26T01:18:42.000Z</published>
    <updated>2015-08-26T03:05:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_工具类函数">jQuery 工具类函数</h3><ul>
<li>获取浏览器的名称与版本信息.在jQuery中，通过<code>$.browser</code>对象可以获取浏览器的名称和版本信息,如<code>$.browser.chrome</code>为true,表示当前为Chrome浏览器,<code>$.browser.mozilla</code>为true,表示当前为火狐浏览器,还可以通过<code>$.browser.version</code>方式获取浏览器版本信息.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>获取浏览器名称和版本号<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"您的浏览器名称是："</span>;</span><br><span class="line">                <span class="keyword">if</span> ($.browser.chrome) &#123; <span class="comment">//谷歌浏览器</span></span><br><span class="line">                    strTmp += <span class="string">"Chrome"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ($.browser.mozilla) &#123; <span class="comment">//火狐相关浏览器</span></span><br><span class="line">                    strTmp += <span class="string">"Mozilla FireFox"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                strTmp += <span class="string">"&lt;br /&gt;&lt;br /&gt; 版本号是："</span> <span class="comment">//获取版本号</span></span><br><span class="line">                       +$.browser.version;</span><br><span class="line">                $(<span class="string">".content"</span>).html(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4cf7f0001d48b03770322.jpg" alt="browserImg" title="browserImg"><br><a id="more"></a></p>
<ul>
<li>检测浏览器是否属于W3C盒子模型. 浏览器的盒子模型分为两类,一类为标准的w3c盒子模型,另一类为IE盒子模型,两者区别为在Width和Height这两个属性值中是否包含padding和border的值,w3c盒子模型不包含,IE盒子模型则包含,而在jQuery 中,可以通过<code>$.support.boxModel</code>对象返回的值,检测浏览器是否属于标准的w3c盒子模型.<br><img src="http://img.mukewang.com/52e4d0e30001a31d03850323.jpg" alt="boxModelImg" title="boxModelImg"></li>
<li><p>检测对象是否为空 在jQuery中,可以调用名为<code>$.isEmptyObject</code>的工具函数,检测一个对象的内容是否为空,如果为空,则该函数返回true,否则,返回false值,调用格式如下:<code>$.isEmptyObject(obj);</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>检测对象是否为空<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> obj = &#123; <span class="string">"姓名"</span>: <span class="string">"土豪一族"</span> &#125;;</span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"您定义了一个："</span>;</span><br><span class="line">                <span class="keyword">if</span> ($.isEmptyObject(obj)) &#123; <span class="comment">//检测是否为空</span></span><br><span class="line">                    strTmp += <span class="string">"空对象"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    strTmp += <span class="string">"非空对象"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">".content"</span>).html(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>检测对象是否为原始对象.调用名为<code>$.isPlainObject</code>的工具函数,能检测对象是否为通过<code>{}</code>或<code>new Object()</code>关键字创建的原始对象,如果是,返回true,否则,返回false值,调用格式为:<code>$.isPlainObject (obj);</code> 其中,参数obj表示需要检测的对象名称.<br><img src="http://img.mukewang.com/52e4d3be0001f46806190354.jpg" alt="plainImg" title="plainImg"></p>
</li>
<li>检测两个节点的包含关系 调用名为<code>$.contains</code>的工具函数,能检测在一个DOM节点中是否包含另外一个DOM节点,如果包含,返回true,否则,返回false值,调用格式为:<code>$.contains (container, contained);</code> 参数container表示一个DOM对象节点元素,用于包含其他节点的容器,contained是另一个DOM对象节点元素,用于被其他容器所包含.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>检测两个节点的包含关系<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> node_a = <span class="built_in">document</span>.body.firstChild;</span><br><span class="line">                <span class="keyword">var</span> node_b = <span class="built_in">document</span>.body;</span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"对象node_a"</span>;</span><br><span class="line">                <span class="keyword">if</span> (node_a.contains(node_b)) &#123; <span class="comment">//检测是否包含节点</span></span><br><span class="line">                    strTmp += <span class="string">" 包含 "</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    strTmp += <span class="string">" 不包含 "</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                strTmp += <span class="string">"对象node_b"</span>;</span><br><span class="line">                $(<span class="string">".content"</span>).html(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4d5fb000122c104540369.jpg" alt="containsImg" title="containsImg"></p>
<ul>
<li>字符串操作函数 调用名为<code>$.trim</code>的工具函数,能删除字符串中左右两边的空格符,但该函数不能删除字符串中间的空格,调用格式为:<code>$.trim(str);</code><br><img src="http://img.mukewang.com/52e4d72d0001a3c005630480.jpg" alt="trimImg" title="trimImg"></li>
<li>URL操作函数 调用名为<code>$.param</code>的工具函数,能使对象或数组按照key/value格式进行序列化编码,该编码后的值常用于向服务端发送URL请求,调用格式为:<code>$.param(obj);</code> 参数obj表示需要进行序列化的对象,该对象也可以是一个数组,整个函数返回一个经过序列化编码后的字符串.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>URL操作函数<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//基本信息对象</span></span><br><span class="line">                <span class="keyword">var</span> objInfo = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">                objInfo.name = <span class="string">"白富美"</span>;</span><br><span class="line">                objInfo.sex = <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//序列化对象</span></span><br><span class="line">                <span class="keyword">var</span> objNewInfo =$.param(objInfo);</span><br><span class="line">                <span class="comment">//显示序列化后的对象</span></span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"&lt;b&gt;对象 白富美 序列化后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;"</span>;</span><br><span class="line">                strTmp += objNewInfo;</span><br><span class="line">                <span class="comment">//显示在页面中</span></span><br><span class="line">                $(<span class="string">".tip"</span>).show().append(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4d8a6000185af04750370.jpg" alt="paramImg" title="paramImg"></p>
<ul>
<li>使用<code>$.extend()</code>扩展工具函数.以对原有的工具函数进行扩展,自定义类级别的jQuery插件,调用格式为:<code>$.extend({options});</code> 参数options表示自定义插件的函数内容.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>自定义工具函数求两值中最小值<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">name</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"计算"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            <span class="comment">/*------------------------------------------------------------/</span><br><span class="line">            功能：返回两个数中最小值</span><br><span class="line">            参数：数字p1,p2</span><br><span class="line">            返回：最小值的一个数</span><br><span class="line">            示例：$.MinNum(1,2);</span><br><span class="line">            /------------------------------------------------------------*/</span></span><br><span class="line">            (<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">                $.extend(&#123;</span><br><span class="line">                    <span class="string">"MinNum"</span>: <span class="function"><span class="keyword">function</span> (<span class="params">p1, p2</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> (p1 &gt; p2) ? p2 : p1;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)(jQuery);</span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">".tip"</span>).html(<span class="string">""</span>);</span><br><span class="line">                    <span class="keyword">var</span> strTmp = <span class="string">"17与18中最小的数是："</span>;</span><br><span class="line">                    strTmp +=$.MinNum(<span class="number">17</span>, <span class="number">18</span>);</span><br><span class="line">                    <span class="comment">//显示在页面中</span></span><br><span class="line">                    $(<span class="string">".tip"</span>).show().append(strTmp);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4d9d30001eb7305670594.jpg" alt="extendImg" title="extendImg"></p>
<ul>
<li>使用<code>$.extend()</code>扩展Object对象<br>除使用<code>$.extend</code>扩展工具函数外,还可以扩展原有的Object对象,在扩展对象时,两个对象将进行合并,当存在相同属性名时,后者将覆盖前者,调用格式为:<code>$.extend(obj1,obj2,…objN);</code> 参数obj1至objN表示需要合并的各个原有对象.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>合并原有对象<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> objInfo = &#123; name: <span class="string">""</span> &#125;;</span><br><span class="line">                <span class="keyword">var</span> objMess = &#123; name: <span class="string">"白富美,"</span>, title: <span class="string">"欢迎与我联系！"</span> &#125;;</span><br><span class="line">                <span class="keyword">var</span> objNewInfo =$.extend(objInfo,objMess);</span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"&lt;b&gt;对象 白富美 合并后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;"</span>;</span><br><span class="line">                strTmp += objNewInfo.name + objInfo.title;</span><br><span class="line">                <span class="comment">//显示在页面中</span></span><br><span class="line">                $(<span class="string">".tip"</span>).show().append(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4dbff0001c35405140338.jpg" alt="extendImg2" title="extendImg2"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_工具类函数">jQuery 工具类函数</h3><ul>
<li>获取浏览器的名称与版本信息.在jQuery中，通过<code>$.browser</code>对象可以获取浏览器的名称和版本信息,如<code>$.browser.chrome</code>为true,表示当前为Chrome浏览器,<code>$.browser.mozilla</code>为true,表示当前为火狐浏览器,还可以通过<code>$.browser.version</code>方式获取浏览器版本信息.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>获取浏览器名称和版本号<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> strTmp = <span class="string">"您的浏览器名称是："</span>;</span><br><span class="line">                <span class="keyword">if</span> ($.browser.chrome) &#123; <span class="comment">//谷歌浏览器</span></span><br><span class="line">                    strTmp += <span class="string">"Chrome"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> ($.browser.mozilla) &#123; <span class="comment">//火狐相关浏览器</span></span><br><span class="line">                    strTmp += <span class="string">"Mozilla FireFox"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                strTmp += <span class="string">"&lt;br /&gt;&lt;br /&gt; 版本号是："</span> <span class="comment">//获取版本号</span></span><br><span class="line">                       +$.browser.version;</span><br><span class="line">                $(<span class="string">".content"</span>).html(strTmp);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4cf7f0001d48b03770322.jpg" alt="browserImg" title="browserImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery UI型插件]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery_UI%E5%9E%8B%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2015/08/26/jQuery_UI型插件/</id>
    <published>2015-08-26T01:18:06.000Z</published>
    <updated>2015-08-26T03:05:54.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_UI型插件">jQuery UI型插件</h3><ul>
<li>拖曳插件——draggable 拖曳插件draggable的功能是拖动被绑定的元素,当这个jQuery UI插件与元素绑定后,可以通过调用<code>draggable()</code>方法,实现各种拖曳元素的效果,调用格式如下:<br><code>$(selector). draggable({options})</code><br>options参数为方法调用时的配置对象,根据该对象可以设置各种拖曳效果,如”containment”属性指定拖曳区域,”axis”属性设置拖曳时的坐标方向<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"x"</span> <span class="attribute">class</span>=<span class="value">"drag"</span>&gt;</span>沿x轴拖拽<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"y"</span> <span class="attribute">class</span>=<span class="value">"drag"</span>&gt;</span>沿y轴拖拽<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#x"</span>).draggable(&#123;containment:<span class="string">"parent"</span>,axis:<span class="string">"x"</span>&#125;);</span><br><span class="line">                $(<span class="string">"#y"</span>).draggable(&#123;containment:<span class="string">"parent"</span>,axis:<span class="string">"y"</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4b50c0001545304260177.jpg" alt="draggableImg" title="draggableImg"><br><a id="more"></a></p>
<ul>
<li>放置插件——droppable 除使用draggable插件拖曳任意元素外,还可以调用droppable UI插件将拖曳后的任意元素放置在指定区域中,类似购物车效果,调用格式如下:<code>$(selector).droppable({options})</code> selector参数为接收拖曳元素,options为方法的配置对象,在对象中,drop函数表示当被接收的拖曳元素完全进入接收元素的容器时,触发该函数的调用.<br><img src="http://img.mukewang.com/52e4b7e000012af004800447.jpg" alt="droppableImg" title="droppableImg"></li>
<li>拖曳排序插件——sortable 拖曳排序插件的功能是将序列元素（例如<code>&lt;option&gt;</code>、<code>&lt;li&gt;</code>）按任意位置进行拖曳从而形成一个新的元素序列,实现拖曳排序的功能,它的调用格式为:<code>$(selector).sortable({options});</code> selector参数为进行拖曳排序的元素,options为调用方法时的配置对象.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我最喜欢的运动<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span>1)足球<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span>2)散步<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span>3)篮球<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span>4)乒乓球<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span>5)骑自行车<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"ul"</span>).sortable(&#123;</span><br><span class="line">                    delay: <span class="number">2</span>,</span><br><span class="line">                    opacity: <span class="number">0.35</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4bb9b0001075303890385.jpg" alt="sortableImg" title="sortableImg"></p>
<ul>
<li>面板折叠插件——accordion 面板折叠插件可以实现页面中指定区域类似”手风琴”的折叠效果,即点击标题时展开内容,再点另一标题时,关闭已展开的内容,调用格式如下:<code>$(selector).accordion({options});</code> 其中,参数selector为整个面板元素,options参数为方法对应的配置对象<br><img src="http://img.mukewang.com/52e4bd2c0001e58b03680467.jpg" alt="accordionImg" title="accordionImg"></li>
<li>选项卡插件——tabs 使用选项卡插件可以将<code>&lt;ul&gt;</code>中的<code>&lt;li&gt;</code>选项定义为选项标题,在标题中,再使用<code>&lt;a&gt;</code>元素的”href”属性设置选项标题对应的内容,它的调用格式如下:<code>$(selector).tabs({options});</code> selector参数为选项卡整体外围元素,该元素包含选项卡标题与内容,options参数为tabs()方法的配置对象,通过该对象还能以ajax方式加载选项卡的内容。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tabs"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#tabs-1"</span>&gt;</span>最爱吃的水果<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#tabs-2"</span>&gt;</span>最喜欢的运动<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tabs-1"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tabs-2"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>足球<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>散步<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>篮球<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>乒乓球<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>骑自行车<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               $(<span class="string">"#tabs"</span>).tabs(&#123;</span><br><span class="line">                    <span class="comment">//设置各选项卡在切换时的动画效果</span></span><br><span class="line">                    fx: &#123; opacity: <span class="string">"toggle"</span>, height: <span class="string">"toggle"</span> &#125;,</span><br><span class="line">                    event: <span class="string">"click"</span> <span class="comment">//通过移动鼠标事件切换选项卡</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4bea70001795c04470526.jpg" alt="tabsImg" title="tabsImg"></p>
<ul>
<li>对话框插件——dialog 对话框插件可以用动画的效果弹出多种类型的对话框,实现JavaScript代码中<code>alert()</code>和<code>confirm()</code>函数的功能,它的调用格式为:<code>$(selector).dialog({options});</code><br>selector参数为显示弹出对话框的元素,通常为<code>&lt;div&gt;</code>,options参数为方法的配置对象,在对象中可以设置对话框类型、”确定”、”取消”按钮执行的代码等.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"spnName"</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>张三<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnDelete"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"删除"</span>  <span class="attribute">class</span>=<span class="value">"fr"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">'dialog-modal'</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnDelete"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//询问按钮事件</span></span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">"#spnName"</span>).html() != <span class="literal">null</span>) &#123; <span class="comment">//如果对象不为空</span></span><br><span class="line">                        sys_Confirm(<span class="string">"您真的要删除该条记录吗？"</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">sys_Confirm</span>(<span class="params">content</span>) </span>&#123; <span class="comment">//弹出询问信息窗口</span></span><br><span class="line">                $(<span class="string">"#dialog-modal"</span>).dialog(&#123;</span><br><span class="line">                    height: <span class="number">140</span>,</span><br><span class="line">                    modal: <span class="literal">true</span>,</span><br><span class="line">                    title: <span class="string">'系统提示'</span>,</span><br><span class="line">                    hide: <span class="string">'slide'</span>,</span><br><span class="line">                    buttons: &#123;</span><br><span class="line">                        <span class="string">'确定'</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">"#spnName"</span>).remove();</span><br><span class="line">                            $(<span class="keyword">this</span>).dialog(<span class="string">"close"</span>);</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">'取消'</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            $(<span class="keyword">this</span>).dialog(<span class="string">"close"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    open: <span class="function"><span class="keyword">function</span> (<span class="params">event, ui</span>) </span>&#123;</span><br><span class="line">                        $(<span class="keyword">this</span>).html(<span class="string">""</span>);</span><br><span class="line">                        $(<span class="keyword">this</span>).append(<span class="string">"&lt;p&gt;"</span> + content + <span class="string">"&lt;/p&gt;"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4c1370001b0e805150562.jpg" alt="dialogImg" title="dialogImg"></p>
<ul>
<li>菜单工具插件——menu 菜单工具插件可以通过<code>&lt;ul&gt;</code>创建多级内联或弹出式菜单,支持通过键盘方向键控制菜单滑动,允许为菜单的各个选项添加图标,调用格式如下:<code>$(selector).menu({options});</code> selector参数为菜单列表中最外层<code>&lt;ul&gt;</code>元素,options为menu()方法的配置对象.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"menu"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>小明一中<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>高中部<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>高一(1)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>高一(2)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>高一(3)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>小胡<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>小李<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>小陈<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>初中部<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>初一(1)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>初一(2)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>初一(3)班<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>教研部<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"ui-state-disabled"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>大明二中<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#menu"</span>).menu();</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4c2c10001b1a705160466.jpg" alt="menuImg" title="menuImg"></p>
<ul>
<li>微调按钮插件——spinner 微调按钮插件不仅能在文本框中直接输入数值,还可以通过点击输入框右侧的上下按钮修改输入框的值,还支持键盘的上下方向键改变输入值,调用格式如下:<code>$(selector).spinner({options});</code>  selector参数为文本输入框元素,可选项options参数为spinner()方法的配置对象,在该对象中,可以设置输入的最大、最小值,获取改变值和设置对应事件.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                选择颜色值<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"spnColor"</span> <span class="attribute">class</span>=<span class="value">"input fl"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"spnPrev"</span> <span class="attribute">class</span>=<span class="value">"prev fr"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//定义变量</span></span><br><span class="line">                <span class="keyword">var</span> intR = <span class="number">0</span>, intG = <span class="number">0</span>, intB = <span class="number">0</span>, strColor;</span><br><span class="line">                $(<span class="string">"input"</span>).spinner(&#123;</span><br><span class="line">                    <span class="comment">//初始化插件</span></span><br><span class="line">                    max: <span class="number">10</span>,</span><br><span class="line">                    min: <span class="number">0</span>,</span><br><span class="line">                    <span class="comment">//设置微调按钮递增/递减事件</span></span><br><span class="line">                    spin: <span class="function"><span class="keyword">function</span> (<span class="params">event, ui</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (ui.value == <span class="number">8</span>)</span><br><span class="line">                            spnPrev.style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            spnPrev.style.backgroundColor = <span class="string">"green"</span>;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">//设置微调按钮值改变事件</span></span><br><span class="line">                    change: <span class="function"><span class="keyword">function</span> (<span class="params">event, ui</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> intTmp = $(<span class="keyword">this</span>).spinner(<span class="string">"value"</span>);</span><br><span class="line">                        <span class="keyword">if</span> (intTmp &lt; <span class="number">0</span>) $(<span class="keyword">this</span>).spinner(<span class="string">"value"</span>, <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">if</span> (intTmp &gt; <span class="number">10</span>) $(<span class="keyword">this</span>).spinner(<span class="string">"value"</span>, <span class="number">10</span>);</span><br><span class="line">                        <span class="keyword">if</span> (intTmp == <span class="number">8</span>)</span><br><span class="line">                            spnPrev.style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            spnPrev.style.backgroundColor = <span class="string">"green"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4c4ad0001d4e007610813.jpg" alt="spinnerImg" title="spinnerImg"></p>
<ul>
<li>工具提示插件——tooltip 工具提示插件可以定制元素的提示外观,提示内容支持变量、Ajax远程获取,还可以自定义提示内容显示的位置,它的调用格式如下:<code>$(selector).tooltip({options});</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                工具提示插件<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"name"</span>&gt;</span></span><br><span class="line">                        姓名<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"name"</span> <span class="attribute">name</span>=<span class="value">"name"</span> <span class="attribute">title</span>=<span class="value">"我是土豪，欢迎与我做朋友"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"input"</span>).tooltip(&#123;</span><br><span class="line">                    show: &#123;</span><br><span class="line">                        effect: <span class="string">"slideDown"</span>,</span><br><span class="line">                        delay: <span class="number">350</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    hide: &#123;</span><br><span class="line">                        effect: <span class="string">"explode"</span>,</span><br><span class="line">                        delay: <span class="number">350</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    position: &#123;</span><br><span class="line">                        my: <span class="string">"left top"</span>,</span><br><span class="line">                        at: <span class="string">"left bottom"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4c6360001f38506900450.jpg" alt="tooltipImg" title="tooltipImg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_UI型插件">jQuery UI型插件</h3><ul>
<li>拖曳插件——draggable 拖曳插件draggable的功能是拖动被绑定的元素,当这个jQuery UI插件与元素绑定后,可以通过调用<code>draggable()</code>方法,实现各种拖曳元素的效果,调用格式如下:<br><code>$(selector). draggable({options})</code><br>options参数为方法调用时的配置对象,根据该对象可以设置各种拖曳效果,如”containment”属性指定拖曳区域,”axis”属性设置拖曳时的坐标方向<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"x"</span> <span class="attribute">class</span>=<span class="value">"drag"</span>&gt;</span>沿x轴拖拽<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"y"</span> <span class="attribute">class</span>=<span class="value">"drag"</span>&gt;</span>沿y轴拖拽<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#x"</span>).draggable(&#123;containment:<span class="string">"parent"</span>,axis:<span class="string">"x"</span>&#125;);</span><br><span class="line">                $(<span class="string">"#y"</span>).draggable(&#123;containment:<span class="string">"parent"</span>,axis:<span class="string">"y"</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4b50c0001545304260177.jpg" alt="draggableImg" title="draggableImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery 常用插件]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2015/08/26/jQuery常用插件/</id>
    <published>2015-08-26T01:17:34.000Z</published>
    <updated>2015-08-26T03:05:45.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_常用插件">jQuery 常用插件</h3><ul>
<li>表单验证插件——<code>validate</code>该插件自带包含必填、数字、URL在内容的验证规则,即时显示异常信息,此外,还允许自定义验证规则,插件调用方法如下:<code>$(form).validate({options})</code>其中form参数表示表单元素名称,options参数表示调用方法时的配置对象,所有的验证规则和异常信息显示的位置都在该对象中进行设置.<br><img src="http://img.mukewang.com/52e474e70001b2cc04780576.jpg" alt="validateImg" title="validateImg"></li>
<li>表单插件——form通过表单form插件,调用<code>ajaxForm()</code>方法，实现ajax方式向服务器提交表单数据,并通过方法中的options对象获取服务器返回数据,调用格式如下:<code>$(form). ajaxForm ({options})</code>其中form参数表示表单元素名称;options是一个配置对象,用于在发送ajax请求过程,设置发送时的数据和参数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmV"</span> <span class="attribute">method</span>=<span class="value">"post"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>个人信息页<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnSubmit"</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"user"</span> <span class="attribute">name</span>=<span class="value">"user"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>昵称：<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"nick"</span> <span class="attribute">name</span>=<span class="value">"nick"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> options = &#123;</span><br><span class="line">                    url: <span class="string">"http://www.imooc.com/data/form_f.php"</span>, </span><br><span class="line">                    target: <span class="string">".tip"</span></span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">"#frmV"</span>).ajaxForm(options)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4861d000143ad04720449.jpg" alt="formImg" title="formImg"><br><a id="more"></a></p>
<ul>
<li>图片灯箱插件——lightBox.该插件可以用圆角的方式展示选择中的图片,使用按钮查看上下张图片,在加载图片时自带进度条,还能以自动播放的方式浏览图片,调用格式如下:<code>$(linkimage).lightBox({options})</code>其中linkimage参数为包含图片的<code>&lt;a&gt;</code>元素名称,options为插件方法的配置对象。<br><img src="http://img.mukewang.com/52e488760001d36c05070495.jpg" alt="lightBoxImg" title="lightBoxImg"></li>
<li>图片放大镜插件——jqzoom.在调用jqzoom图片放大镜插件时,需要准备一大一小两张一样的图片,在页面中显示小图片,当鼠标在小图片中移动时,调用该插件的jqzoom()方法,显示与小图片相同的大图片区域,从而实现放大镜的效果,调用格式如下:<code>$(linkimage).jqzoom({options})</code>其中linkimage参数为包含图片的<code>&lt;a&gt;</code>元素名称,options为插件方法的配置对象.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>图片放大镜<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://img.mukewang.com/52e4aec90001924d06800599.jpg"</span> <span class="attribute">id</span>=<span class="value">"jqzoom"</span> <span class="attribute">title</span>=<span class="value">"小兔子乖乖"</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"http://img.mukewang.com/52e4aee700012df702130212.jpg"</span> <span class="attribute">alt</span>=<span class="value">""</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#jqzoom"</span>).jqzoom(&#123; <span class="comment">//绑定图片放大插件jqzoom</span></span><br><span class="line">                    zoomWidth: <span class="number">123</span>, <span class="comment">//小图片所选区域的宽</span></span><br><span class="line">                    zoomHeight: <span class="number">123</span>, <span class="comment">//小图片所选区域的高</span></span><br><span class="line">                    zoomType: <span class="string">'reverse'</span> <span class="comment">//设置放大镜的类型</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e49c2500014a9b04630338.jpg" alt="jqzoomImg" title="jqzoomImg"></p>
<ul>
<li>cookie插件——cookie.使用cookie插件后,可以很方便地通过cookie对象保存、读取、删除用户的信息,还能通过cookie插件保存用户的浏览记录,它的调用格式为:<br>保存:<code>$.cookie(key, value);</code>读取:<code>$.cookie(key)</code>,删除:<code>$.cookie(key, null)</code><br><img src="http://img.mukewang.com/52e49d8100016e2c06280481.jpg" alt="cookieImg" title="cookieImg"></li>
<li>搜索插件——autocomplete 搜索插件的功能是通过插件的<code>autocomplete()</code>方法与文本框相绑定,当文本框输入字符时,绑定后的插件将返回与字符相近的字符串提示选择,调用格式如下:<code>$(textbox).autocomplete(urlData,[options]);</code>其中,textbox参数为文本框元素名称,urlData为插件返回的相近字符串数据,可选项参数options为调用插件方法时的配置对象.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>搜索插件<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"txtSearch"</span> <span class="attribute">name</span>=<span class="value">"txtSearch"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> arrUserName = [<span class="string">"王五"</span>, <span class="string">"刘明"</span>, <span class="string">"李小四"</span>, <span class="string">"刘促明"</span>, <span class="string">"李渊"</span>, <span class="string">"张小三"</span>, <span class="string">"王小明"</span>];</span><br><span class="line">                $(<span class="string">"#txtSearch"</span>).autocomplete(arrUserName,&#123;</span><br><span class="line">                    minChars: <span class="number">0</span>, <span class="comment">//双击空白文本框时显示全部提示数据</span></span><br><span class="line">                    formatItem: <span class="function"><span class="keyword">function</span> (<span class="params">data, i, total</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">"&lt;I&gt;"</span> + data[<span class="number">0</span>] + <span class="string">"&lt;/I&gt;"</span>; <span class="comment">//改变匹配数据显示的格式</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    formatMatch: <span class="function"><span class="keyword">function</span> (<span class="params">data, i, total</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> data[<span class="number">0</span>];</span><br><span class="line">                    &#125;,</span><br><span class="line">                    formatResult: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> data[<span class="number">0</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).result(SearchCallback); </span><br><span class="line">                <span class="function"><span class="keyword">function</span> <span class="title">SearchCallback</span>(<span class="params">event, data, formatted</span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">".tip"</span>).show().html(<span class="string">"您的选择是："</span> + (!data ? <span class="string">"空"</span> : formatted));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e49eb90001024606410464.jpg" alt="autocompleteImg" title="autocompleteImg"></p>
<ul>
<li>右键菜单插件——contextmenu 右键菜单插件可以绑定页面中的任意元素,绑定后,选中元素,点击右键,便通过该插件弹出一个快捷菜单,点击菜单各项名称执行相应操作,调用代码如下:<code>$(selector).contextMenu(menuId,{options});</code> Selector参数为绑定插件的元素,meunId为快捷菜单元素,options为配置对象。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>点击右键<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnSubmit"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"提交"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"contextMenu"</span> <span class="attribute">id</span>=<span class="value">"sysMenu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">id</span>=<span class="value">"Li3"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"http://img.mukewang.com/52e4b34b0001bb6d00160016.jpg"</span> <span class="attribute">alt</span>=<span class="value">""</span> /&gt;</span>保存<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">id</span>=<span class="value">"Li4"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"http://img.mukewang.com/52e4b3680001424900160016.jpg"</span> <span class="attribute">alt</span>=<span class="value">""</span> /&gt;</span>退出<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnSubmit"</span>).contextMenu(<span class="string">"sysMenu"</span>,</span><br><span class="line">                  &#123; bindings:</span><br><span class="line">                     &#123;</span><br><span class="line">                         <span class="string">'Li3'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">Item</span>) </span>&#123;</span><br><span class="line">                             $(<span class="string">".tip"</span>).show().html(<span class="string">"您点击了“保存”项"</span>);</span><br><span class="line">                         &#125;,</span><br><span class="line">                         <span class="string">'Li4'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">Item</span>) </span>&#123;</span><br><span class="line">                             $(<span class="string">".tip"</span>).show().html(<span class="string">"您点击了“退出”项"</span>);</span><br><span class="line">                         &#125;</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e49fde0001919605370483.jpg" alt="contextMenuImg" title="contextMenuImg"></p>
<ul>
<li>自定义对象级插件——lifocuscolor插件 自定义的lifocuscolor插件可以在<code>&lt;ul&gt;</code>元素中,鼠标在表项<code>&lt;li&gt;</code>元素移动时,自定义其获取焦点时的背景色,即定义<code>&lt;li&gt;</code>元素选中时的背景色,调用格式为:<code>$(Id).focusColor(color)</code> 其中,参数Id表示<code>&lt;ul&gt;</code>元素的Id号,color表示<code>&lt;li&gt;</code>元素选中时的背景色.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>对象级别的插件<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"u1"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>芹菜<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>蔬菜<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#u1"</span>).focusColor(<span class="string">"#ccc"</span>) <span class="comment">//调用自定义的插件</span></span><br><span class="line">            &#125;)</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4a100000199ac04200306.jpg" alt="focusColorImg" title="focusColorImg"></p>
<ul>
<li>自定义类级别插件—— twoaddresult 通过调用自定义插件twoaddresult中的不同方法,可以实现对两个数值进行相加和相减的运算,导入插件后,调用格式分别为:<code>$.addNum(p1,p2)</code> 和 <code>$.subNum(p1,p2)</code><br><img src="http://img.mukewang.com/52e4a2230001185304660432.jpg" alt="addImg" title="addImg"></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_常用插件">jQuery 常用插件</h3><ul>
<li>表单验证插件——<code>validate</code>该插件自带包含必填、数字、URL在内容的验证规则,即时显示异常信息,此外,还允许自定义验证规则,插件调用方法如下:<code>$(form).validate({options})</code>其中form参数表示表单元素名称,options参数表示调用方法时的配置对象,所有的验证规则和异常信息显示的位置都在该对象中进行设置.<br><img src="http://img.mukewang.com/52e474e70001b2cc04780576.jpg" alt="validateImg" title="validateImg"></li>
<li>表单插件——form通过表单form插件,调用<code>ajaxForm()</code>方法，实现ajax方式向服务器提交表单数据,并通过方法中的options对象获取服务器返回数据,调用格式如下:<code>$(form). ajaxForm ({options})</code>其中form参数表示表单元素名称;options是一个配置对象,用于在发送ajax请求过程,设置发送时的数据和参数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmV"</span> <span class="attribute">method</span>=<span class="value">"post"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>个人信息页<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnSubmit"</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"user"</span> <span class="attribute">name</span>=<span class="value">"user"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>昵称：<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"nick"</span> <span class="attribute">name</span>=<span class="value">"nick"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> options = &#123;</span><br><span class="line">                    url: <span class="string">"http://www.imooc.com/data/form_f.php"</span>, </span><br><span class="line">                    target: <span class="string">".tip"</span></span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">"#frmV"</span>).ajaxForm(options)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52e4861d000143ad04720449.jpg" alt="formImg" title="formImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery 实现Ajax应用]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery%E5%AE%9E%E7%8E%B0Ajax%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2015/08/26/jQuery实现Ajax应用/</id>
    <published>2015-08-26T01:16:44.000Z</published>
    <updated>2015-08-26T03:05:11.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_实现Ajax应用">jQuery 实现Ajax应用</h3><ul>
<li>使用<code>load()</code>方法异步请求数据.使用<code>load()</code>方法通过Ajax请求加载服务器中的数据,并把返回的数据放置到指定的元素中,它的调用格式为:<code>load(url,[data],[callback])</code><br>参数url为加载服务器地址,可选项data参数为请求时发送的数据,callback参数为数据请求成功后,执行的回调函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我最爱吃的水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $(<span class="string">"ul"</span>)</span><br><span class="line">                    .html(<span class="string">"&lt;img src='Images/Loading.gif' alt=''/&gt;"</span>)</span><br><span class="line">                    .load(<span class="string">"http://www.imooc.com/data/fruit_part.html"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dccb920001d2d505970337.jpg" alt="loadImg" title="loadImg"><br><a id="more"></a></p>
<ul>
<li>使用<code>getJSON()</code>方法异步加载JSON格式数据.使用<code>getJSON()</code>方法可以通过Ajax异步请求的方式,获取服务器中的数组,并对获取的数据进行解析,显示在页面中,它的调用格式为:<code>jQuery.getJSON(url,[data],[callback])</code>或<code>$.getJSON(url,[data],[callback])</code><br>其中,url参数为请求加载json格式文件的服务器地址,可选项data参数为请求时发送的数据,callback参数为数据请求成功后,执行的回调函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我最喜欢的一项运动<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $.getJson(<span class="string">"http://www.imooc.com/data/sport.json"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                        $.each(data, <span class="function"><span class="keyword">function</span> (<span class="params">index, sport</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(index==<span class="number">3</span>)</span><br><span class="line">                            $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;"</span> + sport[<span class="string">"name"</span>] + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                        &#125;);</span><br><span class="line">    </span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcced70001f67806010370.jpg" alt="getJsonImg" title="getJsonImg"></p>
<ul>
<li>使用<code>getScript()</code>方法异步加载并执行js文件.使用<code>getScript()</code>方法异步请求并执行服务器中的JavaScript格式的文件,它的调用格式如下所示:<code>jQuery.getScript(url,[callback])</code>或<code>$.getScript(url,[callback])</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我最喜欢的运动<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $.getScript(<span class="string">"http://www.imooc.com/data/sport_f.js"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcd44e000145de06380392.jpg" alt="getScriptImg" title="getScriptImg"></p>
<ul>
<li>使用<code>get()</code>方法以GET方式从服务器获取数据,并通过方法中回调函数的参数返回请求的数据,它的调用格式如下:<code>$.get(url,[callback])</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我的个人资料<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $.get(<span class="string">"http://www.imooc.com/data/info_f.php"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                        $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                        $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;我的名字叫："</span> + data.name + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                        $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;男朋友对我说："</span> + data.say + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                    &#125;, <span class="string">"json"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcd5b1000161ce05970338.jpg" alt="getImg" title="getImg"></p>
<ul>
<li>使用<code>post()</code>方法以POST方式从服务器发送数据.调用格式如下:<code>$.post(url,[data],[callback])</code> 参数url为服务器请求地址,可选项data为向服务器请求时发送的数据,可选项callback参数为请求成功后执行的回调函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>检测数字是否大于0<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnCheck"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"检测"</span> /&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">li</span>&gt;</span>请求输入一个数字 <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"txtNumber"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">size</span>=<span class="value">"12"</span> /&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnCheck"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $.post(<span class="string">"http://www.imooc.com/data/check_f.php"</span>,&#123;num:$(<span class="string">"#txtNumber"</span>).val()&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;你输入的&lt;b&gt;  "</span></span><br><span class="line">                        + $(<span class="string">"#txtNumber"</span>).val() + <span class="string">" &lt;/b&gt;是&lt;b&gt; "</span></span><br><span class="line">                        + data + <span class="string">" &lt;/b&gt;&lt;/li&gt;"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcd7430001e25004690464.jpg" alt="postImg" title="postImg"></p>
<ul>
<li>使用<code>serialize()</code>方法序列化表单元素值.使用<code>serialize()</code>方法可以将表单中有name属性的元素值进行序列化,生成标准URL编码文本字符串,直接可用于ajax请求,它的调用格式如下:<code>$(selector).serialize()</code>其中selector参数是一个或多个表单中的元素或表单元素本身<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我的个人资料<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnAction"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"序列化"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>姓名：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"Text1"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">size</span>=<span class="value">"12"</span> /&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">select</span> <span class="attribute">name</span>=<span class="value">"Select1"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"0"</span>&gt;</span>男<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"1"</span>&gt;</span>女<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">name</span>=<span class="value">"Checkbox1"</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> /&gt;</span>资料是否可见 <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span> <span class="attribute">id</span>=<span class="value">"litest"</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnAction"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"#litest"</span>).html($(<span class="string">"form"</span>).serialize());</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcd9470001b1e705400481.jpg" alt="serializeImg" title="serializeImg"></p>
<ul>
<li>使用<code>ajax()</code>方法加载服务器数据.使用<code>ajax()</code>方法是最底层、功能最强大的请求服务器数据的方法,它不仅可以获取服务器返回的数据,还能向服务器发送请求并传递数值,它的调用格式如下:<code>jQuery.ajax([settings])</code>或<code>$.ajax([settings])</code><br>其中参数settings为发送ajax请求时的配置对象,在该对象中,url表示服务器请求的路径,data为请求时传递的数据,dataType为服务器返回的数据类型,success为请求成功的执行的回调函数,type为发送数据请求的方式,默认为get.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>检测数字的奇偶性<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnCheck"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"检测"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">li</span>&gt;</span>请求输入一个数字 </span><br><span class="line">                   <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"txtNumber"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">size</span>=<span class="value">"12"</span> /&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnCheck"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        url:<span class="string">"http://www.imooc.com/data/check.php"</span>,</span><br><span class="line">                        data: &#123; num: $(<span class="string">"#txtNumber"</span>).val() &#125;,</span><br><span class="line">                        dataType:<span class="string">"text"</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;你输入的&lt;b&gt;  "</span></span><br><span class="line">                            + $(<span class="string">"#txtNumber"</span>).val() + <span class="string">" &lt;/b&gt;是&lt;b&gt; "</span></span><br><span class="line">                            + data + <span class="string">" &lt;/b&gt;&lt;/li&gt;"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcdb5000014e9804600419.jpg" alt="ajaxImg" title="ajaxImg"></p>
<ul>
<li>使用<code>ajaxSetup()</code>方法设置全局Ajax默认选项.使用<code>ajaxSetup()</code>方法可以设置Ajax请求的一些全局性选项值,设置完成后,后面的Ajax请求将不需要再添加这些选项值,它的调用格式为:<code>jQuery.ajaxSetup([options])或$.ajaxSetup([options])</code><br>可选项options参数为一个对象,通过该对象设置Ajax请求时的全局选项值。<br><img src="http://img.mukewang.com/52dcdce60001de2604780449.jpg" alt="ajaxSetupImg" title="ajaxSetupImg"></li>
<li><code>ajaxStart()</code>和<code>ajaxStop()</code>方法是绑定Ajax事件.<code>ajaxStart()</code>方法用于在Ajax请求发出前触发函数,<code>ajaxStop()</code>方法用于在Ajax请求完成后触发函数.它们的调用格式为:<code>$(selector).ajaxStart(function())</code>和<code>$(selector).ajaxStop(function())</code>其中,两个方法中括号都是绑定的函数,当发送Ajax请求前执行<code>ajaxStart()</code>方法绑定的函数,请求成功后,执行<code>ajaxStop()</code>方法绑定的函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>加载一段文字<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">li</span> <span class="attribute">id</span>=<span class="value">"divload"</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#divload"</span>).ajaxStart(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).html(<span class="string">"正在请求数据..."</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">                $(<span class="string">"#divload"</span>).ajaxStop(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).html(<span class="string">"数据请求完成！"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        url: <span class="string">"http://www.imooc.com/data/info_f.php"</span>,</span><br><span class="line">                        dataType: <span class="string">"json"</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">                            $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                        $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;我的名字叫："</span> + data.name + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                        $(<span class="string">"ul"</span>).append(<span class="string">"&lt;li&gt;男朋友对我说："</span> + data.say + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcfb3a0001746d06020435.jpg" alt="ajaxSSImg" title="ajaxSSImg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_实现Ajax应用">jQuery 实现Ajax应用</h3><ul>
<li>使用<code>load()</code>方法异步请求数据.使用<code>load()</code>方法通过Ajax请求加载服务器中的数据,并把返回的数据放置到指定的元素中,它的调用格式为:<code>load(url,[data],[callback])</code><br>参数url为加载服务器地址,可选项data参数为请求时发送的数据,callback参数为数据请求成功后,执行的回调函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"divtest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我最爱吃的水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnShow"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"加载"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btnShow"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>);</span><br><span class="line">                    $(<span class="string">"ul"</span>)</span><br><span class="line">                    .html(<span class="string">"&lt;img src='Images/Loading.gif' alt=''/&gt;"</span>)</span><br><span class="line">                    .load(<span class="string">"http://www.imooc.com/data/fruit_part.html"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $<span class="keyword">this</span>.attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dccb920001d2d505970337.jpg" alt="loadImg" title="loadImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery 动画特效]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery%E5%8A%A8%E7%94%BB%E4%B8%8E%E7%89%B9%E6%95%88/"/>
    <id>http://yoursite.com/2015/08/26/jQuery动画与特效/</id>
    <published>2015-08-26T01:16:05.000Z</published>
    <updated>2015-08-26T03:05:37.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_动画特效">jQuery 动画特效</h3><ul>
<li>调用<code>show()</code>和<code>hide()</code>方法显示和隐藏元素.<code>$(selector).hide(speed,[callback])</code>和<code>$(selector).show(speed,[callback])</code>参数speed设置隐藏或显示时的速度值,可为”slow”、”fast”或毫秒数值,可选项参数callback为隐藏或显示动作执行完成后调用的函数名.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用show()和hide()方法显示和隐藏元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(function <span class="params">()</span> &#123;</span><br><span class="line">                $<span class="params">(<span class="string">"h4"</span>)</span>.bind<span class="params">(<span class="string">"click"</span>, function <span class="params">()</span> &#123;</span><br><span class="line">                    if <span class="params">($<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">()</span> == <span class="number">0</span>)</span> &#123;</span><br><span class="line">                        $<span class="params">(<span class="string">"ul"</span>)</span>.show<span class="params">()</span>;</span><br><span class="line">                        $<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">(<span class="number">1</span>)</span>;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $<span class="params">(<span class="string">"ul"</span>)</span>.hide<span class="params">()</span>;</span><br><span class="line">                        $<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">(<span class="number">0</span>)</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span>;</span><br><span class="line">            &#125;)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dc9f250001508d03860257.jpg" alt="shImg" title="shImg"><br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>show()和hide()方法动画方式显示和隐藏元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">"#hidval"</span>).val() == <span class="number">0</span>) &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).show(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">1</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).hide(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">0</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>调用<code>toggle()</code>方法实现动画切换效果.如果元素处于显示状态,调用该方法则隐藏该元素,反之,则显示该元素,它的调用格式是:<code>$(selector).toggle(speed,[callback])</code>其中speed参数为动画效果时的速度值,可以为数字,单位为毫秒,也可是”fast”、”slow”字符,可选项参数callback为方法执行成功后回调的函数名称.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>toggle()方法的动画切换效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span> <span class="attribute">id</span>=<span class="value">"spnTip"</span>&gt;</span>显示<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> $spn = $(<span class="string">"#spnTip"</span>);</span><br><span class="line">                $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;       $(<span class="string">"ul"</span>).toggle(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span><br><span class="line">                    $($spn).toggle(<span class="number">1000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        </span><br><span class="line">                     $spn.html() == <span class="string">"隐藏"</span> ? $spn.html(<span class="string">"显示"</span>) : $spn.html(<span class="string">"隐藏"</span>);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dca25300010e0405830241.jpg" alt="animToogleImg" title="animToogleImg"></p>
<ul>
<li>使用<code>slideUp()</code>和<code>slideDown()</code>方法的滑动效果.前者用于向上滑动元素,后者用于向下滑动元素,它们的调用方法分别为:<code>$(selector).slideUp(speed,[callback])</code>和<code>$(selector).slideDown(speed,[callback])</code>其中speed参数为滑动时的速度,单位是毫秒,可选项参数callback为滑动成功后执行的回调函数名.<blockquote>
<p>要注意的是slideDown()仅适用于被隐藏的元素;slideup()则相反.</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用slideUp()和slideDown()方法的滑动效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">"#hidval"</span>).val() == <span class="number">0</span>) &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).slideUp(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">1</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).slideDown(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">0</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcb1b20001c7d403880386.jpg" alt="slideImg" title="slideImg"><br>滑动与淡入淡出的区别:滑动改变元素的高度,淡入淡出改变元素的透明度.</p>
<ul>
<li>使用<code>slideToggle()</code>方法实现图片”变脸”效果.使用<code>slideToggle()</code>方法可以切换<code>slideUp()</code>和<code>slideDown()</code>,即调用该方法时,如果元素已向上滑动,则元素自动向下滑动,反之,则元素自动向上滑动,格式为:<code>$(selector).slideToggle(speed,[callback])</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用slideToggle()方法切换滑动效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fl"</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"fr"</span> <span class="attribute">id</span>=<span class="value">"spnTip"</span>&gt;</span>向下滑<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> $spn = $(<span class="string">"#spnTip"</span>);</span><br><span class="line">                $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"ul"</span>).slideToggle(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">               $spn.html() == <span class="string">"向下滑"</span> ? $spn.html(<span class="string">"向上滑"</span>) : $spn.html(<span class="string">"向下滑"</span>);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcb5930001bd2603830402.jpg" alt="slideToggleImg" title="slideToggleImg"></p>
<ul>
<li>使用<code>fadeIn()</code>与<code>fadeOut()</code>方法实现淡入淡出效果.前者淡入隐藏的元素,后者可以淡出可见的元素,它们的调用格式分别为:<code>$(selector).fadeIn(speed,[callback])</code>和<code>$(selector).fadeOut(speed,[callback])</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用fadeIn()与fadeOut()方法实现元素淡入淡出的效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="string">"#hidval"</span>).val() == <span class="number">0</span>) &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).fadeIn(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">1</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $(<span class="string">"ul"</span>).fadeOut(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">"#hidval"</span>).val(<span class="number">0</span>);</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/549a7819000117a103910414.jpg" alt="fadeImg" title="fadeImg"></p>
<ul>
<li>使用<code>fadeTo()</code>方法设置淡入淡出效果的不透明度.调用<code>fadeTo()</code>方法,可以将所选择元素的不透明度以淡入淡出的效果调整为指定的值,该方法的调用格式为:<code>$(selector).fadeTo(speed,opacity,[callback])</code>其中speed参数为效果的速度,opacity参数为指定的不透明值,它的取值范围是0.0~1.0,可选项参数callback为效果完成后,回调的函数名<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用fadeTo()方法设置淡入淡出效果的不透明度<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"orange"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"blue"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"span"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">switch</span> (index) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                            $(<span class="string">".red"</span>).fadeTo(<span class="number">3000</span>,<span class="number">0.2</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            $(<span class="string">".orange"</span>).fadeTo(<span class="number">3000</span>,<span class="number">0.4</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            $(<span class="string">".blue"</span>).fadeTo(<span class="number">3000</span>,<span class="number">0.6</span>);</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcc1f20001235d03890370.jpg" alt="fadeToImg" title="fadeToImg"></p>
<ul>
<li>调用<code>animate()</code>方法制作简单的动画效果.<code>$(selector).animate({params},speed,[callback])</code>其中,params参数为制作动画效果的CSS属性名与值,speed参数为动画的效果的速度,单位为毫秒,可选项callback参数为动画完成时执行的回调函数名.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>制作简单的动画效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#tip"</span>).animte(&#123;</span><br><span class="line">                    width: <span class="string">"80px"</span>,</span><br><span class="line">                    height: <span class="string">"80px"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"#tip"</span>).html(<span class="string">"执行完成!"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcc3b30001fd5803210256.jpg" alt="animateImg" title="animateImg"></p>
<ul>
<li>调用<code>animate()</code>方法制作移动位置的动画.调用<code>animate()</code>方法不仅可以制作简单渐渐变大的动画效果,而且还能制作移动位置的动画,在移动位置之前,必须将被移元素的”position”属性值设为”absolute”或”relative”,否则,该元素移动不了.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>制作移动位置的动画<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).animte(&#123;</span><br><span class="line">                    left: <span class="string">"+=100px"</span></span><br><span class="line">                &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).animte(&#123;</span><br><span class="line">                        height: <span class="string">'+=30px'</span>,</span><br><span class="line">                        width: <span class="string">'+=30px'</span></span><br><span class="line">                    &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">"#tip"</span>).html(<span class="string">"执行完成!"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcc4eb0001c08e03410291.jpg" alt="animateImg2" title="animateImg2"></p>
<ul>
<li>调用<code>stop()</code>方法停止当前所有动画效果.该方法的功能是在动画完成之前,停止当前正在执行的动画效果,这些效果包括滑动、淡入淡出和自定义的动画,它的调用格式为:<code>$(selector).stop([clearQueue],[goToEnd])</code>其中,两个可选项参数clearQueue和goToEnd都是布尔类型值,前者表示是否停止正在执行的动画,后者表示是否完成正在执行的动画,默认为false.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>调用stop()方法停止当前所有动画效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnStop"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"停止"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"span"</span>).animate(&#123;</span><br><span class="line">                    left: <span class="string">"+=100px"</span></span><br><span class="line">                &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).animate(&#123;</span><br><span class="line">                        height: <span class="string">'+=60px'</span>,</span><br><span class="line">                        width: <span class="string">'+=60px'</span></span><br><span class="line">                    &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">"#tip"</span>).html(<span class="string">"执行完成!"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">                $(<span class="string">"#btnStop"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                   $(<span class="string">"#tip"</span>).stop();</span><br><span class="line">                    $(<span class="string">"#tip"</span>).html(<span class="string">"执行停止!"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcc63f00019e3203870387.jpg" alt="stopImg" title="stopImg"></p>
<ul>
<li>调用<code>delay()</code>方法延时执行动画效果.<code>$(selector).delay(duration)</code>其中参数duration为延时值,它的单位是毫秒,当超过延时值时,动画继续执行.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>调用delay()方法延时执行动画效果<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btnStop"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"延时"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"span"</span>).animate(&#123;</span><br><span class="line">                    left: <span class="string">"+=100px"</span></span><br><span class="line">                &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).animate(&#123;</span><br><span class="line">                        height: <span class="string">'+=60px'</span>,</span><br><span class="line">                        width: <span class="string">'+=60px'</span></span><br><span class="line">                    &#125;, <span class="number">3000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">"#tip"</span>).html(<span class="string">"执行完成!"</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">                $(<span class="string">"#btnStop"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(#tip).delay(<span class="number">2000</span>);</span><br><span class="line">                    $(<span class="string">"#tip"</span>).html(<span class="string">"正在延时!"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dcc785000162dc03840385.jpg" alt="delayImg" title="delayImg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_动画特效">jQuery 动画特效</h3><ul>
<li>调用<code>show()</code>和<code>hide()</code>方法显示和隐藏元素.<code>$(selector).hide(speed,[callback])</code>和<code>$(selector).show(speed,[callback])</code>参数speed设置隐藏或显示时的速度值,可为”slow”、”fast”或毫秒数值,可选项参数callback为隐藏或显示动作执行完成后调用的函数名.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用show()和hide()方法显示和隐藏元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(function <span class="params">()</span> &#123;</span><br><span class="line">                $<span class="params">(<span class="string">"h4"</span>)</span>.bind<span class="params">(<span class="string">"click"</span>, function <span class="params">()</span> &#123;</span><br><span class="line">                    if <span class="params">($<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">()</span> == <span class="number">0</span>)</span> &#123;</span><br><span class="line">                        $<span class="params">(<span class="string">"ul"</span>)</span>.show<span class="params">()</span>;</span><br><span class="line">                        $<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">(<span class="number">1</span>)</span>;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $<span class="params">(<span class="string">"ul"</span>)</span>.hide<span class="params">()</span>;</span><br><span class="line">                        $<span class="params">(<span class="string">"#hidval"</span>)</span>.val<span class="params">(<span class="number">0</span>)</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span>;</span><br><span class="line">            &#125;)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52dc9f250001508d03860257.jpg" alt="shImg" title="shImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery 事件与应用]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery%E4%BA%8B%E4%BB%B6%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2015/08/26/jQuery事件与应用/</id>
    <published>2015-08-26T01:14:51.000Z</published>
    <updated>2015-08-26T03:05:01.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_事件与应用">jQuery 事件与应用</h3><ul>
<li>页面加载时触发<code>ready()</code>事件.<code>ready()</code>事件类似于<code>onLoad()</code>事件,但前者只要页面的DOM结构加载后便触发,而后者必须在页面全部元素加载成功才触发,<code>ready()</code>可以写多个,按顺序执行.此外,下列写法是相等的:<code>$(document).ready(function(){})</code>等价于<code>$(function(){});</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>页面载入时触发ready()事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点下我"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"document"</span>)</span>.ready<span class="params">(&#123;</span><br><span class="line">                $<span class="params">(<span class="string">"#btntest"</span>)</span>.bind<span class="params">(<span class="string">"click"</span>, function <span class="params">()</span> &#123;</span><br><span class="line">                    $<span class="params">(<span class="string">"#tip"</span>)</span>.html<span class="params">(<span class="string">"我被点击了！"</span>)</span>;</span><br><span class="line">                &#125;)</span>;</span><br><span class="line">            &#125;)</span>;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d227fa000171db03160136.jpg" alt="readyImg" title="readyImg"><br><a id="more"></a></p>
<ul>
<li>使用<code>bind()</code>方法绑定元素的事件.需要知道被绑定的元素名,绑定的事件名称,事件中执行的函数内容就可以,它的绑定格式如下:<code>$(selector).bind(event,[data] function)</code>参数event为事件名称,多个事件名称用空格隔开,function为事件执行的函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>bind()方法绑多个事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点击或移出就不可用了"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btntest"</span>).bind(<span class="string">"click mouseout"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d22aeb0001ee2b04480177.jpg" alt="eventImg" title="eventImg"></p>
<ul>
<li>使用<code>hover()</code>方法切换事件.它的功能是当鼠标移到所选元素上时,执行方法中的第一个函数,鼠标移出时,执行方法中的第二个函数,实现事件的切实效果,调用格式如下:<code>$(selector).hover(over，out);</code> over参数为移到所选元素上触发的函数,out参数为移出元素时触发的函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>hover()方法切换事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>别走！你就是土豪<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).hover((</span><br><span class="line">                <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).addClass(<span class="string">"orange"</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).removeClass(<span class="string">"orange"</span>)</span><br><span class="line">                &#125;))</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d22c9900013dbd03190241.jpg" alt="overImg" title="overImg"></p>
<ul>
<li>使用<code>toggle()</code>方法绑定多个函数.<code>toggle()</code>方法可以在元素的click事件中绑定两个或两个以上的函数,同时,它还可以实现元素的隐藏与显示的切换,绑定多个函数的调用格式如下:<code>$(selector).toggle(fun1(),fun2(),funN(),...)</code><br><img src="http://img.mukewang.com/52d22e3a0001c56d02980289.jpg" alt="toggleImg" title="toggleImg"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>toggle()方法绑定多个函数<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点一下我"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>我是动态显示的<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btntest"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"div"</span>).toggle(</span><br><span class="line">                        <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="keyword">this</span>).hidden();    </span><br><span class="line">                        &#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                            $(<span class="keyword">this</span>).show();    </span><br><span class="line">                        &#125;);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意:toggle()方法支持目前主流稳定的jQuery版本1.8.2,在1.9.0之后的版本是不支持的.</p>
<ul>
<li>使用<code>unbind()</code>方法移除元素绑定的事件.<code>$(selector).unbind(event,fun)</code>其中参数event表示需要移除的事件名称,多个事件名用空格隔开,fun参数为事件执行时调用的函数名称.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>unbind()移除绑定的事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"移除事件"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>土豪，咱们交个朋友吧<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).bind(<span class="string">"click"</span>,</span><br><span class="line">                <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).removeClass(<span class="string">"backcolor"</span>).addClass(<span class="string">"color"</span>);</span><br><span class="line">                &#125;).bind(<span class="string">"dblclick"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).removeClass(<span class="string">"color"</span>).addClass(<span class="string">"backcolor"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">                $(<span class="string">"#btntest"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"div"</span>).unbind(<span class="string">"dblclick"</span>);</span><br><span class="line">                    $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<p><img src="http://img.mukewang.com/52d22feb0001c9ee04750306.jpg" alt="unbindImg" title="unbindImg"></p>
<ul>
<li>使用<code>one()</code>方法绑定元素的一次性事件.<code>one()</code>方法可以绑定元素任何有效的事件,但这种方法绑定的事件只会触发一次,它的调用格式如下:<code>$(selector).one(event,[data],fun)</code><br>参数event为事件名称,data为触发事件时携带的数据,fun为触发该事件时执行的函数.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>one()方法执行一次绑定事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>请点击我一下<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> intI = <span class="number">0</span>;</span><br><span class="line">                $(<span class="string">"div"</span>).one(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    intI++;</span><br><span class="line">                    $(<span class="keyword">this</span>).css(<span class="string">"font-size"</span>, intI + <span class="string">"px"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d231bd000192fb04310219.jpg" alt="oneImg" title="oneImg"></p>
<ul>
<li>调用<code>trigger()</code>方法手动触发指定的事件<code>.trigger()</code>方法可以直接手动触发元素指定的事件,这些事件可以是元素自带事件,也可以是自定义的事件,总之,该事件必须能执行,它的调用格式为:<br><code>$(selector).trigger(event)</code>其中event参数为需要手动触发的事件名称.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>trigger()手动触发事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>土豪，咱们交个朋友吧<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).bind(<span class="string">"change-color"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).addClass(<span class="string">"color"</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">                $(<span class="string">"div"</span>).trigger (<span class="string">"change-color"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d233a30001df8204290153.jpg" alt="triggerImg" title="triggerImg"></p>
<ul>
<li>文本框的<code>focus</code>和<code>blur</code>事件.<code>focus</code>事件在元素获取焦点时触发,如点击文本框时,触发该事件;而<code>blur</code>事件则在元素丢失焦点时触发,如点击除文本框的任何元素,都会触发该事件.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>表单中文本框的focus和blur事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"txtest"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"input"</span>)</span><br><span class="line">                .bind(<span class="string">"focus"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="string">"div"</span>).html(<span class="string">"请输入您的姓名！"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">                .bind(<span class="string">"blur"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="keyword">this</span>).val().length == <span class="number">0</span>)</span><br><span class="line">                        $(<span class="string">"div"</span>).html(<span class="string">"你的名称不能为空！"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d235210001b6f203730194.jpg" alt="focusImg" title="focusImg"></p>
<ul>
<li>下拉列表框的<code>change</code>事件.当一个元素的值发生变化时,将会触发<code>change</code>事件,例如在选择下拉列表框中的选项时,就会触<code>change</code>事件.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>下拉列表的change事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"seltest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"荔枝"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"香焦"</span>&gt;</span>香焦<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#seltest"</span>).bind(<span class="string">"change"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> ($(<span class="keyword">this</span>).val() == <span class="string">"苹果"</span>)</span><br><span class="line">                        $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>, <span class="string">"red"</span>);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d236cc00019b6d04420272.jpg" alt="changeImg" title="changeImg"></p>
<ul>
<li>调用<code>live()</code>方法绑定元素的事件.与<code>bind()</code>方法相同,<code>live()</code>方法与可以绑定元素的可执行事件,除此相同功能之外,<code>live()</code>方法还可以绑定动态元素,即使用代码添加的元素事件,格式如下:<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>live()方法绑多个事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#btntest"</span>).live(<span class="string">"click mouseout"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">                &#125;)</span><br><span class="line">                $(<span class="string">"body"</span>).append(<span class="string">"&lt;input id='btntest' type='button' value='点击或移出就不可用了' /&gt;"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d2389e0001f46e06470188.jpg" alt="liveImg" title="liveImg"></p>
<blockquote>
<p>注意:从 jQuery 1.7 开始,不再建议使用 .live() 方法.1.9不支持.live()</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_事件与应用">jQuery 事件与应用</h3><ul>
<li>页面加载时触发<code>ready()</code>事件.<code>ready()</code>事件类似于<code>onLoad()</code>事件,但前者只要页面的DOM结构加载后便触发,而后者必须在页面全部元素加载成功才触发,<code>ready()</code>可以写多个,按顺序执行.此外,下列写法是相等的:<code>$(document).ready(function(){})</code>等价于<code>$(function(){});</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>页面载入时触发ready()事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点下我"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"document"</span>)</span>.ready<span class="params">(&#123;</span><br><span class="line">                $<span class="params">(<span class="string">"#btntest"</span>)</span>.bind<span class="params">(<span class="string">"click"</span>, function <span class="params">()</span> &#123;</span><br><span class="line">                    $<span class="params">(<span class="string">"#tip"</span>)</span>.html<span class="params">(<span class="string">"我被点击了！"</span>)</span>;</span><br><span class="line">                &#125;)</span>;</span><br><span class="line">            &#125;)</span>;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52d227fa000171db03160136.jpg" alt="readyImg" title="readyImg"><br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery DOM操作]]></title>
    <link href="http://yoursite.com/2015/08/26/jQuery_DOM%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2015/08/26/jQuery_DOM操作/</id>
    <published>2015-08-26T01:12:56.000Z</published>
    <updated>2015-08-26T03:06:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery_DOM操作">jQuery DOM操作</h3><ul>
<li>使用<code>attr()</code>方法控制元素的属性. <code>attr()</code>方法的作用是设置或者返回元素的属性,其中<code>attr(属性名)</code>格式是获取元素属性名的值,<code>attr(属性名,属性值)</code>格式则是设置元素属性名的值.<br><img src="http://img.mukewang.com/52bb8ca300011b7203780146.jpg" alt="attrImg" title="attrImg"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>操作元素属性<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>attr()方法设置元素属性<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://127.0.0.1"</span> <span class="attribute">id</span>=<span class="value">"a1"</span>&gt;</span>点我就变<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>我改变后的地址是：<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"#a1"</span>)</span>.attr<span class="params">(<span class="string">"href"</span> , <span class="string">"www.imooc.com"</span>)</span>;</span><br><span class="line">            var $url = $<span class="params">(<span class="string">"#a1"</span>)</span>.attr<span class="params">(<span class="string">"href"</span>)</span>;</span><br><span class="line">            $<span class="params">(<span class="string">"#tip"</span>)</span>.html<span class="params">($url)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line">style.css</span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line">    margin: 10px 0px;</span><br><span class="line">&#125;</span><br><span class="line">span</span><br><span class="line">&#123;</span><br><span class="line">    color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li>操作元素的内容. 使用<code>html()</code>和<code>text()</code>方法操作元素的内容,当两个方法的参数为空时,表示获取该元素的内容,而如果方法中包含参数,则表示将参数值设置为元素内容.<code>html()</code>方法可以获取元素的HTML内容.而<code>text()</code>方法只是获取元素中的文本内容,并不包含HTML格式代码.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var $content = "<span class="tag">&lt;<span class="title">b</span>&gt;</span>唉，我又变胖了！<span class="tag">&lt;/<span class="title">b</span>&gt;</span>";</span><br><span class="line">$("#html").html($content);</span><br><span class="line">$("#text").text($content);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bb90400001a1eb03640193.jpg" alt="htmlImg" title="htmlImg"></p>
<ul>
<li>操作元素的样式. 通过<code>addClass()</code>和<code>css()</code>方法可以方便地操作元素中的样式,前者括号中的参数为增加元素的样式名称,后者直接将样式的属性内容写在括号中。增加多个样式名称时,要用空格隔开。<code>$(&quot;#content&quot;).css({&quot;background-color&quot;:&quot;red&quot;,&quot;color&quot;:&quot;white&quot;});</code><br><img src="http://img.mukewang.com/52bb94080001c89c03270369.jpg" alt="classImg" title="classImg"></li>
<li>移除属性和样式 使用<code>removeAttr(name)</code>和<code>removeClass(class)</code>分别可以实现移除元素的属性和样式的功能,前者方法中参数表示移除属性名,后者方法中参数则表示移除的样式名.<br><code>$(&quot;#content&quot;).removeClass(&quot;blue&quot;,&quot;white&quot;);</code><br><img src="http://img.mukewang.com/52bb960c0001f4c603770161.jpg" alt="removeImg" title="removeImg"></li>
<li>使用<code>append()</code>方法向元素内追加内容 方法的功能是向指定的元素中追加内容,被追加的content参数,可以是字符、HTML元素标记,还可以是一个返回字符串内容的函数。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>append()方法追加内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="php"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">rethtml</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> <span class="variable">$html</span> = <span class="string">"&lt;div id='test' title='hi'&gt;我是调用函数创建的&lt;/div&gt;"</span></span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$html</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $(<span class="string">"body"</span>).append(rethtml());</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bb980d0001c85804680122.jpg" alt="appendImg" title="appendImg"></p>
<ul>
<li>使用<code>appendTo()</code>方法向被选元素内插入内容 <code>appendTo()</code>方法也可以向指定的元素内插入内容,它的使用格式是:<code>$(content).appendTo(selector)</code> 参数content表示需要插入的内容,参数selector表示被选的元素,即把content内容插入selector元素内,默认是在尾部。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>appendTo()方法插入内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>小乌龟<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="elixir"></span><br><span class="line">            var <span class="variable">$html</span> = <span class="string">"&lt;span class='red'&gt;小青蛙&lt;/span&gt;"</span></span><br><span class="line">            <span class="variable">$(</span><span class="variable">$html</span>).appendTo(<span class="string">"div"</span>);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bcd7850001d30303360171.jpg" alt="appendToImg" title="appendToImg"></p>
<ul>
<li>使用<code>before()</code>和<code>after()</code>在元素前后插入内容 它们分别表示在整个元素的前面和后面插入指定的元素或内容,调用格式分别为:<br><code>$(selector).before(content)</code>和<code>$(selector).after(content)</code>其中参数content表示插入的内容,该内容可以是元素或HTML字符串.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>after()方法在元素之后插入内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>我们交个朋友吧！<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="elixir"></span><br><span class="line">            var <span class="variable">$html</span> = <span class="string">"&lt;span class='red'&gt;兄弟。&lt;/span&gt;"</span></span><br><span class="line">            <span class="variable">$(</span><span class="string">".green"</span>).after(<span class="variable">$html</span>);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bcd9cd0001645203820142.jpg" alt="baImage" title="baImage"></p>
<ul>
<li>使用<code>clone()</code>方法复制元素 调用<code>clone()</code>方法可以生成一个被选元素的副本,即复制了一个被选元素，包含它的节点、文本和属性,它的调用格式为:<code>$(selector).clone()</code><br>其中参数selector可以是一个元素或HTML内容.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用clone()方法复制元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">title</span>=<span class="value">"hi"</span>&gt;</span>我是美猴王<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"body"</span>)</span>.append<span class="params">($<span class="params">(<span class="string">".red"</span>)</span>.clone<span class="params">()</span>)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bb9da80001fede03660123.jpg" alt="cloneImg" title="cloneImg"></p>
<ul>
<li>替换内容 <code>replaceWith()</code>和<code>replaceAll()</code>方法都可以用于替换元素或元素中的内容,但它们调用时,内容和被替换元素所在的位置不同,分别为如下所示:<br><code>$(selector).replaceWith(content)</code>和<code>$(content).replaceAll(selector)</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用replaceAll()方法替换元素内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span> <span class="attribute">title</span>=<span class="value">"hi"</span>&gt;</span>我是屌丝<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="elixir"></span><br><span class="line">            var <span class="variable">$html</span> = <span class="string">"&lt;span class='red' title='hi'&gt;我是土豪&lt;/span&gt;"</span>;</span><br><span class="line">            <span class="variable">$(</span><span class="variable">$html</span>).replaceAll(<span class="variable">$(</span><span class="string">".green"</span>));</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bcdc2c0001b69c04750130.jpg" alt="replaceImg" title="replaceImg"></p>
<ul>
<li>使用<code>wrap()</code>和<code>wrapInner()</code>方法包裹元素和内容.但前者用于包裹元素本身,后者则用于包裹元素中的内容,它们的调用格式分别为:<br><code>$(selector).wrap(wrapper)</code>和<code>$(selector).wrapInner(wrapper)</code><br>参数selector为被包裹的元素,wrapper参数为包裹元素的格式。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用wrapInner()方法包裹元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">title</span>=<span class="value">'hi'</span>&gt;</span>我的身体有点歪<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">".red"</span>)</span>.wrapInner<span class="params">(<span class="string">"&lt;i&gt;&lt;/i&gt;"</span>)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bcdea700016dbf03980120.jpg" alt="wrapImg" title="wrapImg"></p>
<ul>
<li>使用<code>each()</code>方法可以遍历指定的元素集合,在遍历时,通过回调函数返回遍历元素的序列号,它的调用格式为:<code>$(selector).each(function(index))</code>参数function为遍历时的回调函数,index为遍历元素的序列号,它从0开始.<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用each()方法遍历元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>桃子<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="string">"span"</span>).?(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</span><br><span class="line">                    $(<span class="string">"span"</span>).attr(<span class="string">"class"</span>, <span class="string">"red"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bba3720001175203180227.jpg" alt="eachImg" title="eachImg"></p>
<ul>
<li>使用<code>remove()</code>和<code>empty()</code>方法删除元素.remove()方法删除所选元素本身和子元素,该方法可以通过添加过滤参数指定需要删除的某些元素,而empty()方法则只删除所选元素的子元素。<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用empty()方法删除元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>桃子<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"span"</span>)</span>.empty<span class="params">(<span class="string">".green"</span>)</span>?</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://img.mukewang.com/52bceff500018e0702910171.jpg" alt="removeImg" title="removeImg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery_DOM操作">jQuery DOM操作</h3><ul>
<li>使用<code>attr()</code>方法控制元素的属性. <code>attr()</code>方法的作用是设置或者返回元素的属性,其中<code>attr(属性名)</code>格式是获取元素属性名的值,<code>attr(属性名,属性值)</code>格式则是设置元素属性名的值.<br><img src="http://img.mukewang.com/52bb8ca300011b7203780146.jpg" alt="attrImg" title="attrImg"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>操作元素属性<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>attr()方法设置元素属性<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://127.0.0.1"</span> <span class="attribute">id</span>=<span class="value">"a1"</span>&gt;</span>点我就变<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>我改变后的地址是：<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="openscad"></span><br><span class="line">            $<span class="params">(<span class="string">"#a1"</span>)</span>.attr<span class="params">(<span class="string">"href"</span> , <span class="string">"www.imooc.com"</span>)</span>;</span><br><span class="line">            var $url = $<span class="params">(<span class="string">"#a1"</span>)</span>.attr<span class="params">(<span class="string">"href"</span>)</span>;</span><br><span class="line">            $<span class="params">(<span class="string">"#tip"</span>)</span>.html<span class="params">($url)</span>;</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line">style.css</span><br><span class="line">div</span><br><span class="line">&#123;</span><br><span class="line">    margin: 10px 0px;</span><br><span class="line">&#125;</span><br><span class="line">span</span><br><span class="line">&#123;</span><br><span class="line">    color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery环境搭建与三种选择器]]></title>
    <link href="http://yoursite.com/2015/08/23/jquery%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2015/08/23/jquery环境搭建/</id>
    <published>2015-08-23T03:52:26.000Z</published>
    <updated>2015-08-26T03:05:20.000Z</updated>
    <content type="html"><![CDATA[<h3 id="jQuery环境搭建">jQuery环境搭建</h3><ul>
<li>第一种方式在<a href="http://jquery.com" target="_blank" rel="external">jQuery</a>的官方网站中,下载最新版本的jQuery文件库.在网站中找到最新版本文件的下载按钮,将jQuery框架文件下载到本地即可,引入jQuery文件库<br>下载完jQuery框架文件后,并不需要任何的安装,仅需要使用<code>&lt;script&gt;</code>文件导入标记,将jQuery框架文件导入页面中即可.那么,在页面的<code>&lt;head&gt;&lt;/head&gt;</code>中加入如下代码:<br><code>&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code><br>在页面的头部分，加入上述代码后，便完成了jQuery框架开发环境的搭建，就可以开始我们的jQuery学习了.</li>
<li>第二种方式在页面的<code>&lt;head&gt;&lt;/head&gt;</code>中加入如下代码:<code>&lt;script src=&quot;//code.jquery.com/jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code><a id="more"></a>
</li>
</ul>
<h3 id="jQuery_基础选择器">jQuery 基础选择器</h3><ul>
<li><code>#id</code>选择器 例如:<code>$(&quot;#id&quot;)</code></li>
<li><code>element</code>选择器 例如:<code>$(&quot;div&quot;)</code></li>
<li><code>.class</code>选择器 例如:<code>$(&quot;.class&quot;)</code></li>
<li><code>*</code>选择器 它的功能是获取页面中的全部元素,实践证明,由于使用<em>选择器获取的是全部元素,因此,有些浏览器将会比较缓慢,这个选择器也需要谨慎使用.$(“</em>“)</li>
<li><code>sele1,sele2,seleN</code>选择器 选择任意多个指定的元素 <code>$(&quot;sele1,sele2,seleN&quot;)</code></li>
<li><code>ance desc</code>选择器 在实际应用开发中,常常是多个元素嵌套在一起,形成复杂的层次关系,通过层次选择器,可以快速定位某一层次的一个或多个元素,ance desc选择器就是其中之一,它的调用格式如下:<code>$(&quot;ance desc&quot;)</code> ance表示父元素,desc参数表示后代元素,即包括子元素、孙元素等等.两个参数都可以通过选择器来获取.</li>
<li><code>parent&gt;child</code>选择器 与上一个选择器相比,<code>parent&gt;child</code>选择器选择器的范围要小些,它所选择的目标是子集元素,相当于一个家庭中的子辈们,但不包括孙辈,它的调用格式如下:<code>$(&quot;parent&gt;child&quot;)</code></li>
<li><code>prev+next</code>选择器 俗话说”远亲不如近邻”,通过<code>prev + next</code>选择器就可以查找与”prev”元素紧邻的下一个”next”元素,格式如下:<code>$(&quot;prev+next&quot;)</code></li>
<li><code>prev~sibling</code>选择器 与上一个<code>prev + next</code>层次选择器相同,<code>prev ~ siblings</code>选择器也是查找prev元素之后的相邻元素,但前者只获取第一个相邻的元素,而后者则获取prev 元素后面全部相邻的元素,它的调用格式如下:<code>$(&quot;prev~sibling&quot;)</code></li>
</ul>
<h3 id="jQuery_过滤性选择器">jQuery 过滤性选择器</h3><ul>
<li><code>:first过滤选择器</code> 该类型的选择器是根据某过滤规则进行元素的匹配,书写时以”:”号开头,通常用于查找集合元素中的某一位置的单个元素. 例如:<code>$(&quot;li:first&quot;)</code>过滤选择器可以很方便地获取<code>ul</code>列表中的第一个<code>li</code>元素. <code>:first</code>过滤选择器的功能是获取第一个元素,常常与其它选择器一起使用,获取指定的一组元素中的第一个元素.</li>
<li><code>:last</code> 与行面相近</li>
<li><code>:eq(index)过滤选择器</code> 如果想从一组标签元素数组中,灵活选择任意的一个标签元素,我们可以使用:<code>:eq(index)</code>其中参数index表示索引号(即:一个整数),它从0开始,如果index的值为3,表示选择的是第4个元素. <code>$(&quot;div:eq(1)&quot;).remove()</code></li>
<li><code>:contains(text)过滤选择器</code>  它的功能是选择包含指定字符串的全部元素,它通常与其他元素结合使用,获取包含”text”字符串内容的全部元素对象.其中参数text表示页面中的文字.</li>
<li><code>:has(selector)过滤选择器</code> 获取选择器中包含指定元素名称的全部元素,其中selector参数就是包含的元素名称,是被包含元素.例如:<code>$(&quot;li:has(&#39;p&#39;)&quot;)</code></li>
<li><code>:hidden过滤选择器</code> 获取全部不可见的元素,这些不可见的元素中包括type属性值为hidden的元素.</li>
<li><code>:visible过滤选择器</code> 获取的是全部可见的元素,也就是说,只要不将元素的display属性值设置为”none”,那么，都可以通过该选择器获取.</li>
<li><code>[attribute=value]属性选择器</code> 获取与属性名和属性值完全相同的全部元素,其中[]是专用于属性选择器的括号符,参数attribute表示属性名称,value参数表示属性值. 例如:<code>$(&quot;li[title=&#39;我最爱&#39;]&quot;)</code> 这里可以省略单引号</li>
<li><code>[attribute!=value]属性选择器</code> 与上面相反</li>
<li><code>[attribute*=value]属性选择器</code> 它可以获取属性值中包含指定内容的全部元素,其中[]是专用于属性选择器的括号符,参数attribute表示属性名称,value参数表示对应的属性值.例如:$(“li[title*=’最’]”)</li>
<li><code>:first-child子元素过滤选择器</code> 通过上面章节的学习,我们知道使用<code>:first</code>过滤选择器可以获取指定父元素中的首个子元素,但该选择器返回的只有一个元素,并不是一个集合,而使用<code>:first-child</code>子元素过滤选择器则可以获取每个父元素中返回的首个子元素,它是一个集合,常用多个集合数据的选择处理.例如:<code>$(&quot;li:first-child&quot;)</code></li>
<li><code>:last-child子元素过滤选择器</code> 与 <code>:first-child子元素过滤选择器</code>相反</li>
</ul>
<h3 id="jQuery_表单选择器">jQuery 表单选择器</h3><ul>
<li><code>:input表单选择器</code> 它的功能是返回全部的表单元素,不仅包括所有<code>&lt;input&gt;</code>标记的表单元素,而且还包括<code>&lt;textarea&gt;</code>、<code>&lt;select&gt;</code> 和 <code>&lt;button&gt;</code>标记的表单元素,因此,它选择的表单元素是最广的.<br><code>$(&quot;#frmTest :input&quot;).addClass(&quot;bg_blue&quot;);</code><br><img src="http://img.mukewang.com/52970dc4000102ab03820242.jpg" alt="inputImg" title="inputImg"></li>
<li><code>:text表单文本选择器</code> 可以获取表单中全部单行的文本输入框元素,单行的文本输入框就像一个不换行的字条工具,使用非常广泛.<code>$(&quot;#frmTest :text&quot;).addClass(&quot;green&quot;);</code><br><img src="http://img.mukewang.com/5297107600011ddf04240201.jpg" alt="textImg" title="textImg"></li>
<li><code>:password表单密码选择器</code> 它的功能是获取表单中全部的密码输入文本框元素 例如:<code>$(&quot;#frmTest :password&quot;).addClass(&quot;bg_red&quot;);</code><br><img src="http://img.mukewang.com/529713cd000159b804810217.jpg" alt="pwdImg" title="pwdImg"></li>
<li><code>:radio单选按钮选择器</code> 获取表单中的全部单选按钮元素 例如:<code>$(&quot;#frmTest :radio&quot;).attr(&quot;disabled&quot;,&quot;true&quot;);</code><br><img src="http://img.mukewang.com/529715580001099503830280.jpg" alt="radioImg" title="radioImg"></li>
<li><code>:checkbox复选框选择器</code> 可以快速定位并获取表单中的复选框元素。例如:<code>$(&quot;#frmTest :checkbox&quot;).attr(&quot;checked&quot;,&quot;true&quot;);</code><br><img src="http://img.mukewang.com/52971ac700017fbf03830322.jpg" alt="cbImg" title="cbImg"></li>
<li><code>:submit提交按钮选择器</code> 通常情况下,一个表单中只允许有一个”type”属性值为”submit”的提交按钮,使用:submit选择器可获取表单中的这个提交按钮元素. 例如:<code>$(&quot;#frmTest input:submit&quot;).attr(&quot;value&quot;,&quot;点我就提交&quot;)</code> 和 <code>$(&quot;#frmTest input:submit&quot;).addClass(&quot;bg_red&quot;);</code><br><img src="http://img.mukewang.com/52b2584e000129a804330199.jpg" alt="submitImg" title="submitImg"></li>
<li><code>:image图像域选择器</code> 当一个<code>&lt;input&gt;</code>元素的”type”属性值设为”image”时,该元素就是一个图像域,使用<code>:image</code>选择器可以快速获取该类全部元素.例如,在表单中添加两种类型的图像元素,使用<code>:image</code>选择器获取其中的一种图像元素,并改变该元素的边框样式:<br><code>$(&quot;#frmTest :image&quot;).addClass(&quot;bg_red&quot;);</code><br><img src="http://img.mukewang.com/52b26da200016f8604270192.jpg" alt="image" title="image"></li>
<li><code>:button表单按钮选择器</code> 表单中包含许多类型的按钮,而使用<code>:button</code>选择器能获取且只能获取”type”属性值为”button”的<code>&lt;input&gt;</code>和<code>&lt;button&gt;</code>这两类普通按钮元素.<br><code>$(&quot;#frmTest :button&quot;).addClass(&quot;bg_blue&quot;);</code><br><img src="http://img.mukewang.com/52b286a50001862e04740207.jpg" alt="buttonImg" title="buttonImg"></li>
<li><code>:checked选中状态选择器</code> 有一些元素存在选中状态,如复选框、单选按钮元素,选中时”checked”属性值为”checked”,调用:checked可以获取处于选中状态的全部元素.<br><code>$(&quot;#frmTest :checked&quot;).attr(&quot;disabled&quot;, true);</code><br><img src="http://img.mukewang.com/52b28b1500017db404530386.jpg" alt="checkedImage" title="checkedImage"></li>
<li><code>:selected选中状态选择器</code> 与:checked选择器相比,<code>:selected</code>选择器只能获取<code>&lt;select&gt;</code>下拉列表框中全部处于选中状态的<code>&lt;option&gt;</code>选项元素.<br><code>var $txtOpt = $(&quot;#frmTest :selected&quot;).text(); $(&quot;#tip&quot;).html(&quot;选中内容为:&quot; + $txtOpt);</code><br><img src="http://img.mukewang.com/52b28d15000198f404430262.jpg" alt="selectedImage" title="selectedImage"></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="jQuery环境搭建">jQuery环境搭建</h3><ul>
<li>第一种方式在<a href="http://jquery.com">jQuery</a>的官方网站中,下载最新版本的jQuery文件库.在网站中找到最新版本文件的下载按钮,将jQuery框架文件下载到本地即可,引入jQuery文件库<br>下载完jQuery框架文件后,并不需要任何的安装,仅需要使用<code>&lt;script&gt;</code>文件导入标记,将jQuery框架文件导入页面中即可.那么,在页面的<code>&lt;head&gt;&lt;/head&gt;</code>中加入如下代码:<br><code>&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot; src=&quot;jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code><br>在页面的头部分，加入上述代码后，便完成了jQuery框架开发环境的搭建，就可以开始我们的jQuery学习了.</li>
<li>第二种方式在页面的<code>&lt;head&gt;&lt;/head&gt;</code>中加入如下代码:<code>&lt;script src=&quot;//code.jquery.com/jquery-1.11.3.min.js&quot;&gt;&lt;/script&gt;</code>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime Text使用]]></title>
    <link href="http://yoursite.com/2015/08/21/sublime_text_use/"/>
    <id>http://yoursite.com/2015/08/21/sublime_text_use/</id>
    <published>2015-08-21T04:57:50.000Z</published>
    <updated>2015-08-26T03:04:45.000Z</updated>
    <content type="html"><![CDATA[<h3 id="工欲善其事必先利其器">工欲善其事必先利其器</h3><ul>
<li><p>今天讲解Mac下如何为Sublime Text安装插件</p>
<ul>
<li>首先下载<a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime Text</a> </li>
<li>通过Package Control来管理插件,那么如何来安装插件呢?<br>我这里参考了<a href="https://packagecontrol.io/installation#st3" target="_blank" rel="external">Package Control</a>网站,打开Sublime Text的console面板:打开的第一种方式 通过快捷键 ctrl+<code>,打开的第二种方式</code>View &gt; Show Console menu`</li>
<li><p>如果您使用的是Sublime Text3则在打开的console面板中输入以下内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class="string">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>
<p>如果您使用的是Sublime Text2则在打开的console面板中输入以下内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2,os,hashlib; h = <span class="string">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class="string">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ipp) <span class="keyword">else</span> <span class="keyword">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> <span class="keyword">None</span>; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure>
<a id="more"></a></li>
<li><p>接下来就可以使用Package Control来安装插件了,这里我先教大家如何安装Markdown插件.</p>
<ul>
<li>不知道什么是Markdown的同学先Google了解下.按住<code>command(windows下为control键)+shift+p</code> 输入并选择<code>Package Control:Install Package</code></li>
<li>然后在搜索框里输入插件名,回车即可,安装完成后不需要重启即可使用.</li>
<li>分别安装 Markdown Editing、SublimeTmpl、Markdown Preview</li>
<li><p>修改Markdown文件的默认保存后缀名.选择<code>Preferences &gt; Setting - more &gt; Syntax Specific - User</code> 会打开 <code>Markdown.sublime-settings</code>,然后将下面内容保存(文件名应该是:Packages/User/Markdown.sublime-settings)</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	"<span class="attribute">extensions</span>": <span class="value">[<span class="string">"md"</span>]</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>Preferences &gt; Package Settings &gt; Markdown Editing &gt; Markdown GFM Settings - User</code> 这里可以修改Makdown Editing的编辑界面和输出格式等等.</p>
</li>
<li><p>进入<code>/Users/weifeng/Library/Application Support/Sublime\ Text\ 3/Packages/User/SublimeTmpl/templates/</code>目录增加一个模版文件<code>markdown.tmpl</code> 内容如下:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">title: $&#123;1:文章标题&#125;</span><br><span class="line">date: $&#123;date&#125;</span><br><span class="line">tags: $2</span><br><span class="line">author: $&#123;author&#125;</span><br><span class="line">email: $&#123;email&#125;</span><br><span class="line">link: $&#123;link&#125;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">$0</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后打开<code>Preferences &gt; Package Settings &gt; SublimeTmpl &gt; Settings - Menu</code> 里面加上如下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        "<span class="attribute">id</span>": <span class="value"><span class="string">"file"</span></span>,</span><br><span class="line">        "<span class="attribute">children</span>":</span><br><span class="line">        <span class="value">[</span><br><span class="line">            &#123;</span><br><span class="line">                "<span class="attribute">caption</span>": <span class="value"><span class="string">"New File (SublimeTmpl)"</span></span>,</span><br><span class="line">                "<span class="attribute">children</span>":</span><br><span class="line">                <span class="value">[</span><br><span class="line">                    &#123;</span><br><span class="line">                        "<span class="attribute">caption</span>": <span class="value"><span class="string">"Markdown"</span></span>,</span><br><span class="line">                        "<span class="attribute">command</span>": <span class="value"><span class="string">"sublime_tmpl"</span></span>,</span><br><span class="line">                        "<span class="attribute">args</span>": <span class="value">&#123;</span><br><span class="line">                            "<span class="attribute">type</span>": <span class="value"><span class="string">"markdown"</span></span><br><span class="line">                        </span>&#125;   </span><br><span class="line">                    </span>&#125;,</span><br><span class="line">                    ......</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>Preferences &gt; Package Settings &gt; SublimeTmpl &gt; Settings - Commands</code> 里面加上如下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">       "<span class="attribute">caption</span>": <span class="value"><span class="string">"Tmpl: Create Markdown"</span></span>, "<span class="attribute">command</span>": <span class="value"><span class="string">"sublime_tmpl"</span></span>,</span><br><span class="line">       "<span class="attribute">args</span>": <span class="value">&#123;"<span class="attribute">type</span>": <span class="value"><span class="string">"markdown"</span></span>&#125;</span><br><span class="line">  	</span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开<code>Preferences &gt; Package Settings &gt; SublimeTmpl &gt; Settings - User</code> 里面加上如下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">markdown</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">syntax</span>": <span class="value"><span class="string">"Packages/MarkdownEditing/Markdown.tmLanguage"</span></span><br><span class="line">    </span>&#125;</span>,</span><br><span class="line">    "<span class="attribute">attr</span>": <span class="value">&#123;</span><br><span class="line">        "<span class="attribute">author</span>": <span class="value"><span class="string">"weifeng"</span> </span>,</span><br><span class="line">        "<span class="attribute">email</span>": <span class="value"><span class="string">"l157676363@qq.com"</span></span>,</span><br><span class="line">        "<span class="attribute">link</span>": <span class="value"><span class="string">"http://www.mobilecode.cn/"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改设置文件<code>Preferences &gt; Package Settings &gt; Markdown Preview &gt; Settings - User</code> 里面加上如下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "<span class="attribute">enabled_parsers</span>": <span class="value">[<span class="string">"markdown"</span>]</span>,</span><br><span class="line">    "<span class="attribute">github_mode</span>": <span class="value"><span class="string">"markdown"</span></span>,</span><br><span class="line">    "<span class="attribute">enabled_parsers</span>": <span class="value">[<span class="string">"github"</span>]</span>,</span><br><span class="line">    "<span class="attribute">build_action</span>": <span class="value"><span class="string">"browser"</span></span>,</span><br><span class="line">    "<span class="attribute">enable_mathjax</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">    "<span class="attribute">enable_highlight</span>": <span class="value"><span class="literal">true</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置新建Markdown文件快捷键以及使用浏览器预览Markdown文件快捷键,打开<code>`Preferences &gt; Key Bindings - User</code> 里面添加如下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">	&#123; "<span class="attribute">keys</span>": <span class="value">[<span class="string">"command+b"</span>]</span>, "<span class="attribute">command</span>": <span class="value"><span class="string">"markdown_preview"</span></span>, "<span class="attribute">args</span>": <span class="value">&#123; "<span class="attribute">target</span>": <span class="value"><span class="string">"browser"</span></span>&#125; </span>&#125;,               </span><br><span class="line">	&#123; "<span class="attribute">keys</span>": <span class="value">[<span class="string">"command+m"</span>]</span>, "<span class="attribute">command</span>":<span class="value"><span class="string">"sublime_tmpl"</span></span>, "<span class="attribute">args</span>": <span class="value">&#123;"<span class="attribute">type</span>": <span class="value"><span class="string">"markdown"</span></span>&#125; </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="安装其它插件">安装其它插件</h3><blockquote>
<p><a href="http://www.jianshu.com/p/5905f927d01b" target="_blank" rel="external">Sublime插件：增强篇</a><br><a href="http://www.jianshu.com/p/3cb5c6f2421c" target="_blank" rel="external">如何优雅地使用Sublime Text3</a><br><a href="https://github.com/SublimeText-Markdown/MarkdownEditing" target="_blank" rel="external">MarkdownEditing</a><br><a href="http://www.techug.com/9-best-sublime-text-themes" target="_blank" rel="external">9个最佳的Sublime Text主题</a><br><a href="http://segmentfault.com/a/1190000000505218" target="_blank" rel="external">12个不可不知的Sublime Text应用技巧和诀窍</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="工欲善其事必先利其器">工欲善其事必先利其器</h3><ul>
<li><p>今天讲解Mac下如何为Sublime Text安装插件</p>
<ul>
<li>首先下载<a href="http://www.sublimetext.com/">Sublime Text</a> </li>
<li>通过Package Control来管理插件,那么如何来安装插件呢?<br>我这里参考了<a href="https://packagecontrol.io/installation#st3">Package Control</a>网站,打开Sublime Text的console面板:打开的第一种方式 通过快捷键 ctrl+<code>,打开的第二种方式</code>View &gt; Show Console menu`</li>
<li><p>如果您使用的是Sublime Text3则在打开的console面板中输入以下内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class="string">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>
<p>如果您使用的是Sublime Text2则在打开的console面板中输入以下内容:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2,os,hashlib; h = <span class="string">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class="string">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ipp) <span class="keyword">else</span> <span class="keyword">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> <span class="keyword">None</span>; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript学习]]></title>
    <link href="http://yoursite.com/2015/08/19/javascript_study/"/>
    <id>http://yoursite.com/2015/08/19/javascript_study/</id>
    <published>2015-08-19T09:14:07.000Z</published>
    <updated>2015-08-20T10:08:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="JavaScript可以放置的位置">JavaScript可以放置的位置</h3><ul>
<li>可以将js放置在<code>&lt;head&gt; &lt;/head&gt;</code>之间</li>
<li>可以将js放置在<code>&lt;body&gt; &lt;/body&gt;</code>之间</li>
<li>可以将js放置在<code>&lt;/body&gt; &lt;/html&gt;</code>之间</li>
</ul>
<h3 id="调试JavaScript的几种方法">调试JavaScript的几种方法</h3><ul>
<li>alert();</li>
<li>debugger;</li>
<li>使用window的onerror属性<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="axapta"></span><br><span class="line">window.onerror = function(sMsg, sUrl,sLine)&#123;</span><br><span class="line">	<span class="keyword">str</span> = <span class="string">""</span>;</span><br><span class="line">	<span class="keyword">str</span> += sMsg; <span class="preprocessor">#报错信息</span></span><br><span class="line">	<span class="keyword">str</span> += sUrl; <span class="preprocessor">#报错的当前url</span></span><br><span class="line">	<span class="keyword">str</span> += sLine; <span class="preprocessor">#报错的文件行数</span></span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意:每行语句的结尾以<code>;</code>结束.<br>单行注释<code>//</code>,多行注释<code>/* */</code><br>关键值不能作为变量和函数名<br><a id="more"></a></p>
</blockquote>
<h3 id="数据类型">数据类型</h3><ul>
<li>基本类型 undefined(未定义)、none(空对象)、boolean(true,false)、number(数值)、string(字符串)、object(对象)</li>
<li><p>包装类型 String、Boolean、Number</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var a = "string";</span><br><span class="line">alert(a.lenght); #输出6 其实基本类型中没有length属性,也没有t属性.为什么可以呢? 那是因为js会自动将基本类型转包装对象类型.使用完成会释放掉</span><br><span class="line">a.t = 3;#输出3</span><br><span class="line">alert(a.t) #输出undefined</span><br></pre></td></tr></table></figure>
</li>
<li><p>检测数据类型 </p>
<ul>
<li>基本类型和函数对象判断 <code>typeof xxx(返回字符串)</code><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/typeof.png" alt="typeof" title="typeof"></li>
<li>判断对象类型是基于原型链 instanceof(左操作数是对象 右操作数是函数对象或者函数构造器)、<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/instanceof.png" alt="instanceof" title="instanceof"></li>
<li><code>Object.prototype.toString</code><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/prototype1.png" alt="prototype1" title="prototype1"><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/prototype2.png" alt="prototype2" title="prototype2"></li>
<li><code>constructor</code></li>
<li><code>duck type</code></li>
</ul>
</li>
<li>可以将任何值转换为boolean值,使用Boolean(xxx) 转换之后是true还是false取决于转化的数据类型以及其实际值.字符串默认会转换为true</li>
<li>number包括整数和浮点数</li>
<li>NoN(not a number) 它有两个特点任何涉及到的NoN操作都会返回NoN,NoN值和其它任何值都不相等包括它自己本身都不会相等</li>
<li>通过Number()函数 可以转换为Number类型</li>
<li>parseInt()函数 可以将字符串转换为对应的整数</li>
<li>parseFloat()函数 可以将字符串转为对应的浮点数</li>
</ul>
<h3 id="变量(变量是存储信息的容器)">变量(变量是存储信息的容器)</h3><ul>
<li>使用 var 关键字来定义变量,不通过var来定义的变量我们默认为全局变量跟位置没关系</li>
<li>可以以字母、$、_ 开头</li>
<li>大小写敏感</li>
<li>先定义再使用</li>
<li>如果给没有定义的变量赋值时,JavaScript会自动定义这个变量,并且该变量会做为全局变量出现在JavaScript代码中</li>
<li>可以重复定义</li>
<li>可以在任意位置声明变量 </li>
<li>声明全局变量的时候可以不用var,但是声明局部变量的时候一定要用var 否则会视为全局变量的引用</li>
<li>变量的命名方法<ul>
<li>匈牙利命名法 类型+变量描述 例如:<code>var aData</code><ul>
<li><code>Array a</code></li>
<li><code>Boolean b</code></li>
<li><code>Float l</code></li>
<li><code>Function f</code></li>
<li><code>Integer n</code></li>
<li><code>Object o</code></li>
<li><code>String s</code></li>
</ul>
</li>
<li>驼峰命名法 例如: <code>print fEmployee()</code></li>
<li>帕思卡命名法  例如: <code>print BookInfo()</code></li>
</ul>
</li>
</ul>
<h3 id="运算符">运算符</h3><ul>
<li>算术运算符</li>
<li>赋值运算符</li>
<li>比较运算符<code>==(类型相同,同===.类型不同,尝试类型转换和比较 null==undefined、number == string转number、boolean == ? 会先将boolean转为数字 true转为1 false转为0、object==number|string 尝试对象转为基本类型)、===(类型不同,返回false null===null、undefined === undefined、NaN不等于NaN、new Object不等于new Object、[1,2]不等于[1,2])、&lt;、&gt;、&lt;=、&gt;=、!=</code></li>
<li>逻辑运算符<code>&amp;&amp; 也可以用and、|| 也可以用 or、! 也可以用not</code></li>
<li>条件运算符<code>? :</code></li>
</ul>
<h3 id="流程控制语句">流程控制语句</h3><ul>
<li>条件语句<ul>
<li><code>if else</code></li>
<li><code>switch(条件语句) case xxx: break; default: break;</code></li>
</ul>
</li>
<li>循环语句<ul>
<li>while循环</li>
<li>do…while循环</li>
<li>for循环</li>
<li>break和continue语句</li>
</ul>
</li>
</ul>
<h3 id="弹出窗口">弹出窗口</h3><ul>
<li><code>alert</code></li>
<li>confirm <code>if(confirm(&quot;确认操作&quot;)){document.write(&quot;您已确认&quot;)}else{document.write(&quot;您没有确认&quot;)}</code></li>
<li><p>prompt 第一个参数是提示语,第二个参数是默认内容 <code>var name = prompt(&quot;请输入您的名字:&quot;, &quot;weifeng&quot;); if(name){document.write(&quot;您的名字: &quot;+name)}</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"新开窗口"</span> <span class="attribute">name</span>=<span class="value">"open"</span> <span class="attribute">onclick</span>=<span class="value">"javascript:window.open('http://www.baidu.com/');"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"删除"</span> <span class="attribute">name</span>=<span class="value">"del"</span> <span class="attribute">onclick</span>=<span class="value">"return confirm("</span><span class="value">确认删除?");"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"删除"</span> <span class="attribute">name</span>=<span class="value">"del"</span> <span class="attribute">onclick</span>=<span class="value">"javascript:confirm("</span><span class="value">确认删除?");"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"刷新"</span> <span class="attribute">name</span>=<span class="value">"refresh"</span> <span class="attribute">onclick</span>=<span class="value">"javascript:window.location.reload();"</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>window.open(&#39;page.html&#39;, &#39;window_title&#39;, &#39;height=100,width=100&#39;)</code></p>
<blockquote>
<p>page.html 弹出窗口的文件名或网址<br>window_title 弹出窗口的title<br>width、height宽高<br>top距离屏幕上方的像素值<br>left距离屏幕左边的像素值<br>toolbar<br>scrollbars<br>resizeable  yes , no<br>location 是否显示地址栏 yes,no<br>status 是否显示状态栏 yes,no</p>
</blockquote>
</li>
</ul>
<h3 id="函数">函数</h3><ul>
<li>函数名大小写敏感</li>
<li>以function 开头</li>
<li>常用内置函数<ul>
<li><code>eval()</code> 接收一个参数 执行里面的字符串代码 <code>var sum=&quot;1+2&quot;; eval(sum)</code></li>
<li><code>parseInt()</code></li>
<li><code>parseFloat()</code></li>
<li><code>escape unescape</code> 将url编码和解码</li>
<li><code>isNaN</code> 检测一个字符串不是数字</li>
</ul>
</li>
</ul>
<hr>
<h3 id="数组">数组</h3><ul>
<li>可以存放多种类型的数据</li>
<li>可以根据数据的增加或者减少来调整数组的大小</li>
<li>创建数组<ul>
<li>构造函数创建:<ul>
<li><code>var a1 = new Array();</code></li>
<li><code>var a2 = new Array(5);</code></li>
<li><code>var a3 = new Array(4,&#39;hello&#39;,new Date());</code>#有三个值</li>
</ul>
</li>
<li>字面量:<ul>
<li>var a4 = [];</li>
<li>var a5 = [10];#当作数组的内容</li>
</ul>
</li>
<li>常用方法:<ul>
<li>join(char): <code>var a = new Array(1,2,3,4); doucment.write(a.join(&quot;,&quot;))</code> #输出1,2,3,4</li>
<li>slice(start,end) 用于返回数组中的一个片段或者子数组,如果只写一个参数则返回参数到结束部分,如果参数出现负数则从数组尾部开始计数,如果start大于end则会返回一个空数组,并且slice是返回一个新数组,不改变原来的数组.</li>
<li>concat(array) 连接2个数组 不改变原来的数组.</li>
<li>reverse() 逆序 改变原来的数组</li>
<li>sort() 可以自己定义函数 改变原来的数组 <code>var a3 = sort(function(v1,v2){return v1-v2;})</code></li>
<li>delete 删除数组中的某个元素,但是不会改变数组的长度 被删除的元素值为undefined     <code>del(a[1])</code></li>
<li>pop栈方法</li>
<li>push栈方法</li>
<li>shift 从数组索引最小的元素删除, 从头部开始取</li>
<li>unshift 从数组索引最小的元素添加</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="对象">对象</h3><ul>
<li>属性 <code>objectName.propertyName;</code></li>
<li>方法 <code>objectName.methodName();</code></li>
<li><p>创建JavaScript对象</p>
<ul>
<li><p>定义并创建对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">function Person(firstname,lastname)&#123;</span><br><span class="line">	this.firstname = firstname;</span><br><span class="line">	this.lastname = lastname;</span><br><span class="line">&#125;</span><br><span class="line">person = new Person('Bill','Gates');</span><br><span class="line"></span><br><span class="line">person = new Object();</span><br><span class="line">person.firstname = 'Bill';</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建直接的实例 <code>person = {firstname:&#39;bill&#39;, lastname:&#39;gates&#39;};</code></p>
</li>
<li>把属性添加到JavaScript对象 <code>personObj.firstname = &quot;Cat&quot;;</code></li>
<li><p>把方法添加到JavaScript对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">function Person(firstname,lastname)&#123;</span><br><span class="line">	this.firstname = firstname;</span><br><span class="line">	this.lastname = lastname;</span><br><span class="line">&#125;</span><br><span class="line">person = new Object();</span><br><span class="line">person.firstname = 'Bill';</span><br><span class="line"></span><br><span class="line">person.changeName = function(lastname)&#123;</span><br><span class="line">	this.lastname = lastname;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Prototype模式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">function Cat(name,color)&#123;</span><br><span class="line">	this.name = name;</span><br><span class="line">	this.color = color;</span><br><span class="line">&#125;</span><br><span class="line">Cat.prototype.type="猫科动物";</span><br><span class="line">Cat.prototype.eat=function()&#123;</span><br><span class="line">	alert('吃老鼠');</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>isPrototypeOf()</code></li>
<li><code>hasOwnPrototype()</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="Date">Date</h3><ul>
<li><code>var mDate = new Date();</code></li>
</ul>
<h3 id="window">window</h3><ul>
<li><code>window.open、window.close()、window.alert()、window.moveTo(x,y)、window.resizeTo(x,y)、window.scrollTo(x,y)、window.back()、window.forward()、window.foucs()</code></li>
<li>window子对象 <code>document、frames、history、location、navigator、screen</code><br><code>var width = window.innerwidth || document.documentElement.clientWidth || document.body.clientWidth;</code><br><code>var height = window.innerheight || document.documentElement.clientHeight || document.body.clientHeight;</code></li>
</ul>
<h3 id="Document">Document</h3><ul>
<li>document对象集合<ul>
<li><code>all()</code> 所有html元素访问的数组</li>
<li><code>anchors[]</code> 所有anchors引用的数组</li>
<li><code>forms[]</code> 使用form 名字或者 索引</li>
<li><code>links[]</code></li>
</ul>
</li>
<li>document对象属性<ul>
<li><code>document.cookie</code></li>
<li><code>document.domain</code></li>
<li><code>document.referer</code></li>
<li><code>document.title</code></li>
<li><code>document.bgColor</code></li>
<li><code>document.fgColor</code></li>
<li><code>document.linkColor</code></li>
<li><code>document.URL</code>  同一窗口打开另一窗口的url</li>
<li><code>document.fileCreatedDate</code></li>
<li><code>document.fileSize</code></li>
<li><code>document.charset</code></li>
</ul>
</li>
<li>常用对应方法<ul>
<li><code>write()</code></li>
<li><code>createElement(Tag)</code></li>
<li><code>getElementById()</code></li>
<li><code>geElementByName()</code></li>
</ul>
</li>
</ul>
<h3 id="定时器">定时器</h3><ul>
<li><code>var t = setTimeout(&quot;javascript函数语句&quot;,毫秒)</code> 指定多少毫秒后执行javascript语句,只执行一次</li>
<li><code>clearTimeout(t)</code></li>
<li><code>var d = setInterval(&quot;javascript函数语句&quot;,毫秒)</code> 每隔多少毫秒执行一次</li>
<li><code>clearInterval(d)</code></li>
</ul>
<h3 id="事件">事件</h3><ul>
<li>onclick onmouseOver onmouseout onload onunload onfocus(选取输入框的时候) onBlur(离开输入框的时候) onChange(输入框的值做更改的时候) onsubmit</li>
</ul>
<h3 id="Cookie">Cookie</h3><ul>
<li><code>document.cookie</code></li>
<li>大小不超过4kb,否则会返回空字符串</li>
<li>格式 cookiename = cookievalue</li>
<li><code>alert(typeof document.cookie);</code> #返回string</li>
</ul>
<h3 id="正则表达式">正则表达式</h3><ul>
<li>创建正则表达式<br>RegExp(“正则表达式”,”可选参数”)<br>g 全文查找<br>i 不考虑大小写<br>m 多长查找<br>或者使用字面量表示 <code>var re = /a/gi;</code></li>
<li>正则表达式的属性和方法<ul>
<li>source 返回正则表示中匹配文本的副本 它是只读属性</li>
<li>lastIndex 返回字符的位置 被查找字符串中下一次成功匹配的开始位置</li>
<li><code>$1 ~ $9</code> 它返回在九个模式匹配中找到的最近保存的部分 也是只读的.</li>
<li>input 执行规范表达式得到的字符串</li>
<li>lastMatch 返回任何正则表达式中 搜索过程中最后匹配的字符</li>
<li>lastParent 返回任何正则表达式中 直接查找过程中最后的子匹配</li>
<li>leftContext</li>
<li>rightContext</li>
<li>test</li>
<li>exec</li>
<li>compile</li>
</ul>
</li>
<li>String 对象一些和正则表达式相关的方法<ul>
<li>match</li>
<li>replace</li>
<li>search</li>
<li>split</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="JavaScript可以放置的位置">JavaScript可以放置的位置</h3><ul>
<li>可以将js放置在<code>&lt;head&gt; &lt;/head&gt;</code>之间</li>
<li>可以将js放置在<code>&lt;body&gt; &lt;/body&gt;</code>之间</li>
<li>可以将js放置在<code>&lt;/body&gt; &lt;/html&gt;</code>之间</li>
</ul>
<h3 id="调试JavaScript的几种方法">调试JavaScript的几种方法</h3><ul>
<li>alert();</li>
<li>debugger;</li>
<li>使用window的onerror属性<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="axapta"></span><br><span class="line">window.onerror = function(sMsg, sUrl,sLine)&#123;</span><br><span class="line">	<span class="keyword">str</span> = <span class="string">""</span>;</span><br><span class="line">	<span class="keyword">str</span> += sMsg; <span class="preprocessor">#报错信息</span></span><br><span class="line">	<span class="keyword">str</span> += sUrl; <span class="preprocessor">#报错的当前url</span></span><br><span class="line">	<span class="keyword">str</span> += sLine; <span class="preprocessor">#报错的文件行数</span></span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意:每行语句的结尾以<code>;</code>结束.<br>单行注释<code>//</code>,多行注释<code>/* */</code><br>关键值不能作为变量和函数名<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[HTML+CSS基础入门]]></title>
    <link href="http://yoursite.com/2015/08/18/html_study/"/>
    <id>http://yoursite.com/2015/08/18/html_study/</id>
    <published>2015-08-18T02:43:04.000Z</published>
    <updated>2015-08-19T09:13:08.000Z</updated>
    <content type="html"><![CDATA[<h3 id="使用CSS样式的方法">使用CSS样式的方法</h3><ul>
<li><p>HTML&lt;!DOCTYPE&gt;</p>
<ul>
<li>&lt;!DOCTYPE&gt;声明必须是HTML文档的第一行,位于<html>标签之前.</html></li>
<li>&lt;!DOCTYPE&gt;声明不是HTML标签,它是指示web浏览器关于页面使用哪个HTML版本进行编写的指令.</li>
<li>在HTML 4.01中,&lt;!DOCTYPE&gt;声明引用DTD,因为HTML4.01是基于SGML,DTD规定了标记语言的规则,这样浏览器才能正确的呈现内容.</li>
<li>HTML5不基于SGML,所以不需要一用DTD.</li>
<li>HTML5 <ul>
<li><code>&lt;!DOCTYPE html&gt; &lt;meta charset=&quot;utf-8&quot;&gt;</code></li>
</ul>
</li>
<li><p>HTML4.01</p>
<ul>
<li><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</code></li>
<li>该DTD包含所有HTML元素和属性,包括展示性和弃用的元素(比如font),不允许框架集(Framesets)</li>
<li><p><code>&lt;meta http-equiv=Content-Type content=&quot;text/html;charset=utf-8&quot;&gt;</code></p>
<blockquote>
<p>meat标签的http-equiv属性语法格式是:<code>＜meta http-equiv=&quot;参数&quot; content=&quot;参数变量值&quot;＞</code>;其中http-equiv属性主要有以下几种参数:<br>1.Expires(期限):可以用于设定网页的到期时间.一旦网页过期,必须到服务器上重新传输.<br>必须使用GMT的时间格式 <code>＜meta http-equiv=&quot;expires&quot; content=&quot;Wed, 20 Jun 2015 22:33:00 GMT&quot;＞</code><br>2.Pragma(cache模式):是用于设定禁止浏览器从本地机的缓存中调阅页面内容,设定后一旦离开网页就无法从Cache中再调出<br><code>＜meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;＞</code><br>3.Refresh(刷新):自动刷新并指向新页面<br><code>＜meta http-equiv=&quot;Refresh&quot; content=&quot;2; URL=http://www.net.cn/&quot;＞</code> #其中的2是指停留2秒钟后自动刷新到URL网址<br>4.Set-Cookie(cookie设定):如果网页过期,那么存盘的cookie将被删除<br><code>＜meta http-equiv=&quot;Set-Cookie&quot; content=&quot;cookievalue=xxx;expires=Wednesday, 20-Jun-2007 22:33:00 GMT; path=/&quot;＞</code> #必须使用GMT的时间格式<br>5.Window-target(显示窗口的设定):强制页面在当前窗口以独立页面显示<br><code>＜meta http-equiv=&quot;Window-target&quot; content=&quot;_top&quot;＞</code> #用来防止别人在框架里调用自己的页面<br>6.content-Type(显示字符集的设定):设定页面使用的字符集<br><code>＜meta http-equiv=&quot;content-Type&quot; content=&quot;text/html; charset=gb2312&quot;＞</code><br>7.Pics-label(网页等级评定)<br><code>&lt;meta http-equiv=&quot;Pics-label&quot; contect=&quot;&quot;&gt;</code> #在IE的internet选项中有一项内容设置,可以防止浏览一些受限制的网站,而网站的限制级别就是通过meta属性来设置的<br>8.Page_Enter、Page_Exit:设定进入页面时的特殊效果、设定离开页面时的特殊效果<br><code>&lt;meta http-equiv=&quot;Page-Enter&quot;    contect=&quot;revealTrans(duration=1.0,transtion=12)&quot;&gt;</code><br><code>&lt;meta http-equiv=&quot;Page-Exit&quot;    contect=&quot;revealTrans(duration=1.0,transtion=12)&quot;&gt;</code><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/meta_anim.png" alt="meta_anim" title="meta_anim"><br>9.清除缓存（再访问这个网站要重新下载!) <code>&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</code><br>10.设定网页的到期时间 <code>&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;</code><br>11.关键字,给搜索引擎用的 <code>&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</code><br>12.页面描述 <code>&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</code></p>
</blockquote>
</li>
<li><p>注意的规则:</p>
<ul>
<li>单标记必须闭合 比如<code>&lt;br&gt;必须写为&lt;br/&gt; &lt;input/&gt;</code></li>
<li>单属性必须添加属性值 <code>&lt;input type=&quot;radio&quot; checked&gt;</code> 必须写为 <code>&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt;</code></li>
<li>标记和属性必须使用小写 <code>&lt;Body&gt; &lt;BODY&gt;是错的必须写为&lt;body&gt;</code></li>
<li>属性的属性值必须使用”” 在HTML4.01之前可以使用<code>&lt;body bgcolor=red&gt;</code>,HTML4.01必须写为<code>&lt;body bgcolor=&quot;red&quot;&gt;</code><a id="more"></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>内链样式<ul>
<li>标签内 使用style,它的属性值使用双引号包裹起来,其里面属性和属性值之间用:分割,属性及属性值对之间使用;空格分隔开 </li>
<li><code>&lt;body style=&quot;background-color:red; color:#fff;&quot;&gt;</code></li>
</ul>
</li>
<li><p>嵌入式样式表</p>
<ul>
<li><code>&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code></li>
<li>需要将样式放在<head></head>中<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">	<span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">		<span class="rule"><span class="attribute">background-color</span>:<span class="value">red</span></span>;</span><br><span class="line">		<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">	&#125;</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>引入式样式表</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"StyleSheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>新建style.css文件添加如下内容<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">		background-color:red;</span><br><span class="line">		color:#fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="定义样式表">定义样式表</h3><ul>
<li>HTML标记定义<ul>
<li><code>&lt;p&gt;...&lt;/p&gt;</code></li>
<li>p{属性:属性值; 属性:属性值}</li>
<li>p可以叫做选择器,定义那个标记中的内容执行其中的样式</li>
<li>一个选择器可以控制若干个样式属性,他们之间需要用英语的<code>;</code>隔开,最后一个可以不加<code>;</code></li>
</ul>
</li>
<li><p>Class定义</p>
<ul>
<li><code>&lt;p class=&quot;pcs&quot;&gt;...&lt;/p&gt;</code></li>
<li>class 定义是以<code>.</code>开始</li>
<li>.pcs{属性:属性值; 属性:属性值}<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		<span class="class">.pcs</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value">green</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value">red</span><br><span class="line">		&#125;</span><br><span class="line">		.pcs p&#123;</span><br><span class="line">			color:red</span><br><span class="line">		&#125;</span><br><span class="line">		&lt;!--这里可以去掉.pcs直接用pcs2--&gt;</span><br><span class="line">		.pcs pcs2&#123;</span><br><span class="line">			color:yellow</span><br><span class="line">		&#125;</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"pcs"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">p</span>&gt;</span>测试内容1<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"pcs2"</span>&gt;</span>测试内容2<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">		测试内容3</span><br><span class="line">	<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>ID定义</p>
<ul>
<li>ID定义是以<code>#</code>开始的</li>
<li><code>#pcs{属性:属性值; 属性:属性值}</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		<span class="class">.pcs</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value">green</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value">red</span><br><span class="line">		&#125;</span><br><span class="line">		.pcs p&#123;</span><br><span class="line">			color:red</span><br><span class="line">		&#125;</span><br><span class="line">		&lt;!--这里可以去掉.pcs直接用pcs2--&gt;</span><br><span class="line">		.pcs pcs2&#123;</span><br><span class="line">			color:yellow</span><br><span class="line">		&#125;</span><br><span class="line">		&lt;!--控制了div--&gt;</span><br><span class="line">		#pcs3&#123;</span><br><span class="line">			color:blue</span><br><span class="line">		&#125;</span><br><span class="line">		&lt;!--控制了div中的h3标签--&gt;</span><br><span class="line">		#pcs3 h3&#123;</span><br><span class="line">			color:green</span><br><span class="line">		&#125;</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"pcs3"</span> <span class="attribute">class</span>=<span class="value">"pcs"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">h3</span>&gt;</span>测试内容1<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"pcs2"</span>&gt;</span>测试内容2<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">		测试内容3</span><br><span class="line">	<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>优先级问题</p>
<ul>
<li>ID&gt;Class&gt;HTML</li>
<li>同级时选择离元素最近一个的<ul>
<li><code>#p{color:red} #p{color:#f60}</code> 执行颜色为#f60的    <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		</span><br><span class="line">		<span class="tag">div</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value">red</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		.pcs&#123;</span><br><span class="line">			color:yellow</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		#pcs3&#123;</span><br><span class="line">			color:blue</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"pcs3"</span> <span class="attribute">class</span>=<span class="value">"pcs"</span>&gt;</span></span><br><span class="line">		测试内容</span><br><span class="line">	<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>组合选择器(同时控制多个元素)</p>
<ul>
<li>选择器组合可以使用<code>,</code>隔开</li>
<li>h1,h2,h3,h4{font-size:14px; color:red; }<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		</span><br><span class="line">		<span class="tag">h1</span>,<span class="tag">h2</span>,<span class="tag">h3</span>,<span class="tag">h4</span>,<span class="class">.cl</span>,<span class="id">#cl1</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value">red</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">h1</span>&gt;</span>测试内容1<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">h2</span>&gt;</span>测试内容2<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">h3</span>&gt;</span>测试内容3<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">h4</span>&gt;</span>测试内容4<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"cl"</span>&gt;</span>测试内容5<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"cl1"</span>&gt;</span>测试内容6<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>伪元素选择器</p>
<ul>
<li>a:link 正常连接的样式</li>
<li>a:hover 鼠标放上去的样式</li>
<li>a:active 选择连接到的样式</li>
<li>a:visited 已经访问过的链接样式<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		</span><br><span class="line">		<span class="rule"><span class="attribute">a</span>:<span class="value">link&#123;</span><br><span class="line">			color:red</span></span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="rule"><span class="attribute">a</span>:<span class="value">hover&#123;</span><br><span class="line">			color:yellow</span></span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="rule"><span class="attribute">a</span>:<span class="value">active&#123;</span><br><span class="line">			color:green</span></span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="rule"><span class="attribute">a</span>:<span class="value">visited&#123;</span><br><span class="line">			color:blue</span></span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://www.baidu.com/"</span> <span class="attribute">target</span>=<span class="value">"_blank"</span>&gt;</span>百度<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="CSS常见属性">CSS常见属性</h3><ul>
<li><p>颜色属性</p>
<ul>
<li>color属性定义文本的颜色</li>
<li>color:green</li>
<li>color:#ff6600</li>
<li>简写式 color:#f60</li>
<li>红、绿、蓝每个的取值范围0-255 color:rgb(255,255,255)</li>
<li>红、绿、蓝、Alpha color:rgba(255,255,255,1)</li>
</ul>
</li>
<li><p>字体属性</p>
<ul>
<li><p>font-size 字体大小</p>
<ul>
<li>px:设置一个固定的值</li>
<li>%:父元素的百分比</li>
<li>smaller:比父元素更小</li>
<li>larger:比父元素更大</li>
<li>inherit:继承父元素的<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		</span><br><span class="line">		<span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">20px</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">h1</span>,<span class="tag">h2</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">100%</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="class">.ha</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">100%</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">h1</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">font-size</span>:<span class="value">smaller</span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="class">.hb</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">200%</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		</span><br><span class="line">	</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">h1</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">h1</span> <span class="attribute">class</span>=<span class="value">"ha"</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">h2</span> <span class="attribute">class</span>=<span class="value">"hb"</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="title">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>font-family 定义字体</p>
<ul>
<li>font-family:微软雅黑,serif</li>
<li>可以使用<code>,</code>隔开,以确保当字体不存在的时候使用下一个</li>
</ul>
</li>
<li>font-weight 字体加粗<ul>
<li>normal(默认值),bold(粗),bolder(更粗),lighter(更细)</li>
<li>400=normal,而700=bold,100、200、300-900</li>
</ul>
</li>
<li>font-style 字体样式<ul>
<li>正常(normal)、斜体(italic)、倾斜(oblique)、继承(inherit)</li>
</ul>
</li>
<li>font-variant 小型大写字母显示文本 针对英文字符<ul>
<li>normal、small-caps(小型大写字母显示文本)、inherit</li>
</ul>
</li>
</ul>
</li>
<li><p>背景属性</p>
<ul>
<li>背景颜色background-color</li>
<li>背景图片background-image<ul>
<li>background-image:url(图片路径)</li>
<li>background-image:none</li>
</ul>
</li>
<li>背景重复background-repeat<ul>
<li>重复平铺满repeat</li>
<li>向X轴重复repeat-x</li>
<li>向Y轴重复repeat-y</li>
<li>不重复 no-repeat</li>
</ul>
</li>
<li>背景位置background-position (前面一个值是x轴,后面一个值是y轴)<ul>
<li>横向(left、center、right)</li>
<li>纵向(top、center、bottom)</li>
<li>background-position:20px,center; background-position:20px,20px;</li>
</ul>
</li>
<li>简写方式<ul>
<li>background(背景颜色) url(图片) 重复 位置</li>
<li>background:#f60 url:(/img/bg.jpg) no-repeat top center</li>
</ul>
</li>
</ul>
</li>
<li><p>文本属性</p>
<ul>
<li>text-align 横向排列 (left、center、right)</li>
<li>line-height 文本行高 <ul>
<li>%基于字体大小的百分比</li>
<li>数字设置固定值 px</li>
</ul>
</li>
<li>text-indent 首行缩进<ul>
<li>%父元素的百分比</li>
<li>px固定值,默认0</li>
<li>inherit继承</li>
</ul>
</li>
<li>letter-spacing 字符间距 中文<ul>
<li>normal 默认值</li>
<li>设置具体的数值(可以设置负值)</li>
<li>inherit 继承</li>
</ul>
</li>
<li>word-spacing 单词间距 英文<ul>
<li>normal 标准间距</li>
<li>px 固定值</li>
<li>inherit 继承</li>
</ul>
</li>
<li>direction<ul>
<li>ltr 从左到右 默认值</li>
<li>rtl 从右到左</li>
<li>inherit 继承</li>
</ul>
</li>
<li>text-transform 文本大小写<ul>
<li>每个单词以大写字母开始 capitalize</li>
<li>定义仅有大写字母 uppercase</li>
<li>定义无大写字母,仅有小写字母 lowercase</li>
<li>规定应该从父元素继承 text-transform属性的值 inherit</li>
</ul>
</li>
</ul>
</li>
<li><p>边框属性</p>
<ul>
<li>边框风格 border-style<ul>
<li>单独定义某一方向的边框样式<ul>
<li>border-bottom-style 下边边框样式</li>
<li>border-top-style 上边边框样式</li>
<li>border-left-style 左边边框样式</li>
<li>border-right-style 右边边框样式</li>
</ul>
</li>
<li>边框风格样式的属性:<ul>
<li>none 无边框</li>
<li>solid 直线边框</li>
<li>dashed 虚线边框</li>
<li>dotted 点状边框</li>
<li>double 双线边框</li>
<li>groove 凸槽边框</li>
<li>ridge 垄状边框</li>
<li>inset inset边框</li>
<li>outset outset边框</li>
<li>inhert 继承</li>
</ul>
</li>
</ul>
</li>
<li>边框宽度 border-width<ul>
<li>统一风格 border-width</li>
<li>单独风格 border-top-width、border-bottom-width、border-left-width、border-right-width</li>
<li>边框宽度的属性值 thin(细边框)、medium(中等边框)、thick(粗边框)、px(固定值的边框)、inherit(继承)</li>
</ul>
</li>
<li>边框颜色 border-color’<ul>
<li>统一风格 border-color</li>
<li>单独风格 border-top-color、border-bottom-color、border-left-color、border-right-color</li>
<li>属性值 RGB、RGBA、十六进制、继承inherit</li>
<li>属性值的四种情况<ul>
<li>一个值border-color:(上、下、左、右)</li>
<li>两个值border-color:(上下) 或者 border-color:(左右)</li>
<li>三个值 border-color:(上) (左右) (下)</li>
<li>四个值 border-color:(上) (右) (下) (左)</li>
</ul>
</li>
</ul>
</li>
<li>简写方式<ul>
<li>border:solid 20px black</li>
</ul>
</li>
</ul>
</li>
<li><p>列表属性(分为有序列表和无序列表)        </p>
<ul>
<li>标记的类型 list-style-type<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/序列标签.png" alt="tag" title="tag"></li>
<li>标记的位置 list-style-position<ul>
<li>inside 列表项目标记放置在文本以内,且环绕文本根据标记对齐</li>
<li>outside 默认值. 保持标记位于文本的左侧. 列表项目标记放置在文本以外,且环绕文本不根据标记对齐</li>
<li>inherit 规定应该从父元素继承 list-style-position 属性的值</li>
</ul>
</li>
<li>设置图像列表标记 list-style-image<ul>
<li>URL 图像的路径</li>
<li>none 默认.无图行被显示</li>
<li>inherit 规定应该从父元素继承 list-style-image 属性的值</li>
</ul>
</li>
<li>简写方式 list-style<ul>
<li>list-style:list-style-type list-style-position list-style-image</li>
<li>list-style:square inside url(‘/img/arrow.jpg’)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="DIV+CSS布局">DIV+CSS布局</h3><ul>
<li>div和span<ul>
<li>DIV和SPAN 在整个HTML标记中,没有任何意义,他们的存在就是为了应用CSS样式</li>
<li>DIV和SPAN的区别:span是内联元素(包裹内容), div是块级元素(默认占据一整行)</li>
</ul>
</li>
<li><p>盒模型</p>
<ul>
<li>margin 盒子外边距</li>
<li>padding 盒子内边距</li>
<li>border 盒子边框宽度</li>
<li>width 盒子宽度</li>
<li>height 盒子高度<br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/border.png" alt="border" title="border"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">title</span>&gt;</span>title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		</span><br><span class="line">		<span class="tag">div</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value">green</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">span</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value">green</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">border</span>:<span class="value">solid <span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">div</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">500px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">500px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">border</span>:<span class="value">solid <span class="number">10px</span></span><br><span class="line">		&#125;</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">div</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">span</span>&gt;</span>测试内容<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>布局相关的属性</p>
<ul>
<li><p>position 定位方式</p>
<ul>
<li><p>正常定位 <code>position:relative</code> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"uft-8"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">title</span>&gt;</span>DIV+Css布局(布局相关的属性)<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		<span class="tag">body</span><span class="rules">&#123;</span><br><span class="line">		<span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;</span><br><span class="line">		<span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="class">.div</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">300px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value">green</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">position</span>:<span class="value">relative</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">z-index</span>:<span class="value"><span class="number">1</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="tag">span</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#f60</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">position</span>:<span class="value">absolute</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">top</span>:<span class="value">-<span class="number">10px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">right</span>:<span class="value"><span class="number">0</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">			&lt;!--因为是根据父元素来定位所以设置z-index不起作用--&gt;</span><br><span class="line">			<span class="rule"><span class="attribute">z-index</span>:<span class="value"><span class="number">0</span></span></span>;</span><br><span class="line">		&#125;</span></span><br><span class="line">		<span class="class">.fixed</span><span class="rules">&#123;</span><br><span class="line">			<span class="rule"><span class="attribute">position</span>:<span class="value">fixed</span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#f60</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#fff</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">100px</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">z-index</span>:<span class="value"><span class="number">2</span></span></span>;</span><br><span class="line">			<span class="rule"><span class="attribute">display</span>:<span class="value">none</span><br><span class="line">		&#125;</span><br><span class="line">	</span></span></span></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"div"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">span</span>&gt;</span>浏览次数:123<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--根据浏览器窗口进行定位--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"fixed"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">li</span>&gt;</span>联系地址<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">li</span>&gt;</span>联系电话<span class="tag">&lt;/<span class="title">li</span>&gt;</span>	</span><br><span class="line">				<span class="tag">&lt;<span class="title">li</span>&gt;</span>联系人<span class="tag">&lt;/<span class="title">li</span>&gt;</span>		</span><br><span class="line">			<span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">br</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>要设置子元素相对于父元素定位的话,父元素必须设置为正常定位.也就是父元素的position设置为relative</p>
</blockquote>
</li>
<li><p>根据父元素来进行定位 <code>position:absolute</code></p>
</li>
<li>根据浏览器窗口进行定位 <code>position:fixed</code></li>
<li>没有定位 <code>position:static</code></li>
</ul>
</li>
<li><p>定位</p>
<ul>
<li>left(左)、rigth(右)、top(上)、bottom(下)离页面顶点的距离</li>
<li>有多个层的时候你可以根据先后顺序来设置<code>z-index:数字</code>大小(层覆盖先后顺序(优先级))</li>
</ul>
</li>
<li>display 显示属性<ul>
<li>层不显示 <code>display:none</code></li>
<li>块状显示,在元素后面换行,显示下一个块元素 <code>diaplay:block</code><blockquote>
<p>块元素可以设置宽度,而内联元素不可以(设置之后不起作用),多个div排列时一行显示一个div,而span则是包裹内容,不会进行换行,它是一个挨着一个排列的<br>通过给span内联元素设置<code>diaplay:block</code>可以让它换行,起到一行显示一个的效果.接下来设置width就起作用了(span 转 div 效果)<br>通过给div块元素设置<code>diaplay:inline</code>可以让它不换行,再去设置width就不起作用了(div 转 span 效果)</p>
</blockquote>
</li>
<li>内联显示,多个块可以显示在一行内 <code>display:inline</code></li>
</ul>
</li>
<li>float 浮动属性<ul>
<li>左浮动 <code>float:left</code></li>
<li>右浮动 <code>float:right</code></li>
</ul>
</li>
<li>清除浮动 clear<ul>
<li><code>clear:both</code></li>
</ul>
</li>
<li>溢出处理 overflow<ul>
<li>hidden隐藏超出层大小的内容 <code>overflow:hidden</code></li>
<li>scroll 无论内容是否超出层大小都添加滚动条 <code>overflow:scroll</code></li>
<li>auto 超出时自动添加滚动条 <code>overflow:auto</code></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="使用CSS样式的方法">使用CSS样式的方法</h3><ul>
<li><p>HTML&lt;!DOCTYPE&gt;</p>
<ul>
<li>&lt;!DOCTYPE&gt;声明必须是HTML文档的第一行,位于<html>标签之前.</li>
<li>&lt;!DOCTYPE&gt;声明不是HTML标签,它是指示web浏览器关于页面使用哪个HTML版本进行编写的指令.</li>
<li>在HTML 4.01中,&lt;!DOCTYPE&gt;声明引用DTD,因为HTML4.01是基于SGML,DTD规定了标记语言的规则,这样浏览器才能正确的呈现内容.</li>
<li>HTML5不基于SGML,所以不需要一用DTD.</li>
<li>HTML5 <ul>
<li><code>&lt;!DOCTYPE html&gt; &lt;meta charset=&quot;utf-8&quot;&gt;</code></li>
</ul>
</li>
<li><p>HTML4.01</p>
<ul>
<li><code>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</code></li>
<li>该DTD包含所有HTML元素和属性,包括展示性和弃用的元素(比如font),不允许框架集(Framesets)</li>
<li><p><code>&lt;meta http-equiv=Content-Type content=&quot;text/html;charset=utf-8&quot;&gt;</code></p>
<blockquote>
<p>meat标签的http-equiv属性语法格式是:<code>＜meta http-equiv=&quot;参数&quot; content=&quot;参数变量值&quot;＞</code>;其中http-equiv属性主要有以下几种参数:<br>1.Expires(期限):可以用于设定网页的到期时间.一旦网页过期,必须到服务器上重新传输.<br>必须使用GMT的时间格式 <code>＜meta http-equiv=&quot;expires&quot; content=&quot;Wed, 20 Jun 2015 22:33:00 GMT&quot;＞</code><br>2.Pragma(cache模式):是用于设定禁止浏览器从本地机的缓存中调阅页面内容,设定后一旦离开网页就无法从Cache中再调出<br><code>＜meta http-equiv=&quot;Pragma&quot; content=&quot;no-cache&quot;＞</code><br>3.Refresh(刷新):自动刷新并指向新页面<br><code>＜meta http-equiv=&quot;Refresh&quot; content=&quot;2; URL=http://www.net.cn/&quot;＞</code> #其中的2是指停留2秒钟后自动刷新到URL网址<br>4.Set-Cookie(cookie设定):如果网页过期,那么存盘的cookie将被删除<br><code>＜meta http-equiv=&quot;Set-Cookie&quot; content=&quot;cookievalue=xxx;expires=Wednesday, 20-Jun-2007 22:33:00 GMT; path=/&quot;＞</code> #必须使用GMT的时间格式<br>5.Window-target(显示窗口的设定):强制页面在当前窗口以独立页面显示<br><code>＜meta http-equiv=&quot;Window-target&quot; content=&quot;_top&quot;＞</code> #用来防止别人在框架里调用自己的页面<br>6.content-Type(显示字符集的设定):设定页面使用的字符集<br><code>＜meta http-equiv=&quot;content-Type&quot; content=&quot;text/html; charset=gb2312&quot;＞</code><br>7.Pics-label(网页等级评定)<br><code>&lt;meta http-equiv=&quot;Pics-label&quot; contect=&quot;&quot;&gt;</code> #在IE的internet选项中有一项内容设置,可以防止浏览一些受限制的网站,而网站的限制级别就是通过meta属性来设置的<br>8.Page_Enter、Page_Exit:设定进入页面时的特殊效果、设定离开页面时的特殊效果<br><code>&lt;meta http-equiv=&quot;Page-Enter&quot;    contect=&quot;revealTrans(duration=1.0,transtion=12)&quot;&gt;</code><br><code>&lt;meta http-equiv=&quot;Page-Exit&quot;    contect=&quot;revealTrans(duration=1.0,transtion=12)&quot;&gt;</code><br><img src="http://7xk9ih.com1.z0.glb.clouddn.com/meta_anim.png" alt="meta_anim" title="meta_anim"><br>9.清除缓存（再访问这个网站要重新下载!) <code>&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</code><br>10.设定网页的到期时间 <code>&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;</code><br>11.关键字,给搜索引擎用的 <code>&lt;meta http-equiv=&quot;keywords&quot; content=&quot;keyword1,keyword2,keyword3&quot;&gt;</code><br>12.页面描述 <code>&lt;meta http-equiv=&quot;description&quot; content=&quot;This is my page&quot;&gt;</code></p>
</blockquote>
</li>
<li><p>注意的规则:</p>
<ul>
<li>单标记必须闭合 比如<code>&lt;br&gt;必须写为&lt;br/&gt; &lt;input/&gt;</code></li>
<li>单属性必须添加属性值 <code>&lt;input type=&quot;radio&quot; checked&gt;</code> 必须写为 <code>&lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt;</code></li>
<li>标记和属性必须使用小写 <code>&lt;Body&gt; &lt;BODY&gt;是错的必须写为&lt;body&gt;</code></li>
<li>属性的属性值必须使用”” 在HTML4.01之前可以使用<code>&lt;body bgcolor=red&gt;</code>,HTML4.01必须写为<code>&lt;body bgcolor=&quot;red&quot;&gt;</code>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python 基础知识学习]]></title>
    <link href="http://yoursite.com/2015/08/17/basic-python-knowledge/"/>
    <id>http://yoursite.com/2015/08/17/basic-python-knowledge/</id>
    <published>2015-08-17T01:57:06.000Z</published>
    <updated>2015-08-17T07:44:06.000Z</updated>
    <content type="html"><![CDATA[<h3 id="将Python值转换为字符串的三种方式">将Python值转换为字符串的三种方式</h3><ul>
<li>str 它会把值转换为合理形式的字符串,以便用户可以理解 <code>print str(&#39;Hello,World!&#39;)</code> #输出为 Hello,World!</li>
<li>repr 会创建一个字符串,它以合法的Python表达式的形式来表示值 <code>print repr(&#39;Hello,World!&#39;)</code> #输出为 ‘Hello,World!’</li>
<li>用2个反引号`,但是在Python3.0中,已经不再使用反引号了.   </li>
</ul>
<h3 id="input和raw_input的区别">input和raw_input的区别</h3><ul>
<li>input会假设用户输入的是合法的Python表达式(当中变量来查找)</li>
<li>raw_input 它会把所用的输入当作原始数据,然后将其放入字符串中</li>
</ul>
<a id="more"></a>
<h3 id="长字符串">长字符串</h3><ul>
<li>使用一对三个单引号 或者一对三个双引号</li>
<li>一行之中最后一个字符用反斜线<code>\</code>,那么换行符本身就转义了,也就被忽略了.</li>
<li>有时候字符串中有特殊字符,这时候可能需要用到转义字符才能将特殊字符输出出来<ul>
<li>一种方式使用<code>\</code>进行转义例如 <code>print Let\&#39;s go!</code> #输出结果为 Let’s go!</li>
<li>第二种方式使用原始字符串 <code>print r&#39;Let\&#39;s go!</code> #输出结果为 Let\’s go!</li>
</ul>
</li>
</ul>
<h3 id="Python六种内建序列">Python六种内建序列</h3><ul>
<li>分别是列表、元组、字符串、Unicode字符串、buffer对象、xrang对象</li>
<li>列表和元组的区别: 列表可以修改,元组则不能</li>
<li>通用的序列操作<ul>
<li>索引 <code>从0开始递增,也可以从最后一个元素来查找,其位置编号是-1</code></li>
<li>分片 需要提供两个索引操作边界,第1个索引的元素是在包含在分片内的,而第2个则不包含在分片内</li>
<li>步长 步长为正数时从左往右取数,否则相反</li>
<li>序列相加 两种相同类型的序列才能进行连接操作,列表和字符串是无法连接在一起的.例如:<code>[1, 2, 3] + [4, 5, 6]</code> #[1, 2, 3, 4, 5, 6]</li>
<li>乘法 例如:<code>&quot;H&quot;*2</code> #HH  <code>[None]*3</code> #[None, None, None]</li>
<li>成员资格检查  in  例如: <code>&#39;p&#39; in permissions</code> #True</li>
<li>长度、最小值和最大值 len、min、max 例如:<code>max(2,3)</code> #3</li>
</ul>
</li>
<li>列表 <ul>
<li>list 函数 <code>list(&#39;Hello&#39;)</code> #[‘H’, ‘e’, ‘l’, ‘l’, ‘o’] ‘’.join(somelist)可以将由字符组成的列表转换为字符串</li>
<li>列表赋值 <code>x = [1, 2, 3] x[1] = 4</code> #[1, 4, 3]</li>
<li>删除元素 <code>del x[0]</code> #[4, 3]</li>
<li>分片赋值 <code>name = list(Perl) name[1:] = list(ython)</code> #[Python]  可以使用于原序列不等长的序列将分片替换 在不需要任何原有元素的情况下插入新的元素. 依次类推,通过分片赋值来删除元素也是可行的. <code>numbers = [1, 2, 3, 4, 5] numbers[1:4] = []</code> #[1, 5]</li>
<li>append 用于在列表末尾追加新的对象<code>lst = [1, 2, 3] lst.append(4)</code> #[1, 2, 3, 4]</li>
<li>count 用于统计某个元素在列表中出现的次数<code>[1, 2, 3, 4, 1, 5, 1].count(1)</code> #3</li>
<li>extend 可以在列表的末尾一次性追加另外一个序列中的多个值 <code>a = [1, 2, 3] b=[4, 5, 6] a.extend(b)</code> #[1, 2, 3, 4, 5, 6]<br>这个和<code>+</code>的区别是extend方法修改了被扩展的序列,而<code>+</code>它会返回一个全新的序列</li>
<li>index 用于从列表中找出某个值第一次匹配项的索引位置</li>
<li>insert 用于将对象插入到列表中<code>numbers = [1, 2, 3, 5] numbers.insert(3, &#39;four&#39;)</code> #[1, 2, 3, ‘four’, 5]</li>
<li>pop 移除列表中的一个元素(默认是最后一个), 并返回该元素的值 <code>x=[1, 2, 3] x.pop(0)</code> #[2, 3]</li>
<li>remove 用于移除列表中某个值的第一个匹配项<code>x = [&#39;to&#39;, &#39;be&#39;, &#39;or&#39;, &#39;not&#39;, &#39;to&#39;, &#39;be&#39;] x.remove[&#39;to&#39;]</code> #[‘be’, ‘or’, ‘not’, ‘to’,<br>‘be’]</li>
<li>reverse 将列表中的元素反向存放(改变了列表)</li>
<li>sort 用于在原位置对列表进行排序(改变了列表)</li>
<li>高级排序<ul>
<li>通过compare(x,y)的形式自定义比较函数.定义好该函数之后,就可以提供给sort方法作为参数了.内建函数cmp提供了比较函数的默认实现方式<code>numbers = [5, 2, 9 ,7] numbers.sort(cmp)</code> #[2, 5, 7, 9]</li>
<li>sort方法还有另外两个可选的参数—-key和reverse.参数key与参数cmp类似—-必须提供一个在排序过程中使用的函数.然后,该函数并不是直接用来确定对象的大小,而是为每个元素创建一个键,然后所有元素根据键来排序.因此,如果要根据元素的长度进行排序,那么可以用len作为键函数:<br><code>x = [&#39;aardvark&#39;, &#39;abalone&#39;, &#39;acme&#39;, &#39;add&#39;, &#39;aerate&#39;] x.sort(key=len)</code> #[‘add’, ‘acme’, ‘aerate’, ‘abalone’, ‘aardvark’]</li>
<li>另外一个参数reverse是简单的布尔值,用来指明列表是否要进行反向排序 <code>x = [4, 5, 6, 7] x.sort(reverse=True)</code> #[7, 6, 5, 4]</li>
</ul>
</li>
</ul>
</li>
<li>元组<ul>
<li><code>3*(40+2,)</code> #(42,42,42)</li>
<li>tuple 以一个序列作为参数并把它转换为元组.如果参数就是元组,那么该参数就被原样返回 <code>tuple([1, 2, 3])</code> #(1, 2, 3)</li>
</ul>
</li>
</ul>
<hr>
<h3 id="字符串string">字符串string</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">print</span> string.digits <span class="comment">#包含数字0~9的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.letters <span class="comment">#包含所有字母(小写和大写)的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.lowercase <span class="comment">#包含所有小写字母的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.printable <span class="comment">#包含所有可打印字符的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.punctuation <span class="comment">#包含所有标点的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.uppercase <span class="comment">#包含所有大写字母的字符串</span></span><br><span class="line"><span class="keyword">print</span> string.ascii_letters <span class="comment">#如果可以确定自己使用的是ASCII,那么可以在变量中使用ascii_前缀</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>find 查找子字符串所在位置,没找到则返回-1</p>
</li>
<li>join 它是split方法的逆方法,用来在队列中添加元素,需要添加的队列必须是字符串<code>seq=[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;] &#39;+&#39;.join(seq)</code> #’1+2+3’</li>
<li>lower 返回字符串的小写字母版 <code>&#39;Trondheim Hammer Dance&#39;.lower()</code> #’trondheim hammer dance’</li>
<li>将字符串中 单词首字母大写其余小写.使用title或者capwords <code>&quot;that&#39;s all,folks&quot;.title()</code> #That’S All,Folks   <code>string.capwords(&quot;that&#39;s all,folks&quot;)</code> #That’s All,Folks</li>
<li>replace 返回某字符串的所有匹配项均被替换之后得到字符串 <code>&#39;This is a test&#39;.replace(&#39;is&#39;, &#39;eez&#39;)</code> #Theez eez a test</li>
<li>split 它是join方法的逆方法 <code>&#39;1+2+3&#39;.split(&#39;+&#39;)</code> #[‘1’, ‘2’, ‘3’]</li>
<li>strip 返回去除两侧(不包括内部)空格的字符串</li>
</ul>
<hr>
<h3 id="字典">字典</h3><ul>
<li>dict函数,通过其它映射(比如字典)或者(键,值)这样的序列对建立字典</li>
<li>len(d)</li>
<li>d[k]</li>
<li>d[k]=v</li>
<li>del d[k]</li>
<li>k in d</li>
<li>字典的格式化字符串 %(键)其它说明元素 例如 <code>phonebook = {&#39;Beth&#39;: &#39;9102&#39;, &#39;Alice&#39;: &#39;2341&#39;, &#39;Cecil&#39;: &#39;3258&#39;} &quot;Cecil&#39;s phone number is %(Cecil)s. &quot; % phonebook</code></li>
<li>clear 清除字典中的所有项</li>
<li>copy 这个方法实现的是浅复制 返回一个具有相同键－值对的新字典,当在副本中替换值的时候,原始字典不受影响,但是,如果修改了某个值(例如remove),原始字典也会改变,可以使用深复制来解决这个问题 <code>import copy from deepcopy</code></li>
<li>fromkeys 使用给定的键键立新字典,每个键默认对应的值为None <code>{}.fromkeys([&#39;name&#39;,&#39;age&#39;])</code> #{‘name’: None, ‘age’: None}<br>如果不想使用None作为默认值,也可以自己提供默认值<code>{}.fromkeys([&#39;name&#39;,&#39;age&#39;], &#39;(unknown)&#39;)</code></li>
<li>get 根据提供的键查找对应的值如果不存在返回None,还可以自定义默认值,替换None <code>d.get(&#39;name&#39;, &#39;N/A&#39;)</code></li>
<li>has_key 检查字典中是否含有给出的键</li>
<li>items 将所有的字典项以列表方式返回,这些列表项中的每一项都来自于(键,值).但是项在返回时并没有特殊的顺序.<br><code>d = {&#39;name&#39;: &#39;Tom&#39;, &#39;age&#39;: 23} d.items()</code> #[(‘name’,’Tom’),(‘age’,23)]</li>
<li>iteritems 返回一个迭代器对象而不是列表 <code>it = d.iteritems() list(it)</code> #[(‘name’,’Tom’),(‘age’,23)]</li>
<li>pop 用于获取对应于给定键的值,然后将这个键-值对从字典中移除</li>
<li>popitem 弹出随机的项 然后将这个键-值对从字典中移除</li>
<li>setdefault 获得与给定键相关联的值,除此之外还能在字典中不含有给定键的情况下设定相应的键值 <code>d = {} d.setdefault(&#39;name&#39;,&#39;N/A&#39;)</code></li>
<li>update 利用一个字典项更新另外一个字典<code>d.update(x)</code> #用x来更新d 最后输出更新过的d</li>
<li>values和itervalues</li>
</ul>
<hr>
<h3 id="条件、循环和其他语句">条件、循环和其他语句</h3><ul>
<li>序列解包 <code>x, y ,z = 1, 2, 3</code></li>
<li>链式赋值 <code>x = y = somefunction()</code></li>
<li>增量赋值 <code>x +=1 fnord = &#39;foo&#39; fnord *= 2</code></li>
<li>下面的值在为布尔表达式的时候,会被解释器看作假(False) <code>False None 0 &quot;&quot; () [] {}</code></li>
<li><code>x is y</code> #x 和 y是同一个对象</li>
<li><code>x is not y</code> #x和y是不同的对象 </li>
<li><code>x in y</code> #x 是 y容器(例如,序列)的成员</li>
<li><code>x not in y</code> #x 不是 y容器(例如,序列)的成员</li>
<li>字符串和序列的比较,字符串可以按照字母顺序排列进行比较,<code>&quot;alpha&quot; &lt; &quot;beta&quot;</code> #True,序列类似</li>
<li>断言 assert <code>age = -1 assert 0&lt; age &lt; 100</code></li>
<li>并行迭代 内建的zip函数 可以将两个序列 “压缩” 在一起,然后返回一个元组的列表 <code>zip(names,ages)</code> #[(‘anne’,12),(‘george’,102)]<br>zip函数也可以作用于任意多的序列.关于它很重要的一点是zip可以应付不等长的序列,当最短的序列用完的时候就会停止.例如:<code>zip(rang(2), xrange(100000))</code> #[(0,0),(1,1)]</li>
<li><p>编号迭代 有时候想要迭代序列中的对象,同时还要获取当前对象的索引,可以使用enumerate函数 这个函数可以在提供索引的地方迭代索引－值对 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> index, string <span class="keyword">in</span> enumerate(strings):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'xxx'</span> <span class="keyword">in</span> string:</span><br><span class="line">        strings[index] = <span class="string">'[censored]'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>翻转和排序迭代</p>
<ul>
<li>reversed和sorted 它们同列表的reverse和sort(sorted和sort使用同样的参数)方法类似,但作用于任何序列或可迭代对象上,不是原地修改对象,而是返回翻转<br>或排序后的版本,最后返回列表</li>
</ul>
</li>
<li>列表推导式 <code>[x*x for x in range(10) if x % 3 == 0]</code> #[0, 9, 36, 81] 也可以增加更多的for语句</li>
<li><p>什么都没发生 Python中空代码块是非法的. 解决方法就是在语句块中加上一个pass语句</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> name = <span class="string">'Ralph'</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Welcome!'</span></span><br><span class="line"><span class="keyword">elif</span> name == <span class="string">'Enid'</span>:</span><br><span class="line">    <span class="comment">#还没写完</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">elif</span> name = <span class="string">'Bill'</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Access Denied'</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用del删除,它不仅会移除一个对象的引用,也会移除那个名字本身 <code>x = 1 del x</code> 看起来很简单,但理解起来有些难度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [<span class="string">'Hello'</span>, <span class="string">'World'</span>]</span><br><span class="line">y = x</span><br><span class="line">y[<span class="number">1</span>] = <span class="string">'Python'</span></span><br><span class="line"><span class="keyword">del</span> x</span><br><span class="line">y</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>最后输出y是[‘Hello’, ‘Python’],为什么会这样呢？x和y豆指向同一个列表.但是删除x并不会影响y.原因就是删除的只是名称,而不是列表本身(值).事实上,在Python中是没办法删除值的(也不需要过多考虑删除值的问题,因为在某个值不再使用的时候,Python解释器会负责内存的回收).</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="将Python值转换为字符串的三种方式">将Python值转换为字符串的三种方式</h3><ul>
<li>str 它会把值转换为合理形式的字符串,以便用户可以理解 <code>print str(&#39;Hello,World!&#39;)</code> #输出为 Hello,World!</li>
<li>repr 会创建一个字符串,它以合法的Python表达式的形式来表示值 <code>print repr(&#39;Hello,World!&#39;)</code> #输出为 ‘Hello,World!’</li>
<li>用2个反引号`,但是在Python3.0中,已经不再使用反引号了.   </li>
</ul>
<h3 id="input和raw_input的区别">input和raw_input的区别</h3><ul>
<li>input会假设用户输入的是合法的Python表达式(当中变量来查找)</li>
<li>raw_input 它会把所用的输入当作原始数据,然后将其放入字符串中</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Django入门学习]]></title>
    <link href="http://yoursite.com/2015/08/13/use-django-create-db/"/>
    <id>http://yoursite.com/2015/08/13/use-django-create-db/</id>
    <published>2015-08-13T09:20:50.000Z</published>
    <updated>2015-08-14T09:55:16.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Python连接并使用MySQL">Python连接并使用MySQL</h3><ul>
<li>在此之前得先安装MySQL,如果安装好了可以跳过,直接进入安装MySQL-Python,不然会出现<code>EnvironmentError: mysql_config not found</code>错误</li>
<li><code>brew install mysql</code></li>
<li>将MySQL添加到系统环境变量中去 <code>export PATH=$PATH:/usr/local/Cellar/mysql/5.6.25/bin</code> 或者 <code>export PATH=$PATH:/usr/local/opt/mysql/bin</code></li>
<li>使用pip活着easy_install安装MySQL-Python <code>pip install MySQL-Python</code> 或者 <code>sudo easy_install MySQL-Python</code>.<a id="more"></a>
<img src="http://7xk9ih.com1.z0.glb.clouddn.com/install_mysql.png" alt="MySQL" title="MySQL"></li>
</ul>
<h3 id="启动MySQL">启动MySQL</h3><ul>
<li><code>mysql.server start</code></li>
</ul>
<h3 id="使用MySQL并创建数据库">使用MySQL并创建数据库</h3><ul>
<li><code>mysql -uroot #以root用户身份登陆</code></li>
<li>创建数据库并设置字符集 <code>create database 数据库名 default charset = utf8;</code></li>
<li>显示所有数据库 <code>show databases;</code></li>
<li>使用某个数据库 <code>use 数据库名;</code></li>
<li>显示所有该数据库下的表 <code>show tables;</code></li>
<li>显示某张表数据结构 <code>desc 表名;</code></li>
</ul>
<h3 id="创建项目和app">创建项目和app</h3><ul>
<li><code>django-admin.py startproject 项目名</code></li>
<li><code>django-admin.py startapp app名</code></li>
<li><p>修改/项目名/项目名/settings.py和urls.py</p>
<ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">   <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">   <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">   <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">   <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">   <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">   <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">   <span class="string">'blog'</span>,</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">   DATABASES = &#123;</span><br><span class="line">   <span class="string">'default'</span>: &#123;</span><br><span class="line">       <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>, <span class="comment">#如果使用sqlite3 则将mysql改为sqlite3</span></span><br><span class="line">       <span class="string">'NAME'</span>: <span class="string">'数据库名'</span>, <span class="comment">#如果使用的是sqlite3则NAME为数据库文件名例如:test.db 下面的几项就不用设定了</span></span><br><span class="line">       <span class="string">'USER'</span>: <span class="string">'root'</span>,</span><br><span class="line">       <span class="string">'PASSWORD'</span>: <span class="string">''</span>,</span><br><span class="line">       <span class="string">'HOST'</span>: <span class="string">''</span>,</span><br><span class="line">       <span class="string">'PORT'</span>: <span class="string">''</span>,</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">       <span class="string">'DIRS'</span>: [BASE_DIR+<span class="string">"/templates"</span>],</span><br><span class="line">       <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br><span class="line">       <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">           <span class="string">'context_processors'</span>: [</span><br><span class="line">               <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">               <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">               <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">               <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">           	],</span><br><span class="line">       	&#125;,</span><br><span class="line">   	&#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li><p>urls.py 修改参见上篇blog</p>
</li>
</ul>
</li>
</ul>
<h3 id="修改blog目录下models-py文件_创建django_employee表">修改blog目录下models.py文件 创建django_employee表</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://7xk9ih.com1.z0.glb.clouddn.com/syncdb.png" alt="models" title="models"></p>
<ul>
<li><code>python manage.py makemigrations</code></li>
<li><code>python manage.py migrate</code></li>
<li>查看数据库是不是已经成功添加了django_employee表呢</li>
</ul>
<h3 id="插入数据的三种方式">插入数据的三种方式</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> Employee</span><br><span class="line">emp = Employee()</span><br><span class="line">emp.name = <span class="string">'Alen'</span></span><br><span class="line">emp.save()  <span class="comment">#第一种</span></span><br><span class="line"></span><br><span class="line">emp = Employee(name=<span class="string">'Tom'</span>)</span><br><span class="line">emp.save()  <span class="comment">#第二种</span></span><br><span class="line"></span><br><span class="line">Employee.objects.create(name=<span class="string">'Max'</span>)  <span class="comment">#第三种</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="查询数据">查询数据</h3><ul>
<li><code>emps = Employee.objects.all()</code></li>
</ul>
<h3 id="多对一">多对一</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment">#one</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Entry</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"><span class="comment">#many</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Blog</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    entry = models.ForeigenKey(Entry)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure>
</li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#先将one创建出来,然后many对应的记录创建出来</span></span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> Entry,Blog</span><br><span class="line"></span><br><span class="line">entry1 = Entry.objects.create(name=<span class="string">'Max'</span>) </span><br><span class="line">entry2 = Entry.objects.create(name=<span class="string">'Alen'</span>) </span><br><span class="line">entry3 = Entry.objects.create(name=<span class="string">'Tom'</span>)</span><br><span class="line"></span><br><span class="line">blog1 =  Blog.objects.create(name=<span class="string">'Alen_blog'</span>,entry=entry1) </span><br><span class="line"><span class="comment">#检索</span></span><br><span class="line">blog1.entry <span class="comment">#&lt;Entry:Max&gt;</span></span><br><span class="line">blog1.entry_id <span class="comment">#1L</span></span><br><span class="line">entry1.blog_set.all() <span class="comment">#[&lt;Blog:Alen_blog&gt;]</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Django_Admin_通过后台界面如何对数据库的基本管理和对用户的添加以及用户相应权限的基本操作">Django Admin 通过后台界面如何对数据库的基本管理和对用户的添加以及用户相应权限的基本操作</h3><ul>
<li>创建项目 和 app 修改settings.py 数据库修改为sqlite3其它地方修改类似,修改urls.py 增加admin.autodiscover()其它地方修改类似</li>
<li><p>修改models.py文件<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line">sex_choices = ((<span class="string">'f'</span>, <span class="string">'famale'</span>), (<span class="string">'m'</span>, <span class="string">'male'</span>))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    sex = models.CharField(max_length=<span class="number">1</span>, choices=sex_choices)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>修改你创建的app目录下的admin.py文件注册相关的model <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line">admin.site.register(User)</span><br></pre></td></tr></table></figure></p>
</li>
</ul>
<h3 id="多对多">多对多</h3><ul>
<li><p>会产生三张表分别为blog_author和blog_book以及blog_book_authors </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line">   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Author</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Book</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    name = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    authors = models.ManyToManyField(Author)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建Author和Book </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Author.objects.create(name=<span class="string">'Alen'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Ben'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Carl'</span>)</span><br><span class="line">Author.objects.create(name=<span class="string">'Dev'</span>)</span><br><span class="line"></span><br><span class="line">authors = Author.objects.all()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1 = Book()</span><br><span class="line">b1.name = <span class="string">'python book1'</span></span><br><span class="line">b1.save()</span><br><span class="line">alen = Author.objects.get(name__exact=<span class="string">'Alen'</span>)</span><br><span class="line">b1.authors.add(alen) <span class="comment">#添加</span></span><br><span class="line">b1.authors.add(authors[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">alen.book_set.all() <span class="comment">#alen所写的所有书</span></span><br><span class="line"></span><br><span class="line">b1.authors.all() <span class="comment">#[&lt;Author:Alen&gt;, &lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">b1.authors.remove(alen) <span class="comment">#删除Alen对象</span></span><br><span class="line">b1.authors.all() <span class="comment">#[&lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">b1.authors.filter(name__exact=<span class="string">'Ben'</span>) <span class="comment">#根据name过滤 [&lt;Author:Ben&gt;]</span></span><br><span class="line"></span><br><span class="line">alen_book_set.all() <span class="comment">#[]</span></span><br><span class="line">alen_book_set.add(b1)</span><br><span class="line">alen_book_set_create(name=<span class="string">"python book2"</span>) <span class="comment">#添加一本书</span></span><br><span class="line">books = Book.objects.all() <span class="comment">#[&lt;Book:python book1&gt;, &lt;Book:python book2&gt;]</span></span><br><span class="line">alen_book_set_remove(books[<span class="number">0</span>]) <span class="comment">#移除一本书 [&lt;Book:python book2&gt;]</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Django上传文件">Django上传文件</h3><ul>
<li>第一种方式通过表单来上传文件 打开settings.py 注释掉MIDDLEWARE_CLASSES 中的 <code>&#39;django.middleware.csrf.CsrfViewMiddleware&#39;</code></li>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcut <span class="keyword">import</span> render_to_response</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserForm</span><span class="params">(forms.Form)</span>:</span> <span class="comment">#创建form对象</span></span><br><span class="line">    name = forms.CharField()</span><br><span class="line">    headImg = forms.FileField() <span class="comment">#上传文件 form 表单上必须加上enctype="multipart/form-data"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.method == <span class="string">'POST'</span>:</span><br><span class="line">        form = UserForm(req.POST,req.FILES) <span class="comment">#数据的绑定</span></span><br><span class="line">        <span class="keyword">if</span> form.is_valid(): <span class="comment">#数据的验证 对字段验证是否存在是否正确</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data <span class="comment">#数据的保存  保存到cleaned_data字典中 print form.cleaned_data['name']</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data[<span class="string">'headImg'</span>].name  <span class="comment">#获取上传文件的文件名 req.FILES</span></span><br><span class="line">            <span class="keyword">print</span> form.cleaned_data[<span class="string">'headImg'</span>].size  <span class="comment">#获取上传文件的大小</span></span><br><span class="line">            fp = file(<span class="string">'/upload/'</span>+form.cleaned_data[<span class="string">'headImg'</span>].name, <span class="string">'wb'</span>)</span><br><span class="line">            content = form.cleaned_data[<span class="string">'headImg'</span>].read()</span><br><span class="line">            fp.write(content)</span><br><span class="line">            fp.close()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'ok'</span>) <span class="comment">#返回数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            form = UserForm()</span><br><span class="line">        <span class="keyword">return</span> render_to_response(<span class="string">'register.html'</span>,&#123;<span class="string">'form'</span>:form&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>第二种方式通过后台来上传文件 修改models.py文件 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    username = models.CharField(max_length=<span class="number">20</span>)</span><br><span class="line">    headImg = models.FileField(upload_to=<span class="string">'./upload/'</span>) <span class="comment">#修改保存路径 settings.py 增加MEDIA_ROOT='/headImg'  这个是保持到了系统根目录下最终的路径是/headImg/upload/,如果没有修改则保持在工程目录upload下</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.username</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>第三种方式将上传数据保存到数据库 <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> forms</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcut <span class="keyword">import</span> render_to_response</span><br><span class="line"><span class="keyword">from</span> blog.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserForm</span><span class="params">(forms.Form)</span>:</span> <span class="comment">#创建form对象</span></span><br><span class="line">    name = forms.CharField()</span><br><span class="line">    password = forms.CharField(widget=forms.PasswordInput)</span><br><span class="line">    headImg = forms.FileField() <span class="comment">#上传文件 form 表单上必须加上enctype="multipart/form-data"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reg</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> req.method == <span class="string">'POST'</span>:</span><br><span class="line">        form = UserForm(req.POST,req.FILES) <span class="comment">#数据的绑定</span></span><br><span class="line">        <span class="keyword">if</span> form.is_valid(): <span class="comment">#数据的验证 对字段验证是否存在是否正确</span></span><br><span class="line">            username = form.cleaned_data[<span class="string">'name'</span>]</span><br><span class="line">            file = form.cleaned_data[<span class="string">'headImg'</span>]</span><br><span class="line">            user = User()</span><br><span class="line">            user.username = username</span><br><span class="line">            user.headImg = file</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> HttpResponse(<span class="string">'ok'</span>) <span class="comment">#返回数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            form = UserForm()</span><br><span class="line">        <span class="keyword">return</span> render_to_response(<span class="string">'register.html'</span>,&#123;<span class="string">'form'</span>:form&#125;)</span><br></pre></td></tr></table></figure></p>
</li>
</ul>
<h3 id="Django会话">Django会话</h3><ul>
<li>Cookie<ul>
<li>跳转动作 <code>HttpResponseRedirect(&#39;/login/&#39;)</code></li>
<li>response.set_cookie(‘username’,username,3600) ＃设置Cookie</li>
<li>删除Cookie response.delete_cookie(‘username’) </li>
<li>获取Cookie req.COOKIES.get(‘username’,’’)</li>
</ul>
</li>
<li>Session<ul>
<li>使用session需要中间件的支持 <code>MIDDLEWARE_CLASSES = (&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;)</code></li>
<li>req.session[‘username’] = username #以字典的形式保存</li>
<li>req.session.get(‘username’, ‘default’) #获取session值</li>
<li>del req.session[‘username’] #删除指定的session</li>
</ul>
</li>
</ul>
<h3 id="用户管理_Auth系统使用">用户管理 Auth系统使用</h3><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line">User.objects.create_user(username=<span class="string">'ben'</span>, password=<span class="string">'123'</span>, email=<span class="string">'ben@qq.com'</span>) <span class="comment">#添加用户</span></span><br><span class="line"></span><br><span class="line">ben = User.objects.get(username__exact=<span class="string">'ben'</span>) <span class="comment">#获取指定名称的用户</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Python连接并使用MySQL">Python连接并使用MySQL</h3><ul>
<li>在此之前得先安装MySQL,如果安装好了可以跳过,直接进入安装MySQL-Python,不然会出现<code>EnvironmentError: mysql_config not found</code>错误</li>
<li><code>brew install mysql</code></li>
<li>将MySQL添加到系统环境变量中去 <code>export PATH=$PATH:/usr/local/Cellar/mysql/5.6.25/bin</code> 或者 <code>export PATH=$PATH:/usr/local/opt/mysql/bin</code></li>
<li>使用pip活着easy_install安装MySQL-Python <code>pip install MySQL-Python</code> 或者 <code>sudo easy_install MySQL-Python</code>.]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 下安装Django]]></title>
    <link href="http://yoursite.com/2015/08/13/install-django/"/>
    <id>http://yoursite.com/2015/08/13/install-django/</id>
    <published>2015-08-13T01:37:17.000Z</published>
    <updated>2015-08-13T02:42:27.000Z</updated>
    <content type="html"><![CDATA[<h3 id="首先讲讲Mac_命令行中如何用sublime打开指定文件">首先讲讲Mac 命令行中如何用sublime打开指定文件</h3><ul>
<li>其实打开文本文件有很多方式,比如命令行下<code>open -e xxx.txt</code>,或者使用vim,今天我们讲讲命令行中使用sublime打开文本文件<ul>
<li>下载Sublime Text</li>
<li>打开终端敲入以下命令 <code>ln -s /Applications/Sublime\ Text\.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl</code></li>
<li>最后我们就可以直接在终端下敲入 <code>subl xxx.txt</code> 就可以打开指定的文本文件了</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="下载Django">下载<a href="https://www.djangoproject.com/download/" target="_blank" rel="external">Django</a></h3><ul>
<li><p>从<a href="https://www.djangoproject.com/download/" target="_blank" rel="external">Django</a>官网下载安装包<a href="https://www.djangoproject.com/m/releases/1.8/Django-1.8.3.tar.gz" target="_blank" rel="external">Django-1.8.3.tar.gz</a>,解压安装包,打开终端进入压缩包目录使用命令进行安装<code>sudo python setup.py install</code></p>
</li>
<li><p>或者使用pip进行安装 <code>pip install Django==1.8.3</code></p>
</li>
</ul>
<h3 id="创建配置并运行工程">创建配置并运行工程</h3><ul>
<li><code>django-admin.py startproject DjangoProject</code> <ul>
<li><h1 id="DjangoProject为你创建的工程名称">DjangoProject为你创建的工程名称</h1></li>
</ul>
</li>
<li><code>cd DjangoProject</code> 修改目录下的settings.py和urls.py文件</li>
<li><p>修改settings.py文件 </p>
<ul>
<li><h1 id="当前目录为/DjangoProject/DjangoProject/settings-py">当前目录为/DjangoProject/DjangoProject/settings.py</h1><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'blog'</span>,</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = <span class="string">'zh-cn'</span></span><br><span class="line"></span><br><span class="line">TIME_ZONE = <span class="string">'Asia/shanghai'</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>修改urls.py文件 </p>
<ul>
<li><h1 id="当前目录为/DjangoProject/DjangoProject/urls-py">当前目录为/DjangoProject/DjangoProject/urls.py</h1><ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">   url(<span class="string">r'^blog/index/$'</span>,<span class="string">'blog.views.index'</span>),</span><br><span class="line">   url(<span class="string">r'^admin/'</span>, include(admin.site.urls)),</span><br><span class="line"> ]</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>返回上级目录创建blog项目 </p>
<ul>
<li><code>#当前目录为/DjangoProject 而不是/DjangoProject/DjangoProject/否则会出错</code></li>
<li><code>django-admin.py startapp blog</code></li>
<li>进入blog目录并修改views.py<ul>
<li><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(req)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">'hello,welcome to Django!'</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
<li><p>返回到最顶层目录</p>
<ul>
<li><code>当前目录为/DjangoProject</code></li>
<li>启动服务 <code>python manage.py runserver</code></li>
</ul>
</li>
<li><p>打开浏览器输入 <a href="http://127.0.0.1:8000/blog/index/" target="_blank" rel="external">http://127.0.0.1:8000/blog/index/</a></p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="首先讲讲Mac_命令行中如何用sublime打开指定文件">首先讲讲Mac 命令行中如何用sublime打开指定文件</h3><ul>
<li>其实打开文本文件有很多方式,比如命令行下<code>open -e xxx.txt</code>,或者使用vim,今天我们讲讲命令行中使用sublime打开文本文件<ul>
<li>下载Sublime Text</li>
<li>打开终端敲入以下命令 <code>ln -s /Applications/Sublime\ Text\.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl</code></li>
<li>最后我们就可以直接在终端下敲入 <code>subl xxx.txt</code> 就可以打开指定的文本文件了</li>
</ul>
</li>
</ul>]]>
    
    </summary>
    
  </entry>
  
</feed>